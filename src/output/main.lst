mads 2.1.7
  1229 					opt l+
   111 = 0000				?EXTDETECT = 0
   112 = 0000				?VBXDETECT = 0
   113
   114 0C75				RCASM 'dlists/dlist_console.asm' DL_CONSOLE_ADR 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCASM [Source: resource.asm]
     2 0C75				org RESORIGIN
     4 = 0020			len = .sizeof(_DL_CONSOLE_ADR)
     6 				mcpy	ift main.DL_CONSOLE_ADR+len >= $bc20
     7 0C75 A9 00 8D 2F 02		mva #0 sdmctl
     8 0C7A 8D 00 D4			sta dmactl
    11 0C7D 20 41 0C			jsr sys.off
    13 0C80 A9 9E 85 88 A9 0C +  MWA #DATA EDX
    13 0C88 A9 00 85 8C A9 FC +  MWA #MAIN.DL_CONSOLE_ADR ECX
    13 0C90 A9 20 85 84 A9 00 +  MWA #LEN EAX
    13 0C98 20 00 0C		 JSR RESOURCE.MEMCPY
    15 0C9B 4C 65 0C			jmp sys.on
    16 0C9E			data
Source: dlist_console.asm
     1 = 0000			DL_BLANK1 = 0; // 1 blank line
     2 = 0010			DL_BLANK2 = %00010000; // 2 blank lines
     3 = 0020			DL_BLANK3 = %00100000; // 3 blank lines
     4 = 0030			DL_BLANK4 = %00110000; // 4 blank lines
     5 = 0040			DL_BLANK5 = %01000000; // 5 blank lines
     6 = 0050			DL_BLANK6 = %01010000; // 6 blank lines
     7 = 0060			DL_BLANK7 = %01100000; // 7 blank lines
     8 = 0070			DL_BLANK8 = %01110000; // 8 blank lines
    10 = 0080			DL_DLI = %10000000; // Order to run DLI
    11 = 0040			DL_LMS = %01000000; // Order to set new memory address
    12 = 0020			DL_VSCROLL = %00100000; // Turn on vertical scroll on this line
    13 = 0010			DL_HSCROLL = %00010000; // Turn on horizontal scroll on this line
    15 = 0002			DL_MODE_40x24T2 = 2; // Antic Modes
    16 = 0004			DL_MODE_40x24T5 = 4;
    17 = 0005			DL_MODE_40x12T5 = 5;
    18 = 0006			DL_MODE_20x24T5 = 6;
    19 = 0007			DL_MODE_20x12T5 = 7;
    20 = 0008			DL_MODE_40x24G4 = 8;
    21 = 0009			DL_MODE_80x48G2 = 9;
    22 = 000A			DL_MODE_80x48G4 = $A;
    23 = 000B			DL_MODE_160x96G2 = $B;
    24 = 000C			DL_MODE_160x192G2 = $C;
    25 = 000D			DL_MODE_160x96G4 = $D;
    26 = 000E			DL_MODE_160x192G4 = $E;
    27 = 000F			DL_MODE_320x192G2 = $F;
    29 = 0001			DL_JMP = %00000001; // Order to jump
    30 = 0041			DL_JVB = %01000001; // Jump to begining
     9 = C800			TXT_ADDRESS = $c800;
    10 = CC00			MAINFONT_ADR = $cc00;
    14 = D800			PMG_BASE_ADR = $d800;
    20 = F000			MAP_FNT_ADDRESS = $f000;
    21 = F400			MAP_SCR_ADDRESS = $f400;
    22 = F800			LOC_MAP_ADR = $f800; // could be used as second font 
    23 = FC00			DL_CONSOLE_ADR = $fc00; // $1f bytes as is
    24 = FC40			DL_BLACK_CONSOLE_ADR = $fc40; //$6 bytes as is
    25 = FC80			DL_MAP_ADR = $fc80; // $1f bytes as is 
    28 = 1FFA			XEX_ADDRESS = $2000-6; //?
    37 FC00			dl_start
    38 FC00 F0			    dta DL_DLI + DL_BLANK8                                        ; // 8 blank line
    39 FC01 70			    dta DL_BLANK8
    40 FC02 70			    dta DL_BLANK8
    41 FC03 70			    dta DL_BLANK8
    42 FC04 42 00 C8		    dta DL_MODE_40x24T2 + DL_LMS, a(TXT_ADDRESS)                  ; // mode 0 line + text memory start
    43 FC07 02 02 02 02 02 02 +     :22 dta DL_MODE_40x24T2                                       ; // x mode 0 line
    44 FC1D 41 00 FC		    dta DL_JVB, a(dl_start)                                       ; // jump to beginning
    23 					.print '$R RCASM   ',main.DL_CONSOLE_ADR,'..',main.DL_CONSOLE_ADR+len-1," 'dlists/dlist_console.asm'"
    23 				$R RCASM   $FC00..$FC1F 'dlists/dlist_console.asm'
    25 02E2-02E3> 75 0C			ini mcpy
Source: main.a65
   115 0CBE				RCASM 'dlists/dlist_black_console.asm' DL_BLACK_CONSOLE_ADR 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCASM [Source: resource.asm]
     2 0CBE				org RESORIGIN
     4 = 0007			len = .sizeof(_DL_BLACK_CONSOLE_ADR)
     6 				mcpy	ift main.DL_BLACK_CONSOLE_ADR+len >= $bc20
     7 0C75-0CA4> A9 00 8D 2F + 	mva #0 sdmctl
     8 0C7A 8D 00 D4			sta dmactl
    11 0C7D 20 41 0C			jsr sys.off
    13 0C80 A9 9E 85 88 A9 0C +  MWA #DATA EDX
    13 0C88 A9 40 85 8C A9 FC +  MWA #MAIN.DL_BLACK_CONSOLE_ADR ECX
    13 0C90 A9 07 85 84 A9 00 +  MWA #LEN EAX
    13 0C98 20 00 0C		 JSR RESOURCE.MEMCPY
    15 0C9B 4C 65 0C			jmp sys.on
    16 0C9E			data
Source: dlist_black_console.asm
     1 = 0000			DL_BLANK1 = 0; // 1 blank line
     2 = 0010			DL_BLANK2 = %00010000; // 2 blank lines
     3 = 0020			DL_BLANK3 = %00100000; // 3 blank lines
     4 = 0030			DL_BLANK4 = %00110000; // 4 blank lines
     5 = 0040			DL_BLANK5 = %01000000; // 5 blank lines
     6 = 0050			DL_BLANK6 = %01010000; // 6 blank lines
     7 = 0060			DL_BLANK7 = %01100000; // 7 blank lines
     8 = 0070			DL_BLANK8 = %01110000; // 8 blank lines
    10 = 0080			DL_DLI = %10000000; // Order to run DLI
    11 = 0040			DL_LMS = %01000000; // Order to set new memory address
    12 = 0020			DL_VSCROLL = %00100000; // Turn on vertical scroll on this line
    13 = 0010			DL_HSCROLL = %00010000; // Turn on horizontal scroll on this line
    15 = 0002			DL_MODE_40x24T2 = 2; // Antic Modes
    16 = 0004			DL_MODE_40x24T5 = 4;
    17 = 0005			DL_MODE_40x12T5 = 5;
    18 = 0006			DL_MODE_20x24T5 = 6;
    19 = 0007			DL_MODE_20x12T5 = 7;
    20 = 0008			DL_MODE_40x24G4 = 8;
    21 = 0009			DL_MODE_80x48G2 = 9;
    22 = 000A			DL_MODE_80x48G4 = $A;
    23 = 000B			DL_MODE_160x96G2 = $B;
    24 = 000C			DL_MODE_160x192G2 = $C;
    25 = 000D			DL_MODE_160x96G4 = $D;
    26 = 000E			DL_MODE_160x192G4 = $E;
    27 = 000F			DL_MODE_320x192G2 = $F;
    29 = 0001			DL_JMP = %00000001; // Order to jump
    30 = 0041			DL_JVB = %01000001; // Jump to begining
     9 = C800			TXT_ADDRESS = $c800;
    10 = CC00			MAINFONT_ADR = $cc00;
    14 = D800			PMG_BASE_ADR = $d800;
    20 = F000			MAP_FNT_ADDRESS = $f000;
    21 = F400			MAP_SCR_ADDRESS = $f400;
    22 = F800			LOC_MAP_ADR = $f800; // could be used as second font 
    23 = FC00			DL_CONSOLE_ADR = $fc00; // $1f bytes as is
    24 = FC40			DL_BLACK_CONSOLE_ADR = $fc40; //$6 bytes as is
    25 = FC80			DL_MAP_ADR = $fc80; // $1f bytes as is 
    28 = 1FFA			XEX_ADDRESS = $2000-6; //?
    37 FC40			dl_start
    38 FC40 F0			    dta DL_DLI + DL_BLANK8                                        ; // 8 blank line
    39 FC41 70 70 70		    :3 dta DL_BLANK8
    40 FC44 41 40 FC		    dta DL_JVB, a(dl_start)                                       ; // jump to beginning
    23 					.print '$R RCASM   ',main.DL_BLACK_CONSOLE_ADR,'..',main.DL_BLACK_CONSOLE_ADR+len-1," 'dlists/dlist_black_console.asm'"
    23 				$R RCASM   $FC40..$FC46 'dlists/dlist_black_console.asm'
    25 02E2-02E3> 75 0C			ini mcpy
Source: main.a65
   116 0CA5				RCASM 'dlists/dlist_map.asm' DL_MAP_ADR 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCASM [Source: resource.asm]
     2 0CA5				org RESORIGIN
     4 = 0020			len = .sizeof(_DL_MAP_ADR)
     6 				mcpy	ift main.DL_MAP_ADR+len >= $bc20
     7 0C75-0CBD> A9 00 8D 2F + 	mva #0 sdmctl
     8 0C7A 8D 00 D4			sta dmactl
    11 0C7D 20 41 0C			jsr sys.off
    13 0C80 A9 9E 85 88 A9 0C +  MWA #DATA EDX
    13 0C88 A9 80 85 8C A9 FC +  MWA #MAIN.DL_MAP_ADR ECX
    13 0C90 A9 20 85 84 A9 00 +  MWA #LEN EAX
    13 0C98 20 00 0C		 JSR RESOURCE.MEMCPY
    15 0C9B 4C 65 0C			jmp sys.on
    16 0C9E			data
Source: dlist_map.asm
     1 = 0070			DL_BLANK8 = %01110000;
     2 = 0080			DL_DLI = %10000000;
     3 = 0040			DL_LMS = %01000000;
     4 = 0002			DL_MODE_40x24T2 = 2; // Antic Modes
     5 = 0004			DL_MODE_40x24T5 = 4;
     6 = 0005			DL_MODE_40x12T5 = 5;
     7 = 0041			DL_JVB = %01000001;
     9 = C800			TXT_ADDRESS = $c800;
    10 = CC00			MAINFONT_ADR = $cc00;
    14 = D800			PMG_BASE_ADR = $d800;
    20 = F000			MAP_FNT_ADDRESS = $f000;
    21 = F400			MAP_SCR_ADDRESS = $f400;
    22 = F800			LOC_MAP_ADR = $f800; // could be used as second font 
    23 = FC00			DL_CONSOLE_ADR = $fc00; // $1f bytes as is
    24 = FC40			DL_BLACK_CONSOLE_ADR = $fc40; //$6 bytes as is
    25 = FC80			DL_MAP_ADR = $fc80; // $1f bytes as is 
    28 = 1FFA			XEX_ADDRESS = $2000-6; //?
    11 FC80			dl_start
    12 FC80 70			    dta DL_BLANK8
    13 FC81 70			    dta DL_BLANK8
    14 FC82 F0			    dta DL_DLI + DL_BLANK8
    15 FC83 44 00 F4		    dta DL_MODE_40x24T5 + DL_LMS, a(MAP_SCR_ADDRESS)
    16 FC86 04 04 04 04 04 04 +     :23-6 dta DL_MODE_40x24T5
    17 FC97 84			    dta DL_MODE_40x24T5 + DL_DLI
    18 FC98 02			    dta DL_MODE_40x24T2
    19 FC99 82			    dta DL_MODE_40x24T2 + DL_DLI
    20 FC9A 02 02 02		    :3 dta DL_MODE_40x24T2
    21 FC9D 41 80 FC		    dta DL_JVB, a(dl_start)
    23 					.print '$R RCASM   ',main.DL_MAP_ADR,'..',main.DL_MAP_ADR+len-1," 'dlists/dlist_map.asm'"
    23 				$R RCASM   $FC80..$FC9F 'dlists/dlist_map.asm'
    25 02E2-02E3> 75 0C			ini mcpy
Source: main.a65
   117 0CBE				RCDATA '../assets/player.pmg' PMG_BASE_ADR 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCDATA [Source: resource.asm]
     2 = 0060			len = .filesize('../assets/player.pmg')-0
     8 0CBE				org RESORIGIN
    10 0C75-0CF5> 20 41 0C	mcpy	jsr sys.off
    12 0C78 A9 96 85 88 A9 0C +  MWA #DATA EDX
    12 0C80 A9 00 85 8C A9 D8 +  MWA #MAIN.PMG_BASE_ADR ECX
    12 0C88 A9 60 85 84 A9 00 +  MWA #LEN EAX
    12 0C90 20 00 0C		 JSR RESOURCE.MEMCPY
    14 0C93 4C 65 0C			jmp sys.on
    16 0C96 00 00 00 00 14 00 + data	ins '../assets/player.pmg',0
    18 					.print '$R RCDATA  ',main.PMG_BASE_ADR,'..',main.PMG_BASE_ADR+len-1," '../assets/player.pmg'"
    18 				$R RCDATA  $D800..$D85F '../assets/player.pmg'
    20 02E2-02E3> 75 0C			ini mcpy
Source: main.a65
   118 0CF6				RCDATA '../assets/mafia.fnt' MAINFONT_ADR 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCDATA [Source: resource.asm]
     2 = 0400			len = .filesize('../assets/mafia.fnt')-0
     8 0CF6				org RESORIGIN
    10 0C75-1095> 20 41 0C	mcpy	jsr sys.off
    12 0C78 A9 96 85 88 A9 0C +  MWA #DATA EDX
    12 0C80 A9 00 85 8C A9 CC +  MWA #MAIN.MAINFONT_ADR ECX
    12 0C88 A9 00 85 84 A9 04 +  MWA #LEN EAX
    12 0C90 20 00 0C		 JSR RESOURCE.MEMCPY
    14 0C93 4C 65 0C			jmp sys.on
    16 0C96 00 00 00 00 00 00 + data	ins '../assets/mafia.fnt',0
    18 					.print '$R RCDATA  ',main.MAINFONT_ADR,'..',main.MAINFONT_ADR+len-1," '../assets/mafia.fnt'"
    18 				$R RCDATA  $CC00..$CFFF '../assets/mafia.fnt'
    20 02E2-02E3> 75 0C			ini mcpy
Source: main.a65
   119 				.endl
   120
   121 				; ------------------------------------------------------------
   122
   123 1096				org CODEORIGIN
   124
   125 0C00				STATICDATA
Macro: STATICDATA [Source: main.a65]
     1 0C00-A459> 00 00 40 41 + .by  $00 $00 $40 $41 $42 $43 $44 $45  $46 $47 $48 $49 $4A $4B $4C $4D  $4E $4F $50 $51 $52 $53 $54 $55
     2 0C18 56 57 58 59 5A 61 + .by  $56 $57 $58 $59 $5A $61 $62 $63  $64 $65 $66 $67 $68 $69 $6A $6B  $6C $6D $6E $6F $70 $71 $72 $73
     3 0C30 74 75 76 77 78 79 + .by  $74 $75 $76 $77 $78 $79 $7A $30  $31 $32 $33 $34 $35 $36 $37 $38  $39 $2B $2F $00 $04 $54 $52 $55
     4 0C48 45 00 05 46 41 4C + .by  $45 $00 $05 $46 $41 $4C $53 $45  $00 $0B $45 $37 $30 $30 $50 $41  $47 $45 $41 $50 $4C $00 $0B $53
     5 0C60 41 56 45 47 41 4D + .by  $41 $56 $45 $47 $41 $4D $45 $44  $41 $54 $00 $0B $46 $49 $4E $41  $4C $4D $41 $50 $41 $50 $4C $00
     6 0C78 08 39 6F 75 00 68 + .by  $08 $39 $6F $75 $00 $68 $69 $74  $00 $00 $02 $00 $01 $00 $0F $35  $6E $66 $6F $72 $74 $75 $6E $61
     7 0C90 74 65 6C 79 0C 00 + .by  $74 $65 $6C $79 $0C $00 $00 $0D  $00 $69 $73 $00 $6E $6F $77 $00  $64 $65 $61 $64 $0E $00 $0B $39
     8 0CA8 6F 75 00 6D 69 73 + .by  $6F $75 $00 $6D $69 $73 $73 $65  $64 $01 $00 $0A $37 $69 $6E $6E  $65 $72 $00 $69 $73 $00 $00 $0C
     9 0CC0 30 72 65 73 73 00 + .by  $30 $72 $65 $73 $73 $00 $61 $00  $6B $65 $79 $01 $00 $07 $37 $65  $61 $70 $6F $6E $1A $00 $09 $27
    10 0CD8 61 6E 67 73 74 65 + .by  $61 $6E $67 $73 $74 $65 $72 $1A  $00 $05 $32 $65 $6E $74 $1A $00  $06 $22 $72 $69 $62 $65 $1A $00
    11 0CF0 04 23 61 72 1A 00 + .by  $04 $23 $61 $72 $1A $00 $06 $33  $74 $65 $70 $73 $1A $00 $06 $23  $61 $72 $67 $6F $1A $00 $06 $2D
    12 0D08 6F 6E 65 79 1A 00 + .by  $6F $6E $65 $79 $1A $00 $07 $23  $72 $65 $64 $69 $74 $1A $00 $0A  $34 $68 $65 $00 $70 $6F $6C $69
    13 0D20 63 65 00 07 2F 66 + .by  $63 $65 $00 $07 $2F $66 $66 $69  $63 $65 $72 $00 $1D $39 $6F $75  $00 $64 $6F $00 $6E $6F $74 $00
    14 0D38 68 61 76 65 00 65 + .by  $68 $61 $76 $65 $00 $65 $6E $6F  $75 $67 $68 $00 $6D $6F $6E $65  $79 $01 $00 $0D $39 $6F $75 $72
    15 0D50 00 63 68 6F 69 63 + .by  $00 $63 $68 $6F $69 $63 $65 $1F  $00 $00 $1A $29 $6E $00 $66 $72  $6F $6E $74 $00 $6F $66 $00 $74
    16 0D68 68 65 00 62 75 69 + .by  $68 $65 $00 $62 $75 $69 $6C $64  $69 $6E $67 $00 $01 $00 $02 $00  $00 $00 $06 $00 $00 $00 $00 $00
    17 0D80 00 00 19 35 6E 61 + .by  $00 $00 $19 $35 $6E $61 $62 $6C  $65 $00 $74 $6F $00 $6C $6F $61  $64 $00 $27 $21 $2E $27 $33 $34
    18 0D98 25 32 33 01 00 02 + .by  $25 $32 $33 $01 $00 $02 $04 $01  $00 $03 $00 $0D $00 $00 $02 $25  $1A $00 $03 $00 $22 $1A $00 $03
    19 0DB0 00 29 1A 00 03 00 + .by  $00 $29 $1A $00 $03 $00 $33 $1A  $00 $09 $33 $61 $76 $69 $6E $67  $0E $0E $0E $00 $0A $2C $6F $61
    20 0DC8 64 69 6E 67 0E 0E + .by  $64 $69 $6E $67 $0E $0E $0E $00  $12 $29 $6E $76 $61 $6C $69 $64  $00 $73 $61 $76 $65 $00 $67 $61
    21 0DE0 6D 65 01 00 02 37 + .by  $6D $65 $01 $00 $02 $37 $1A $00  $0E $25 $32 $32 $2F $32 $1A $10  $00 $65 $6E $65 $6D $79 $0E $00
    22 0DF8 02 0C 00 00 02 04 + .by  $02 $0C $00 $00 $02 $04 $00 $00  $02 $09 $00 $00 $0B $53 $41 $46  $45 $43 $4C $4D $46 $41 $50 $4C
    23 0E10 00 0B 53 41 46 45 + .by  $00 $0B $53 $41 $46 $45 $43 $4C  $4D $53 $41 $50 $4C $00 $02 $04  $0E $00 $02 $09 $1F $00 $04 $04
    24 0E28 09 1F 00 00 03 0E + .by  $09 $1F $00 $00 $03 $0E $0E $0E  $00 $03 $08 $10 $0D $00 $02 $01  $01 $00 $03 $09 $00 $1F $00 $02
    25 0E40 00 08 00 03 00 00 + .by  $00 $08 $00 $03 $00 $00 $00 $00  $03 $00 $2D $09 $00 $03 $09 $1F  $00 $00 $09 $2E $2F $00 $38 $22
    26 0E58 29 2F 33 01 00 6C + .by  $29 $2F $33 $01 $00 $6C $6A $3B  $FF $FF $6B $2B $2A $6F $FF $70  $75 $9B $69 $2D $3D $76 $FF $63
    27 0E70 FF FF 62 78 7A 34 + .by  $FF $FF $62 $78 $7A $34 $FF $33  $36 $1B $35 $32 $31 $2C $20 $2E  $6E $FF $6D $2F $81 $72 $FF $65
    28 0E88 79 7F 74 77 71 39 + .by  $79 $7F $74 $77 $71 $39 $FF $30  $37 $7E $38 $3E $FF $66 $68 $64  $FF $82 $67 $73 $61 $4C $4A $3A
    29 0EA0 FF FF 4B 5C 5E 4F + .by  $FF $FF $4B $5C $5E $4F $FF $50  $55 $FF $49 $5F $7C $56 $FF $43  $FF $FF $42 $58 $5A $24 $FF $23
    30 0EB8 26 FF 25 22 21 5B + .by  $26 $FF $25 $22 $21 $5B $3B $5D  $4E $FF $4D $3F $FF $52 $FF $45  $59 $FF $54 $57 $51 $28 $FF $29
    31 0ED0 27 FF 40 FF FF 46 + .by  $27 $FF $40 $FF $FF $46 $48 $44  $FF $FF $47 $53 $41 $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    32 0EE8 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    33 0F00 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    34 0F18 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    35 0F30 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    36 0F48 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF
Source: main.a65
   126
   127 				; ------------------------------------------------------------
   128
   129 0F5D			RTLIB
   130 0F5D				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    84 					opt l+
   131
   132 				.print 'ZPAGE: ',zpage,'..',zpend-1
   132 				ZPAGE: $0080..$00D3
   133
   134 				.print 'RTBUF: ',@buf,'..',@buf+255
   134 				RTBUF: $0400..$04FF
   135
   136 				.print 'RTLIB: ',RTLIB,'..',*-1
   136 				RTLIB: $0F5D..$14D0
   137
   138 				; ------------------------------------------------------------
   139
   140 14D1			START
   141 14D1 BA				tsx
   142 14D2 8E 26 A2			stx MAIN.@halt+1
   143
   144 					.ifdef MAIN.@DEFINES.ROMOFF
   145 14D5				icl 'atari\romoff.asm'
Source: romoff.asm
     1
     2 				// http://atariki.krap.pl/index.php/Programowanie:_U%C5%BCycie_OS-a_przy_wy%C5%82%C4%85czonym_ROM-ie
     3
     4 14D5			.local	rominit
     5
     6 14D5 78			        sei
     7 14D6 A9 00		        lda #%00000000
     8 14D8 8D 0E D4		        sta NMIEN       ;$D40E
     9 14DB A9 FE		        lda #%11111110
    10 14DD 8D 01 D3		        sta PORTB       ;$D301
    11
    12 				; Wprowadzona zmiana pozwala wyłączyć z poziomu kodu Pascala, kopiowanie czcionek z pamięci ROM do RAM przy wyłączonym ROMie
    13 				; Proces ten (niefortunnie) powoduje nadpisanie danych w obszarze $E000..$E3FF, gdy w zasobach umieścimi dane, które
    14 				; w ten obszar są wczytywane. Za pomocą definicji '{$DEFINE NOROMFONT}` można wyłączyć przerzut danych czcionek z ROM do RAMu,
    15 				; co pozwala zachować, wczytywane zasoby.
    16
    17 				.ifndef MAIN.@DEFINES.NOROMFONT
    18 					ldx #3
    19 					ldy #0
    20 				mv	inc portb
    21 				afnt0	lda $e000,y
    22 					dec portb
    23 				afnt1	sta $e000,y
    24 					iny
    25 					bne mv
    26 					inc afnt0+2
    27 					inc afnt1+2
    28 					dex
    29 					bpl mv
    30 				.endif
    31
    32 14E0 A2 FD		        ldx #<nmiint
    33 14E2 A0 14		        ldy #>nmiint
    34 14E4 8E FA FF		        stx NMIVEC      ;$FFFA
    35 14E7 8C FB FF		        sty NMIVEC+1
    36
    37 14EA A2 07		        ldx #<irqint
    38 14EC A0 15		        ldy #>irqint
    39 14EE 8E FE FF		        stx IRQVEC      ;$FFFE
    40 14F1 8C FF FF		        sty IRQVEC+1
    41
    42 14F4 A9 40		        lda #%01000000
    43 14F6 8D 0E D4		        sta NMIEN       ;$D40E
    44 14F9 58			        cli
    45
    46 14FA 4C 28 15			jmp skp
    47
    48
    49
    50 14FD 2C 0F D4		nmiint  bit NMIST        ;$D40F
    51 1500 10 03		        spl
    52 1502 6C 00 02		        jmp (VDSLST)     ;$0200
    53
    54 1505 38			        sec
    55 1506 24			        .byte $24        ;BIT $18
    56
    57 1507 18			irqint  clc
    58
    59 				        ;wlaczenie OS ROM
    60
    61 1508 EE 01 D3		        inc PORTB       ;$D301
    62
    63 150B 48			        pha
    64 150C 8A			        txa
    65 150D 48			        pha
    66 150E BA			        tsx
    67
    68 				        ;odlozenie na stos danych dla powrotu z przerwania (RTI)
    69
    70 150F A9 15		        lda #>iret      ;adres procedury iret
    71 1511 48			        pha
    72 1512 A9 21		        lda #<iret
    73 1514 48			        pha
    74 1515 BD 03 01		        lda $103,x      ;skopiowanie wartosci rejestru stanu procesora
    75 1518 48			        pha
    76
    77 				        ;skok przez odpowiedni wektor przerwania
    78
    79 1519 90 03		        scc
    80 151B 6C FA FF		        jmp (NMIVEC)    ;$FFFA
    81 151E 6C FE FF		        jmp (IRQVEC)    ;$FFFE
    82
    83 1521 68			iret	pla
    84 1522 AA				tax
    85 1523 68				pla
    86
    87 				        ;wylaczenie OS ROM
    88
    89 1524 CE 01 D3		        dec PORTB       ;$D301
    90 1527 40			        rti
    91
    92 1528			skp
    93
    94 				.endl
    95
   146 					.fi
   147
   148 = 00CB			VLEN	= VARDATASIZE-VARINITSIZE
   149 = BA2D			VADR	= DATAORIGIN+VARINITSIZE
   150
   151 					ift VADR > $BFFF
   152 					ert 'Invalid memory address range ',VADR
   153 					eli (VLEN > 0) && (VLEN <= 256)
   154 1528 A2 35			ldx #256-VLEN
   155 152A A9 00			lda #$00
   156 152C 9D F8 B9 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   157 					eli VLEN>256
   158 					m@init
   159 					eif
   160
   161 				.ifdef psptr
   162 					mwa #PROGRAMSTACK psptr
   163 				.fi
   164
   165 1532 A2 0F			ldx #$0F					; DOS II+/D ParamStr
   166 1534 BD 40 03 9D 2E A2 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   167
   168 153D E8				inx						; X = 0
   169 153E 86 80			stx bp						; BP = 0
   170
   171 1540 8E 08 D2			stx audctl					; reset POKEY
   172 1543 8E 18 D2			stx audctl+$10
   173 1546 A9 03			lda #3
   174 1548 8D 0F D2			sta skctl
   175 154B 8D 1F D2			sta skctl+$10
   176
   177 154E CA				dex						; X = 255
   178
   179 154F				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
    51 154F 20 22 19			jsr MAIN.RMT.@UnitInit
   180
   181 1552			.local	MAIN						; PROCEDURE
   182
   183 1552 4C 2D 9C			jmp l_0261
   184
   185 				; ------------------------------------------------------------
   186
   187 1555			.local	SYSTEM						; UNIT
   188
   189 1555			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   194 				; as Pointer
   195 1555 B5 94			lda :STACKORIGIN,x
   196 1557 85 88			sta A
   197 1559 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   198 155B 85 89			sta A+1
   199 155D CA				dex
   200 155E			@main
   201
   202 				; -------------------  ASM Block 00000002  -------------------
   203
   204 155E A0 00			ldy #0
   205 1560 B1 88 85 90			mva (:edx),y Result
   206
   207 1564			@exit
   208
   209 				; ------------------------------------------------------------
   210
   211 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   212 				; as Pointer
   213
   214 1564 E8				inx
   215 1565 A5 90 95 94			mva RESULT :STACKORIGIN,x
   216
   217 					.ifdef @new
   218 					lda <@VarData
   219 					sta :ztmp
   220 					lda >@VarData
   221 					ldy #@VarDataSize-1
   222 					jmp @FreeMem
   223 					eif
   224
   225 				; ------------------------------------------------------------
   226
   227 = 0088			A	= :EDX
   228 = 0090			RESULT	= :STACKORIGIN-4
   229 1569 60				rts						; ret
   230 				.endl
   231
   232 156A			.local	DPEEK						; FUNCTION | ASSEMBLER | REGISTER
   233
   234 				; ------------------------------------------------------------
   235
   236 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   237 				; as Pointer
   238 156A B5 94			lda :STACKORIGIN,x
   239 156C 85 88			sta A
   240 156E B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   241 1570 85 89			sta A+1
   242 1572 CA				dex
   243 1573			@main
   244
   245 				; -------------------  ASM Block 00000003  -------------------
   246
   247 1573 A0 00			ldy #0
   248 1575 B1 88 85 90			mva (:edx),y Result
   249 1579 C8				iny
   250 157A B1 88 85 91			mva (:edx),y Result+1
   251
   252 157E			@exit
   253
   254 				; ------------------------------------------------------------
   255
   256 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   257 				; as Pointer
   258
   259 157E E8				inx
   260 157F A5 90 95 94			mva RESULT :STACKORIGIN,x
   261 1583 A5 91 95 A4			mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   262
   263 					.ifdef @new
   264 					lda <@VarData
   265 					sta :ztmp
   266 					lda >@VarData
   267 					ldy #@VarDataSize-1
   268 					jmp @FreeMem
   269 					eif
   270
   271 				; ------------------------------------------------------------
   272
   273 = 0088			A	= :EDX
   274 = 0090			RESULT	= :STACKORIGIN-4
   275 1587 60				rts						; ret
   276 				.endl
   277
   278 1588			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   279
   280 				; ------------------------------------------------------------
   281
   282 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   283 				; as Pointer
   284 1588 B5 94			lda :STACKORIGIN,x
   285 158A 85 88			sta A
   286 158C B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   287 158E 85 89			sta A+1
   288 1590 CA				dex
   289 1591 30 05			jmi @main
   290
   291 				; ------------------------------------------------------------
   292
   293 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   294 				; as Pointer
   295 1593 B5 94			lda :STACKORIGIN,x
   296 1595 85 8C			sta VALUE
   297 1597 CA				dex
   298 1598			@main
   299
   300 				; -------------------  ASM Block 00000024  -------------------
   301
   302 1598 A0 00			ldy #0
   303 159A A5 8C 91 88			mva value (:edx),y
   304
   305 				; ------------------------------------------------------------
   306
   307 = 0088			A	= :EDX
   308 = 008C			VALUE	= :ECX
   309 159E			@exit
   310 					.ifdef @new
   311 					lda <@VarData
   312 					sta :ztmp
   313 					lda >@VarData
   314 					ldy #@VarDataSize-1
   315 					jmp @FreeMem
   316 					els
   317 159E 60				rts						; ret
   318 					eif
   319 				.endl
   320
   321 159F			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   322
   323 				; ------------------------------------------------------------
   324
   325 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   326 				; as Pointer
   327 159F B5 94			lda :STACKORIGIN,x
   328 15A1 85 88			sta A
   329 15A3 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   330 15A5 85 89			sta A+1
   331 15A7 CA				dex
   332 15A8 30 09			jmi @main
   333
   334 				; ------------------------------------------------------------
   335
   336 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   337 				; as Pointer
   338 15AA B5 94			lda :STACKORIGIN,x
   339 15AC 85 8C			sta VALUE
   340 15AE B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   341 15B0 85 8D			sta VALUE+1
   342 15B2 CA				dex
   343 15B3			@main
   344
   345 				; -------------------  ASM Block 00000025  -------------------
   346
   347 15B3 A0 00			ldy #0
   348 15B5 A5 8C 91 88			mva value (:edx),y
   349 15B9 C8				iny
   350 15BA A5 8D 91 88			mva value+1 (:edx),y
   351
   352 				; ------------------------------------------------------------
   353
   354 = 0088			A	= :EDX
   355 = 008C			VALUE	= :ECX
   356 15BE			@exit
   357 					.ifdef @new
   358 					lda <@VarData
   359 					sta :ztmp
   360 					lda >@VarData
   361 					ldy #@VarDataSize-1
   362 					jmp @FreeMem
   363 					els
   364 15BE 60				rts						; ret
   365 					eif
   366 				.endl
   367
   368 15BF			.local	FILLCHAR_02BA					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   369
   370 					.MACRO m@INLINE
   371 				
   372 				; -------------------  ASM Block 00000026  -------------------
   373 				
   374 					jsr @fill
   375 				
   376 					.ENDM
   377
   378 				; ------------------------------------------------------------
   379
   380 = 0088			A	= :EDX
   381 = 008C			COUNT	= :ECX
   382 = 0084			VALUE	= :EAX
   383 15BF			@exit
   384 				.endl
   385
   386 15BF			.local	FILLCHAR_02BB					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   387
   388 					.MACRO m@INLINE
   389 				
   390 				; -------------------  ASM Block 00000027  -------------------
   391 				
   392 					jsr @fill
   393 				
   394 					.ENDM
   395
   396 				; ------------------------------------------------------------
   397
   398 = 0088			A	= :EDX
   399 = 008C			COUNT	= :ECX
   400 = 0084			VALUE	= :EAX
   401 15BF			@exit
   402 				.endl
   403
   404 15BF			.local	FILLCHAR_02BC					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   405
   406 					.MACRO m@INLINE
   407 				
   408 				; -------------------  ASM Block 00000030  -------------------
   409 				
   410 					jsr @fill
   411 				
   412 					.ENDM
   413
   414 				; ------------------------------------------------------------
   415
   416 = 0088			A	= :EDX
   417 = 008C			COUNT	= :ECX
   418 = 0084			VALUE	= :EAX
   419 15BF			@exit
   420 				.endl
   421
   422 15BF			.local	FILLBYTE_02BD					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   423
   424 					.MACRO m@INLINE
   425 				
   426 				; -------------------  ASM Block 00000031  -------------------
   427 				
   428 					jsr @fill
   429 				
   430 					.ENDM
   431
   432 				; ------------------------------------------------------------
   433
   434 = 0088			A	= :EDX
   435 = 008C			COUNT	= :ECX
   436 = 0084			VALUE	= :EAX
   437 15BF			@exit
   438 				.endl
   439
   440 15BF			.local	MOVE_02BE					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   441
   442 					.MACRO m@INLINE
   443 				
   444 				; -------------------  ASM Block 00000033  -------------------
   445 				
   446 					jsr @move
   447 				
   448 					.ENDM
   449
   450 				; ------------------------------------------------------------
   451
   452 = 0088			SOURCE	= :EDX
   453 = 008C			DEST	= :ECX
   454 = 0084			COUNT	= :EAX
   455 15BF			@exit
   456 				.endl
   457
   458 15BF			.local	MOVE_02BF					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   459
   460 					.MACRO m@INLINE
   461 				
   462 				; -------------------  ASM Block 00000035  -------------------
   463 				
   464 					jsr @move
   465 				
   466 					.ENDM
   467
   468 				; ------------------------------------------------------------
   469
   470 = 0088			SOURCE	= :EDX
   471 = 008C			DEST	= :ECX
   472 = 0084			COUNT	= :EAX
   473 15BF			@exit
   474 				.endl
   475
   476 15BF			.local	RANDOMIZE					; PROCEDURE | ASSEMBLER
   477
   478 				; -------------------  ASM Block 00000044  -------------------
   479
   480
   481 15BF AD 0A D2 8D 7E A4	  mva $d20a RndSeed
   482 15C5 A9 00 8D 7F A4	  mva #$00  RndSeed+1
   483
   484
   485 15CA			@exit
   486 					.ifdef @new
   487 					lda <@VarData
   488 					sta :ztmp
   489 					lda >@VarData
   490 					ldy #@VarDataSize-1
   491 					jmp @FreeMem
   492 					els
   493 15CA 60				rts						; ret
   494 					eif
   495 				.endl
   496
   497 15CB			.local	RANDOM_02E9					; FUNCTION | ASSEMBLER | OVERLOAD
   498 15CB 8D 80 A4			sta RANGE
   499
   500 				; -------------------  ASM Block 00000048  -------------------
   501
   502
   503 				;BYTE FUNC Rand(BYTE range)
   504 				; returns random number between 0 and
   505 				; range-1.  If range=0, then a random
   506 				; number between 0 and 255 is returned
   507
   508 15CE AC 0A D2		  ldy $d20a   ; RANDOM
   509
   510 15D1 AD 80 A4		  lda range
   511 15D4 F0 08		  beq stop
   512
   513 15D6 85 8C		  sta :ecx
   514 15D8 84 84		  sty :eax
   515
   516 15DA 20 F8 11		  jsr imulCL
   517 15DD A8			  tay
   518
   519 15DE 8C 81 A4		stop  sty Result
   520
   521
   522 15E1			@exit
   523
   524 				; ------------------------------------------------------------
   525
   526 = A480			RANGE	= DATAORIGIN+$000B
   527 = A481			RESULT	= DATAORIGIN+$000C
   528
   529 = A480			@VarData	= RANGE
   530 = 0001			@VarDataSize	= 1
   531
   532 15E1 60				rts						; ret
   533 				.endl
   534
   535 15E2			.local	RANDOM_02EA					; FUNCTION | OVERLOAD
   536
   537 				; optimize OK (system_atari.inc), line = 176
   538
   539 15E2 AD 83 A4			lda RANGE+1
   540 15E5 0D 82 A4			ora RANGE
   541 15E8 D0 0B			jne l_02FE
   542
   543 				; optimize OK (system_atari.inc), line = 177
   544
   545 15EA A9 00			lda #$00
   546 15EC 8D 84 A4			sta RESULT
   547 15EF 8D 85 A4			sta RESULT+1
   548 15F2 4C 57 16			jmp l_030C
   549 15F5			l_02FE
   550
   551 				; optimize OK (system_atari.inc), line = 180
   552
   553 15F5 AD 7E A4			lda RNDSEED
   554 15F8 85 8C			sta :ecx
   555 15FA AD 7F A4			lda RNDSEED+1
   556 15FD 85 8D			sta :ecx+1
   557 15FF A9 95			lda #$95
   558 1601 85 84			sta :eax
   559 1603 A9 45			lda #$45
   560 1605 85 85			sta :eax+1
   561 					.ifdef fmulinit
   562 					fmulu_16
   563 					els
   564 1607 20 23 12			imulCX
   565 					eif
   566 160A A5 84			lda :eax
   567 160C 8D 7E A4			sta RNDSEED
   568 160F A5 85			lda :eax+1
   569 1611 8D 7F A4			sta RNDSEED+1
   570
   571 				; optimize OK (system_atari.inc), line = 181
   572
   573 1614 AD 82 A4			lda RANGE
   574 1617 85 8C			sta @SMALLINT.MOD.B
   575 1619 AD 83 A4			lda RANGE+1
   576 161C 85 8D			sta @SMALLINT.MOD.B+1
   577 161E AD 7E A4			lda RNDSEED
   578 1621 85 84			sta @SMALLINT.MOD.A
   579 1623 AD 7F A4			lda RNDSEED+1
   580 1626 85 85			sta @SMALLINT.MOD.A+1
   581 1628 20 4D 11			jsr @SMALLINT.MOD
   582 162B A5 90			lda @SMALLINT.MOD.RESULT
   583 162D 8D 84 A4			sta RESULT
   584 1630 A5 91			lda @SMALLINT.MOD.RESULT+1
   585 1632 8D 85 A4			sta RESULT+1
   586
   587 				; -------------------  ASM Block 00000049  -------------------
   588
   589 1635 AD 83 A4			lda range+1
   590 1638 10 07			bpl plus
   591
   592 163A AD 85 A4			lda Result+1
   593 163D 30 18			bmi ok
   594 163F 10 05			bpl sign
   595
   596 1641 AD 85 A4		plus	lda Result+1
   597 1644 10 11			bpl ok
   598
   599 1646 A9 00		sign 	lda #0
   600 1648 38 ED 84 A4			sub Result
   601 164C 8D 84 A4			sta Result
   602
   603 164F A9 00			lda #0
   604 1651 ED 85 A4			sbc Result+1
   605 1654 8D 85 A4			sta Result+1
   606 1657			ok
   607
   608 1657			l_030C
   609 1657			@exit
   610
   611 				; ------------------------------------------------------------
   612
   613 = A482			RANGE	= DATAORIGIN+$000D
   614 = A484			RESULT	= DATAORIGIN+$000F
   615
   616 = A482			@VarData	= RANGE
   617 = 0002			@VarDataSize	= 2
   618
   619 1657 60				rts						; ret
   620 				.endl
   621
   622 1658			.local	CONCAT_032C					; FUNCTION | ASSEMBLER | OVERLOAD
   623
   624 				; -------------------  ASM Block 00000052  -------------------
   625
   626 1658 AD 87 A4 C9 04 D0 + 	cpw a #@buf
   627 1664 F0 0E			beq skp
   628
   629 1666 A9 00 8D 00 04		mva #0 @buf
   630 					@addString a
   630 				 LDY A+1\ LDA A\ JSR @ADDSTRING
   630 166B AC 87 A4		 LDY A+1
   630 166E AD 86 A4		 LDA A
   630 1671 20 E2 10		 JSR @ADDSTRING
   631 1674			skp
   632 					@addString b
   632 				 LDY B+1\ LDA B\ JSR @ADDSTRING
   632 1674 AC 89 A4		 LDY B+1
   632 1677 AD 88 A4		 LDA B
   632 167A 20 E2 10		 JSR @ADDSTRING
   633
   634 167D A0 00			ldy #0
   635 167F B9 00 04 99 8A A4 + 	mva:rne @buf,y adr.Result,y+
   636
   637 1688			@exit
   638
   639 				; ------------------------------------------------------------
   640
   641 = A486			A	= DATAORIGIN+$0011
   642 = A488			B	= DATAORIGIN+$0013
   643 = A48A			adr.RESULT	= [DATAORIGIN+$0015] .array [256]
   644 1688			.var RESULT	= adr.RESULT .word
   645
   646 = A486			@VarData	= A
   647 = 0104			@VarDataSize	= 260
   648
   649 1688 60				rts						; ret
   650 = 1689 8A A4		RESULT
   650 				.endl
   651
   652 				; ------------------------------------------------------------
   653
   654 = 0101			__PORTB_BANKS	= $0101
   655 = 0648			M_PI_2	= $0648
   656 = 0192			D_PI_2	= $0192
   657 = 0004			D_PI_180	= $04
   658 = 0000			MGTIA	= $00
   659 = 0080			MVBXE	= $80
   660 = 0000			VBXE_XDLADR	= $00
   661 = 00E0			VBXE_BCBTMP	= $E0
   662 = 0100			VBXE_BCBADR	= $0100
   663 = 1000			VBXE_MAPADR	= $1000
   664 = 1000			VBXE_CHBASE	= $1000
   665 = 5000			VBXE_OVRADR	= $5000
   666 = B000			VBXE_WINDOW	= $B000
   667 = 0000			IDLI	= $00
   668 = 0001			IVBL	= $01
   669 = 0001			IVBLD	= $01
   670 = 0002			IVBLI	= $02
   671 = 0003			ITIM1	= $03
   672 = 0004			ITIM2	= $04
   673 = 0005			ITIM4	= $05
   674 = 00FE			CH_DELCHR	= $FE
   675 = 009B			CH_ENTER	= $9B
   676 = 001B			CH_ESC	= $1B
   677 = 001C			CH_CURS_UP	= $1C
   678 = 001D			CH_CURS_DOWN	= $1D
   679 = 001E			CH_CURS_LEFT	= $1E
   680 = 001F			CH_CURS_RIGHT	= $1F
   681 = 007F			CH_TAB	= $7F
   682 = 009B			CH_EOL	= $9B
   683 = 007D			CH_CLR	= $7D
   684 = 00FD			CH_BELL	= $FD
   685 = 007E			CH_DEL	= $7E
   686 = 009C			CH_DELLINE	= $9C
   687 = 009D			CH_INSLINE	= $9D
   688 = 0000			PAL_PMCOLOR0	= $00
   689 = 0001			PAL_PMCOLOR1	= $01
   690 = 0002			PAL_PMCOLOR2	= $02
   691 = 0003			PAL_PMCOLOR3	= $03
   692 = 0004			PAL_COLOR0	= $04
   693 = 0005			PAL_COLOR1	= $05
   694 = 0006			PAL_COLOR2	= $06
   695 = 0007			PAL_COLOR3	= $07
   696 = 0008			PAL_COLBAK	= $08
   697 = 0000			COLOR_BLACK	= $00
   698 = 000E			COLOR_WHITE	= $0E
   699 = 0032			COLOR_RED	= $32
   700 = 0096			COLOR_CYAN	= $96
   701 = 0068			COLOR_VIOLET	= $68
   702 = 00C4			COLOR_GREEN	= $C4
   703 = 0074			COLOR_BLUE	= $74
   704 = 00EE			COLOR_YELLOW	= $EE
   705 = 0028			COLOR_ORANGE	= $28
   706 = 00E4			COLOR_BROWN	= $E4
   707 = 003C			COLOR_LIGHTRED	= $3C
   708 = 0004			COLOR_GRAY1	= $04
   709 = 0006			COLOR_GRAY2	= $06
   710 = 000A			COLOR_GRAY3	= $0A
   711 = 00CC			COLOR_LIGHTGREEN	= $CC
   712 = 007C			COLOR_LIGHTBLUE	= $7C
   713 = 0004			FMOPENREAD	= $04
   714 = 0008			FMOPENWRITE	= $08
   715 = 0009			FMOPENAPPEND	= $09
   716 = 000C			FMOPENREADWRITE	= $0C
   717 = A475			SCREENWIDTH	= DATAORIGIN+$0000
   718 = A477			SCREENHEIGHT	= DATAORIGIN+$0002
   719 = A479			DATESEPARATOR	= DATAORIGIN+$0004
   720 = D20A			RND	= $D20A
   721 = 02C0			adr.PALETTE	= $02C0
   722 168B			.var PALETTE	= adr.PALETTE .word
   723 = D012			adr.HPALETTE	= $D012
   724 168B			.var HPALETTE	= adr.HPALETTE .word
   725 = A47A			FILEMODE	= DATAORIGIN+$0005
   726 = A47B			GRAPHMODE	= DATAORIGIN+$0006
   727 = A47C			IORESULT	= DATAORIGIN+$0007
   728 = A47D			EOLN	= DATAORIGIN+$0008
   729 = A47E			RNDSEED	= DATAORIGIN+$0009
   730
   731 = 168B C0 02		PALETTE
   731 = 168D 12 D0		HPALETTE
   731 				.endl							; UNIT SYSTEM
   732
   733 				; ------------------------------------------------------------
   734
   735 168F			.local	ATARI						; UNIT
   736
   737 				; ------------------------------------------------------------
   738
   739 = 0010			IRQENS	= $10
   740 = 0012			RTCLOK	= $12
   741 = 0012			RTCLOK1	= $12
   742 = 0013			RTCLOK2	= $13
   743 = 0014			RTCLOK3	= $14
   744 = 004D			ATRACT	= $4D
   745 = 0052			LMARGIN	= $52
   746 = 0053			RMARGIN	= $53
   747 = 0054			ROWCRS	= $54
   748 = 0055			COLCRS	= $55
   749 = 0057			DINDEX	= $57
   750 = 0058			SAVMSC	= $58
   751 = 0062			PALNTS	= $62
   752 = 006A			RAMTOP	= $6A
   753 = 0200			VDSLST	= $0200
   754 = 0230			SDLSTL	= $0230
   755 = 0290			TXTROW	= $0290
   756 = 0291			TXTCOL	= $0291
   757 = 0293			TINDEX	= $0293
   758 = 0294			TXTMSC	= $0294
   759 = 022F			SDMCTL	= $022F
   760 = 026F			GPRIOR	= $026F
   761 = 02F0			CRSINH	= $02F0
   762 = 02F3			CHACT	= $02F3
   763 = 02F4			CHBAS	= $02F4
   764 = 02FC			CH	= $02FC
   765 = 02FD			FILDAT	= $02FD
   766 = 02C0			PCOLR0	= $02C0
   767 = 02C1			PCOLR1	= $02C1
   768 = 02C2			PCOLR2	= $02C2
   769 = 02C3			PCOLR3	= $02C3
   770 = 02C4			COLOR0	= $02C4
   771 = 02C5			COLOR1	= $02C5
   772 = 02C6			COLOR2	= $02C6
   773 = 02C7			COLOR3	= $02C7
   774 = 02C8			COLOR4	= $02C8
   775 = 02C8			COLBAKS	= $02C8
   776 = D000			HPOSP0	= $D000
   777 = D001			HPOSP1	= $D001
   778 = D002			HPOSP2	= $D002
   779 = D003			HPOSP3	= $D003
   780 = D004			HPOSM0	= $D004
   781 = D005			HPOSM1	= $D005
   782 = D006			HPOSM2	= $D006
   783 = D007			HPOSM3	= $D007
   784 = D008			SIZEP0	= $D008
   785 = D009			SIZEP1	= $D009
   786 = D00A			SIZEP2	= $D00A
   787 = D00B			SIZEP3	= $D00B
   788 = D00C			SIZEM	= $D00C
   789 = D00D			GRAFP0	= $D00D
   790 = D00E			GRAFP1	= $D00E
   791 = D00F			GRAFP2	= $D00F
   792 = D010			GRAFP3	= $D010
   793 = D011			GRAFM	= $D011
   794 = D004			P0PF	= $D004
   795 = D014			PAL	= $D014
   796 = D013			TRIG3	= $D013
   797 = D012			COLPM0	= $D012
   798 = D013			COLPM1	= $D013
   799 = D014			COLPM2	= $D014
   800 = D015			COLPM3	= $D015
   801 = D016			COLPF0	= $D016
   802 = D017			COLPF1	= $D017
   803 = D018			COLPF2	= $D018
   804 = D019			COLPF3	= $D019
   805 = D01A			COLBK	= $D01A
   806 = D01B			PRIOR	= $D01B
   807 = D01D			GRACTL	= $D01D
   808 = D01E			HITCLR	= $D01E
   809 = D01F			CONSOL	= $D01F
   810 = D200			AUDF1	= $D200
   811 = D201			AUDC1	= $D201
   812 = D202			AUDF2	= $D202
   813 = D203			AUDC2	= $D203
   814 = D204			AUDF3	= $D204
   815 = D205			AUDC3	= $D205
   816 = D206			AUDF4	= $D206
   817 = D207			AUDC4	= $D207
   818 = D208			AUDCTL	= $D208
   819 = D209			KBCODE	= $D209
   820 = D20E			IRQEN	= $D20E
   821 = D20F			SKSTAT	= $D20F
   822 = D300			PORTA	= $D300
   823 = D301			PORTB	= $D301
   824 = D302			PACTL	= $D302
   825 = D400			DMACTL	= $D400
   826 = D401			CHACTL	= $D401
   827 = D402			DLISTL	= $D402
   828 = D404			HSCROL	= $D404
   829 = D405			VSCROL	= $D405
   830 = D407			PMBASE	= $D407
   831 = D409			CHBASE	= $D409
   832 = D40A			WSYNC	= $D40A
   833 = D40B			VCOUNT	= $D40B
   834 = D40C			PENH	= $D40C
   835 = D40D			PENV	= $D40D
   836 = D40E			NMIEN	= $D40E
   837 = FFFA			NMIVEC	= $FFFA
   838 = FFFC			RESETVEC	= $FFFC
   839 = FFFE			IRQVEC	= $FFFE
   840
   841 				.endl							; UNIT ATARI
   842
   843 				; ------------------------------------------------------------
   844
   845 168F			.local	JOYSTICK					; UNIT
   846
   847 				; ------------------------------------------------------------
   848
   849 = 000F			JOY_NONE	= $0F
   850 = 000E			JOY_UP	= $0E
   851 = 000D			JOY_DOWN	= $0D
   852 = 000B			JOY_LEFT	= $0B
   853 = 000A			JOY_LEFT_UP	= $0A
   854 = 0009			JOY_LEFT_DOWN	= $09
   855 = 0007			JOY_RIGHT	= $07
   856 = 0006			JOY_RIGHT_UP	= $06
   857 = 0005			JOY_RIGHT_DOWN	= $05
   858 = 0278			JOY_1	= $0278
   859 = 0279			JOY_2	= $0279
   860 = 0278			adr.STICK	= $0278
   861 168F			.var STICK	= adr.STICK .word
   862 = 0278			STICK0	= $0278
   863 = 0279			STICK1	= $0279
   864 = 0284			adr.STRIG	= $0284
   865 168F			.var STRIG	= adr.STRIG .word
   866 = 0284			STRIG0	= $0284
   867 = 0285			STRIG1	= $0285
   868 = 0270			adr.PADDL	= $0270
   869 168F			.var PADDL	= adr.PADDL .word
   870 = 0270			PADDL0	= $0270
   871 = 0271			PADDL1	= $0271
   872 = 0272			PADDL2	= $0272
   873 = 0273			PADDL3	= $0273
   874 = 0274			PADDL4	= $0274
   875 = 0275			PADDL5	= $0275
   876 = 0276			PADDL6	= $0276
   877 = 0277			PADDL7	= $0277
   878 = 027C			adr.PTRIG	= $027C
   879 168F			.var PTRIG	= adr.PTRIG .word
   880 = 027C			PTRIG0	= $027C
   881 = 027D			PTRIG1	= $027D
   882 = 027E			PTRIG2	= $027E
   883 = 027F			PTRIG3	= $027F
   884 = 0280			PTRIG4	= $0280
   885 = 0281			PTRIG5	= $0281
   886 = 0282			PTRIG6	= $0282
   887 = 0283			PTRIG7	= $0283
   888 = D010			TRIG0	= $D010
   889 = D011			TRIG1	= $D011
   890 = D200			POT0	= $D200
   891 = D208			ALLPOT	= $D208
   892 = D20B			POTGO	= $D20B
   893
   894 = 168F 78 02		STICK
   894 = 1691 84 02		STRIG
   894 = 1693 70 02		PADDL
   894 = 1695 7C 02		PTRIG
   894 				.endl							; UNIT JOYSTICK
   895
   896 				; ------------------------------------------------------------
   897
   898 1697			.local	MATH						; UNIT
   899
   900 				; ------------------------------------------------------------
   901
   902 				.endl							; UNIT MATH
   903
   904 				; ------------------------------------------------------------
   905
   906 1697			.local	PMG						; UNIT
   907
   908 				; ------------------------------------------------------------
   909
   910 = 000E			_P_MAX	= $0E
   911 = 0002			_M0_MAX	= $02
   912 = 0000			_M1_MAX	= $00
   913 = 0003			_M2_MAX	= $03
   914 = 0004			_M3_MAX	= $04
   915 = 0000			_PM_NORMAL_SIZE	= $00
   916 = 0001			_PM_DOUBLE_SIZE	= $01
   917 = 0003			_PM_QUAD_SIZE	= $03
   918 = 0003			_PM_SHOW_ON	= $03
   919 = 0000			_PM_SHOW_OFF	= $00
   920 = 0001			_PM_DOUBLE_RES	= $01
   921 = 0002			_PM_SINGLE_RES	= $02
   922 = A58A			adr.P_DATA	= [DATAORIGIN+$0115] .array [4] .word
   923 1697			.var P_DATA	= adr.P_DATA .word
   924 = A592			adr.M_DATA	= [DATAORIGIN+$011D] .array [4] .word
   925 1697			.var M_DATA	= adr.M_DATA .word
   926 = A59A			PM_MEM	= DATAORIGIN+$0125
   927 = A59C			PM_OFFSET	= DATAORIGIN+$0127
   928 = A59E			PM_TOP	= DATAORIGIN+$0129
   929 = A59F			PM_SIZE	= DATAORIGIN+$012A
   930
   931 = 1697 8A A5		P_DATA
   931 = 1699 92 A5		M_DATA
   931 				.endl							; UNIT PMG
   932
   933 				; ------------------------------------------------------------
   934
   935 169B			.local	XBIOS						; UNIT
   936
   937 169B			.local	XBIOSOPENFILE					; PROCEDURE | ASSEMBLER
   938
   939 				; -------------------  ASM Block 00000063  -------------------
   940
   941
   942 169B 8A 48		    txa:pha
   943 169D A9 00 8D A1 A5	    mva #0 xBiosIOresult
   944 16A2 8D A2 A5		    sta xBiosIOerror
   945 16A5 AC A7 A5		    ldy filename
   946 16A8 AE A8 A5		    ldx filename+1
   947 16AB C8			    iny
   948 16AC D0 01		    sne
   949 16AE E8			    inx
   950 16AF 20 09 08		    jsr xBIOS_OPEN_FILE
   951 16B2 90 08		    bcc @+
   952 16B4 8E A2 A5		    stx xBiosIOerror
   953 16B7 A9 01 8D A1 A5	    mva #1 xBiosIOresult 
   954 16BC 68 AA		@   pla:tax
   955
   956 				; ------------------------------------------------------------
   957
   958 = A5A7			FILENAME	= DATAORIGIN+$0132
   959
   960 = A5A7			@VarData	= FILENAME
   961 = 0002			@VarDataSize	= 2
   962
   963 16BE			@exit
   964 					.ifdef @new
   965 					lda <@VarData
   966 					sta :ztmp
   967 					lda >@VarData
   968 					ldy #@VarDataSize-1
   969 					jmp @FreeMem
   970 					els
   971 16BE 60				rts						; ret
   972 					eif
   973 				.endl
   974
   975 16BF			.local	XBIOSLOADDATA					; PROCEDURE | ASSEMBLER
   976
   977 				; -------------------  ASM Block 00000064  -------------------
   978
   979
   980 16BF 8A 48		    txa:pha
   981 16C1 A9 00 8D A1 A5	    mva #0 xBiosIOresult
   982 16C6 8D A2 A5		    sta xBiosIOerror
   983 16C9 AC A9 A5		    ldy dest
   984 16CC AE AA A5		    ldx dest+1
   985 16CF 20 0C 08		    jsr xBIOS_LOAD_DATA
   986 16D2 90 08		    bcc @+
   987 16D4 8E A2 A5		    stx xBiosIOerror
   988 16D7 A9 01 8D A1 A5	    mva #1 xBiosIOresult 
   989 16DC 68 AA		@   pla:tax
   990
   991 				; ------------------------------------------------------------
   992
   993 = A5A9			DEST	= DATAORIGIN+$0134
   994
   995 = A5A9			@VarData	= DEST
   996 = 0002			@VarDataSize	= 2
   997
   998 16DE			@exit
   999 					.ifdef @new
  1000 					lda <@VarData
  1001 					sta :ztmp
  1002 					lda >@VarData
  1003 					ldy #@VarDataSize-1
  1004 					jmp @FreeMem
  1005 					els
  1006 16DE 60				rts						; ret
  1007 					eif
  1008 				.endl
  1009
  1010 16DF			.local	XBIOSWRITEDATA					; PROCEDURE | ASSEMBLER
  1011
  1012 				; -------------------  ASM Block 00000066  -------------------
  1013
  1014
  1015 16DF 8A 48		    txa:pha
  1016 16E1 A9 00 8D A1 A5	    mva #0 xBiosIOresult
  1017 16E6 8D A2 A5		    sta xBiosIOerror
  1018 16E9 AC AB A5		    ldy src
  1019 16EC AE AC A5		    ldx src+1
  1020 16EF 20 0F 08		    jsr xBIOS_WRITE_DATA 
  1021 16F2 90 08		    bcc @+
  1022 16F4 8E A2 A5		    stx xBiosIOerror
  1023 16F7 A9 01 8D A1 A5	    mva #1 xBiosIOresult 
  1024 16FC 68 AA		@   pla:tax
  1025
  1026 				; ------------------------------------------------------------
  1027
  1028 = A5AB			SRC	= DATAORIGIN+$0136
  1029
  1030 = A5AB			@VarData	= SRC
  1031 = 0002			@VarDataSize	= 2
  1032
  1033 16FE			@exit
  1034 					.ifdef @new
  1035 					lda <@VarData
  1036 					sta :ztmp
  1037 					lda >@VarData
  1038 					ldy #@VarDataSize-1
  1039 					jmp @FreeMem
  1040 					els
  1041 16FE 60				rts						; ret
  1042 					eif
  1043 				.endl
  1044
  1045 16FF			.local	XBIOSGETBYTE					; FUNCTION | ASSEMBLER
  1046
  1047 				; -------------------  ASM Block 00000068  -------------------
  1048
  1049
  1050 16FF 8A 48		    txa:pha
  1051 1701 A9 00 8D A1 A5	    mva #0 xBiosIOresult
  1052 1706 8D A2 A5		    sta xBiosIOerror
  1053 1709 20 15 08		    jsr xBIOS_GET_BYTE  
  1054 170C 8D AD A5		    sta result
  1055 170F 90 08		    bcc @+
  1056 1711 8E A2 A5		    stx xBiosIOerror
  1057 1714 A9 01 8D A1 A5	    mva #1 xBiosIOresult 
  1058 1719 68 AA		@   pla:tax
  1059
  1060 171B			@exit
  1061
  1062 				; ------------------------------------------------------------
  1063
  1064 = A5AD			RESULT	= DATAORIGIN+$0138
  1065 171B 60				rts						; ret
  1066 				.endl
  1067
  1068 171C			.local	XBIOSFLUSHBUFFER				; PROCEDURE | ASSEMBLER
  1069
  1070 				; -------------------  ASM Block 00000070  -------------------
  1071
  1072
  1073 171C 8A 48		    txa:pha
  1074 171E A9 00 8D A1 A5	    mva #0 xBiosIOresult
  1075 1723 8D A2 A5		    sta xBiosIOerror
  1076 1726 20 1B 08		    jsr xBIOS_FLUSH_BUFFER
  1077 1729 90 08		    bcc @+
  1078 172B 8E A2 A5		    stx xBiosIOerror
  1079 172E A9 01 8D A1 A5	    mva #1 xBiosIOresult 
  1080 1733 68 AA		@   pla:tax
  1081
  1082 1735			@exit
  1083 					.ifdef @new
  1084 					lda <@VarData
  1085 					sta :ztmp
  1086 					lda >@VarData
  1087 					ldy #@VarDataSize-1
  1088 					jmp @FreeMem
  1089 					els
  1090 1735 60				rts						; ret
  1091 					eif
  1092 				.endl
  1093
  1094 1736			.local	XBIOSSETLENGTH					; PROCEDURE | ASSEMBLER
  1095
  1096 				; -------------------  ASM Block 00000071  -------------------
  1097
  1098
  1099 1736 8A 48		    txa:pha
  1100 1738 AC AE A5		    ldy len
  1101 173B AE AF A5		    ldx len+1
  1102 173E 20 1E 08		    jsr xBIOS_SET_LENGTH
  1103 1741 68 AA		    pla:tax
  1104
  1105 				; ------------------------------------------------------------
  1106
  1107 = A5AE			LEN	= DATAORIGIN+$0139
  1108
  1109 = A5AE			@VarData	= LEN
  1110 = 0002			@VarDataSize	= 2
  1111
  1112 1743			@exit
  1113 					.ifdef @new
  1114 					lda <@VarData
  1115 					sta :ztmp
  1116 					lda >@VarData
  1117 					ldy #@VarDataSize-1
  1118 					jmp @FreeMem
  1119 					els
  1120 1743 60				rts						; ret
  1121 					eif
  1122 				.endl
  1123
  1124 1744			.local	XBIOSSETFILEOFFSET				; PROCEDURE | ASSEMBLER
  1125
  1126 				; -------------------  ASM Block 00000073  -------------------
  1127
  1128
  1129 1744 8A 48		    txa:pha
  1130 1746 A9 00 8D A1 A5	    mva #0 xBiosIOresult
  1131 174B 8D A2 A5		    sta xBiosIOerror
  1132 174E AC B0 A5		    ldy pos
  1133 1751 AE B1 A5		    ldx pos+1
  1134 1754 AD B2 A5		    lda pos+2
  1135 1757 20 24 08		    jsr xBIOS_SET_FILE_OFFSET 
  1136 				//    bcc @+
  1137 175A 8E A2 A5		    stx xBiosIOerror
  1138 175D A9 01 8D A1 A5	    mva #1 xBiosIOresult 
  1139 1762 68 AA		    pla:tax
  1140
  1141 				; ------------------------------------------------------------
  1142
  1143 = A5B0			POS	= DATAORIGIN+$013B
  1144
  1145 = A5B0			@VarData	= POS
  1146 = 0004			@VarDataSize	= 4
  1147
  1148 1764			@exit
  1149 					.ifdef @new
  1150 					lda <@VarData
  1151 					sta :ztmp
  1152 					lda >@VarData
  1153 					ldy #@VarDataSize-1
  1154 					jmp @FreeMem
  1155 					els
  1156 1764 60				rts						; ret
  1157 					eif
  1158 				.endl
  1159
  1160 				; ------------------------------------------------------------
  1161
  1162 = A5A1			XBIOSIORESULT	= DATAORIGIN+$012C
  1163 = A5A2			XBIOSIOERROR	= DATAORIGIN+$012D
  1164 = A5A3			XBIOSDIRENTRYINDEX	= DATAORIGIN+$012E
  1165 = A5A4			XBIOSDIRENTRYSTATUS	= DATAORIGIN+$012F
  1166 = A5A5			XBIOSDIRENTRYSECTOR	= DATAORIGIN+$0130
  1167 = 0800			XBIOS_ADDRESS	= $0800
  1168 = 0802			XBIOS_VERSION	= $0802
  1169 = 0803			XBIOS_RENAME_ENTRY	= $0803
  1170 = 0806			XBIOS_LOAD_FILE	= $0806
  1171 = 0809			XBIOS_OPEN_FILE	= $0809
  1172 = 080C			XBIOS_LOAD_DATA	= $080C
  1173 = 080F			XBIOS_WRITE_DATA	= $080F
  1174 = 0812			XBIOS_OPEN_CURRENT_DIR	= $0812
  1175 = 0815			XBIOS_GET_BYTE	= $0815
  1176 = 0818			XBIOS_PUT_BYTE	= $0818
  1177 = 081B			XBIOS_FLUSH_BUFFER	= $081B
  1178 = 081E			XBIOS_SET_LENGTH	= $081E
  1179 = 0821			XBIOS_SET_INIAD	= $0821
  1180 = 0824			XBIOS_SET_FILE_OFFSET	= $0824
  1181 = 0827			XBIOS_SET_RUNAD	= $0827
  1182 = 082A			XBIOS_SET_DEFAULT_DEVICE	= $082A
  1183 = 082D			XBIOS_OPEN_DIR	= $082D
  1184 = 0830			XBIOS_LOAD_BINARY_FILE	= $0830
  1185 = 0833			XBIOS_OPEN_DEFAULT_DIR	= $0833
  1186 = 0836			XBIOS_SET_DEVICE	= $0836
  1187 = 0839			XBIOS_RELOCATE_BUFFER	= $0839
  1188 = 083C			XBIOS_GET_ENTRY	= $083C
  1189 = 083F			XBIOS_OPEN_DEFAULT_FILE	= $083F
  1190 = 0842			XBIOS_READ_SECTOR	= $0842
  1191 = 0845			XBIOS_FIND_ENTRY	= $0845
  1192 = 0848			XBIOS_SET_BUFFER_SIZE	= $0848
  1193 = 0BE5			XDIRSIZE	= $0BE5
  1194 = 0BE6			XSPEED	= $0BE6
  1195 = 0BE7			XHSPEED	= $0BE7
  1196 = 0BE8			XIRQEN	= $0BE8
  1197 = 0BE9			XAUDCTL	= $0BE9
  1198 = 0BEA			XFILE	= $0BEA
  1199 = 0BEC			XDIR	= $0BEC
  1200 = 0BEE			XIOV	= $0BEE
  1201 = 0BF0			XBUFFERH	= $0BF0
  1202 = 0BF1			XBUFSIZE	= $0BF1
  1203 = 0BF2			XDAUX3	= $0BF2
  1204 = 0BF3			XSEGMENT	= $0BF3
  1205 = 0BF5			XNOTE	= $0BF5
  1206 = 0BF7			XNOTEH	= $0BF7
  1207 = 0BFC			XDEVICE	= $0BFC
  1208 = 0BFD			XDCMD	= $0BFD
  1209 = 0BFE			XDAUX1	= $0BFE
  1210 = 0BFF			XDAUX2	= $0BFF
  1211
  1212 				.endl							; UNIT XBIOS
  1213
  1214 				; ------------------------------------------------------------
  1215
  1216 1765			.local	XBAPLIB						; UNIT
  1217
  1218 1765			.local	XBUNAPL						; PROCEDURE
  1219
  1220 				; optimize OK (XBAPLIB), line = 43
  1221
  1222 1765 AD B4 A5			lda FNAM
  1223 1768 8D A7 A5			sta XBIOS.XBIOSOPENFILE.FILENAME
  1224 176B AD B5 A5			lda FNAM+1
  1225 176E 8D A8 A5			sta XBIOS.XBIOSOPENFILE.FILENAME+1
  1226 1771 20 9B 16			jsr XBIOS.XBIOSOPENFILE
  1227
  1228 				; -------------------  ASM Block 00000086  -------------------
  1229
  1230 1774 8E 90 18				stx @sp
  1231
  1232 1777 AD B6 A5 8D 48 18 + 		mwa outputPointer dest_ap
  1233
  1234 				//		mva #$00 GET_BYTE+1
  1235
  1236 1783 A9 80		aPL_depack	lda #$80
  1237 1785 8D 46 18				sta token
  1238 1788 4E D4 17		literal		lsr bl
  1239 178B 20 15 08				jsr xbios.xBIOS_GET_BYTE
  1240 178E 20 47 18		write		jsr store
  1241 1791 20 37 18		nxt_token	jsr get_token_bit
  1242 1794 90 F2				bcc literal		; literal  -> 0
  1243 1796 20 37 18				jsr get_token_bit
  1244 1799 90 34				bcc block		; block    -> 10
  1245 179B 20 37 18				jsr get_token_bit
  1246 179E 90 15				bcc short_block		; short block -> 110
  1247
  1248 17A0 4E D4 17		single_byte	lsr bl			; single byte -> 111
  1249 17A3 A9 10				lda #$10
  1250 17A5 48			@		pha
  1251 17A6 20 37 18				jsr get_token_bit
  1252 17A9 68					pla
  1253 17AA 2A					rol @
  1254 17AB 90 F8				bcc @-
  1255 17AD F0 DF				beq write
  1256 17AF 4C 53 18				jmp len01
  1257
  1258 17B2 4C 86 18		aPL_done	jmp to_exit
  1259
  1260 17B5 20 15 08		short_block	jsr xbios.xBIOS_GET_BYTE
  1261 17B8 4A					lsr @
  1262 17B9 F0 F7				beq aPL_done
  1263 17BB 8D DE 17				sta EBPL
  1264 17BE A2 00				ldx #0
  1265 17C0 8E E3 17				stx EBPH
  1266 17C3 A2 02				ldx #$02
  1267 17C5 90 01				bcc @+
  1268 17C7 E8					inx
  1269 17C8 38			@		sec
  1270 17C9 6E D4 17				ror  bl
  1271 17CC 4C 55 18				jmp len0203
  1272
  1273 17CF 20 1D 18		block		jsr getgamma
  1274 17D2 CA					dex
  1275 17D3 A9 FF				lda #$ff
  1276 = 17D4			bl		equ *-1
  1277 17D5 30 13				bmi normalcodepair
  1278 17D7 CA					dex
  1279 17D8 D0 10				bne normalcodepair
  1280 17DA 20 1D 18				jsr getgamma
  1281 17DD A9 FF				lda #$ff
  1282 = 17DE			EBPL		equ *-1
  1283 17DF 8D 63 18				sta offsetL
  1284 17E2 A9 FF				lda #$ff
  1285 = 17E3			EBPH		equ *-1
  1286 17E4 8D 6B 18				sta offsetH
  1287 17E7 4C 16 18				jmp lenffff
  1288
  1289 17EA CA			normalcodepair	dex
  1290 17EB 8E 6B 18				stx    offsetH
  1291 17EE 8E E3 17				stx    EBPH
  1292 17F1 20 15 08				jsr    xbios.xBIOS_GET_BYTE
  1293 17F4 8D 63 18				sta    offsetL
  1294 17F7 8D DE 17				sta    EBPL
  1295 17FA 20 1D 18				jsr    getgamma
  1296 17FD AD 6B 18				lda    offsetH
  1297 1800 F0 0A				beq    _ceck7f
  1298 1802 C9 7D				cmp    #$7d
  1299 1804 B0 0B				bcs	 plus2
  1300 1806 C9 05				cmp    #$05
  1301 1808 B0 0B				bcs	 plus1
  1302 180A 90 0A				bcc    normal1               ; zawsze
  1303 180C AD 63 18		_ceck7f		lda	 offsetL
  1304 180F 30 05				bmi    normal1
  1305 1811 E8			plus2		inx
  1306 1812 D0 01				bne    plus1
  1307 1814 C8					iny
  1308 1815 E8			plus1		inx
  1309 1816			normal1
  1310 1816 C8			lenffff		iny
  1311 1817 38					sec
  1312 1818 6E D4 17				ror bl
  1313 181B D0 41				bne domatch	; zawsze
  1314
  1315 181D A9 00		getgamma	lda #$00
  1316 181F 48					pha
  1317 1820 A9 01				lda #$01
  1318 1822 48					pha
  1319 1823 20 37 18		@		jsr get_token_bit
  1320 1826 BA					tsx
  1321 1827 3E 01 01				rol $101,x
  1322 182A 3E 02 01				rol $102,x
  1323 182D 20 37 18				jsr get_token_bit
  1324 1830 B0 F1				bcs @-
  1325 1832 68					pla
  1326 1833 AA					tax
  1327 1834 68					pla
  1328 1835 A8					tay
  1329 1836 60					rts
  1330
  1331 1837 0E 46 18		get_token_bit	asl    token
  1332 183A D0 09				bne    @+
  1333 183C 08					php
  1334 183D 20 15 08				jsr    xbios.xBIOS_GET_BYTE
  1335 1840 28					plp
  1336 1841 2A					rol    @
  1337 1842 8D 46 18				sta    token
  1338 1845 60			@		rts
  1339 1846 00			token		.byte $00
  1340
  1341 1847 8D FF FF		store		sta $ffff
  1342 = 1848			dest_ap		equ *-2
  1343 184A EE 48 18 D0 03 EE + 		inw dest_ap
  1344 1852 60					rts
  1345
  1346 1853 A2 01		len01		ldx    #$01
  1347 1855 A0 00		len0203		ldy    #$00
  1348 1857 8D 63 18				sta    offsetL
  1349 185A 8C 6B 18				sty    offsetH
  1350 185D C8					iny
  1351
  1352 185E AD 48 18		domatch		lda dest_ap
  1353 1861 38					sec
  1354 1862 E9 FF				sbc #$ff
  1355 = 1863			offsetL		equ *-1
  1356 1864 8D 70 18				sta src
  1357 1867 AD 49 18				lda dest_ap+1
  1358 186A E9 FF				sbc #$ff
  1359 = 186B			offsetH		equ *-1
  1360 186C 8D 71 18				sta src+1
  1361 186F AD FF FF		source		lda $ffff
  1362 = 1870			src		equ *-2
  1363 1872 EE 70 18 D0 03 EE + 		inw src
  1364 187A 20 47 18				jsr store
  1365 187D CA					dex
  1366 187E D0 EF				bne source
  1367 1880 88					dey
  1368 1881 D0 EC				bne source
  1369 1883 4C 91 17				jmp nxt_token
  1370
  1371
  1372 1886 A9 00		to_exit		lda #0
  1373 1888 98					tya
  1374 1889 99 00 04 C8 D0 FA			sta:rne @buf,y+
  1375
  1376 188F A2 00				ldx @sp: #0
  1377
  1378 				; ------------------------------------------------------------
  1379
  1380 = A5B4			FNAM	= DATAORIGIN+$013F
  1381 = A5B6			OUTPUTPOINTER	= DATAORIGIN+$0141
  1382
  1383 = A5B4			@VarData	= FNAM
  1384 = 0004			@VarDataSize	= 4
  1385
  1386 1891			@exit
  1387 					.ifdef @new
  1388 					lda <@VarData
  1389 					sta :ztmp
  1390 					lda >@VarData
  1391 					ldy #@VarDataSize-1
  1392 					jmp @FreeMem
  1393 					els
  1394 1891 60				rts						; ret
  1395 					eif
  1396 				.endl
  1397
  1398 				; ------------------------------------------------------------
  1399
  1400 				.endl							; UNIT XBAPLIB
  1401
  1402 				; ------------------------------------------------------------
  1403
  1404 1892			.local	CRT						; UNIT
  1405
  1406 1892			.local	NOSOUND						; PROCEDURE | ASSEMBLER
  1407
  1408 				; -------------------  ASM Block 00000096  -------------------
  1409
  1410 1892 A9 00			lda #0
  1411 1894 8D 08 D2			sta $d208
  1412 1897 8D 18 D2			sta $d218
  1413
  1414 189A 8D 0F D2			sta $d20f
  1415 189D 8D 1F D2			sta $d21f
  1416
  1417 18A0 8D 0A D4			sta wsync
  1418 18A3 8D 0A D4			sta wsync
  1419
  1420 18A6 A0 03			ldy #3
  1421 18A8 8C 0F D2			sty $d20f
  1422 18AB 8C 1F D2			sty $d21f
  1423
  1424 18AE A0 08			ldy #8
  1425 18B0 99 00 D2		lp	sta $d200,y
  1426 18B3 99 10 D2			sta $d210,y
  1427 18B6 88				dey
  1428 18B7 10 F7			bpl lp
  1429
  1430 18B9			@exit
  1431 					.ifdef @new
  1432 					lda <@VarData
  1433 					sta :ztmp
  1434 					lda >@VarData
  1435 					ldy #@VarDataSize-1
  1436 					jmp @FreeMem
  1437 					els
  1438 18B9 60				rts						; ret
  1439 					eif
  1440 				.endl
  1441
  1442 18BA			.local	SOUND						; PROCEDURE | ASSEMBLER
  1443
  1444 				; -------------------  ASM Block 00000097  -------------------
  1445
  1446 18BA AD B9 A5			lda Chan
  1447 18BD 29 07			and #7
  1448
  1449 18BF A0 10			ldy #$10
  1450 18C1 C9 04			cmp #4
  1451 18C3 B0 02			scs
  1452 18C5 A0 00			ldy #$00
  1453 18C7 8C CF 18			sty npokey
  1454
  1455 18CA 29 03			and #3
  1456
  1457 18CC 0A				asl @
  1458 18CD 18 69 00			add #0
  1459 = 18CF			npokey	equ *-1
  1460 18D0 A8				tay
  1461
  1462 18D1 A9 00			lda #$00
  1463 18D3 8D 08 D2			sta audctl
  1464 18D6 A9 03			lda #$03
  1465 18D8 8D 0F D2			sta skctl
  1466
  1467 18DB AD BA A5			lda Freq
  1468 18DE 99 00 D2			sta audf1,y
  1469
  1470 18E1 AD BC A5			lda Vol
  1471 18E4 29 0F			and #$0F
  1472 18E6 8D F1 18			sta _t
  1473
  1474 18E9 AD BB A5			lda Dist	; -> bit 7-6-5
  1475 18EC 0A 0A 0A 0A			:4 asl @
  1476 18F0 09 00			ora #0
  1477 = 18F1			_t	equ *-1
  1478 18F2 99 01 D2			sta audc1,y
  1479
  1480 				; ------------------------------------------------------------
  1481
  1482 = A5B9			CHAN	= DATAORIGIN+$0144
  1483 = A5BA			FREQ	= DATAORIGIN+$0145
  1484 = A5BB			DIST	= DATAORIGIN+$0146
  1485 = A5BC			VOL	= DATAORIGIN+$0147
  1486
  1487 = A5B9			@VarData	= CHAN
  1488 = 0004			@VarDataSize	= 4
  1489
  1490 18F5			@exit
  1491 					.ifdef @new
  1492 					lda <@VarData
  1493 					sta :ztmp
  1494 					lda >@VarData
  1495 					ldy #@VarDataSize-1
  1496 					jmp @FreeMem
  1497 					els
  1498 18F5 60				rts						; ret
  1499 					eif
  1500 				.endl
  1501
  1502 				; ------------------------------------------------------------
  1503
  1504 = A5B8			TEXTATTR	= DATAORIGIN+$0143
  1505 = D01F			CONSOL	= $D01F
  1506 = 0000			CN_START_SELECT_OPTION	= $00
  1507 = 0001			CN_SELECT_OPTION	= $01
  1508 = 0002			CN_START_OPTION	= $02
  1509 = 0003			CN_OPTION	= $03
  1510 = 0004			CN_START_SELECT	= $04
  1511 = 0005			CN_SELECT	= $05
  1512 = 0006			CN_START	= $06
  1513 = 0007			CN_NONE	= $07
  1514 = 0000			BW40	= $00
  1515 = 0001			CO40	= $01
  1516 = 0002			BW80	= $02
  1517 = 0003			CO80	= $03
  1518 = 0007			MONO	= $07
  1519 = 0001			C40	= $01
  1520 = 0003			C80	= $03
  1521 = 0000			BLACK	= $00
  1522 = 000F			WHITE	= $0F
  1523 = 0026			RED	= $26
  1524 = 00AC			CYAN	= $AC
  1525 = 0048			PURPLE	= $48
  1526 = 00B6			GREEN	= $B6
  1527 = 0086			BLUE	= $86
  1528 = 00DC			YELLOW	= $DC
  1529 = 0018			ORANGE	= $18
  1530 = 00F4			BROWN	= $F4
  1531 = 002A			LIGHT_RED	= $2A
  1532 = 0004			DARK_GREY	= $04
  1533 = 0008			GREY	= $08
  1534 = 00BC			LIGHT_GREEN	= $BC
  1535 = 009A			LIGHT_BLUE	= $9A
  1536 = 000C			LIGHT_GREY	= $0C
  1537 = 0080			BLINK	= $80
  1538
  1539 				.endl							; UNIT CRT
  1540
  1541 				; ------------------------------------------------------------
  1542
  1543 18F6			.local	CIO						; UNIT
  1544
  1545 				; ------------------------------------------------------------
  1546
  1547 				.endl							; UNIT CIO
  1548
  1549 				; ------------------------------------------------------------
  1550
  1551 18F6			.local	APLIB						; UNIT
  1552
  1553 				; ------------------------------------------------------------
  1554
  1555 				.endl							; UNIT APLIB
  1556
  1557 				; ------------------------------------------------------------
  1558
  1559 18F6			.local	B_UTILS						; UNIT
  1560
  1561 				; ------------------------------------------------------------
  1562
  1563 = A5BD			BASE64CHARS	= DATAORIGIN+$0148
  1564 = A5BF			adr.BASE64INV	= [DATAORIGIN+$014A] .array [128]
  1565 18F6			.var BASE64INV	= adr.BASE64INV .word
  1566
  1567 = 18F6 BF A5		BASE64INV
  1567 				.endl							; UNIT B_UTILS
  1568
  1569 				; ------------------------------------------------------------
  1570
  1571 18F8			.local	MISC						; UNIT
  1572
  1573 18F8			.local	DETECTANTIC					; FUNCTION | ASSEMBLER
  1574
  1575 				; -------------------  ASM Block 00000112  -------------------
  1576
  1577
  1578 				// ANTIC PAL Test for Atari 8-bits
  1579 				// (C) 2019 Guillermo Fuenzalida
  1580
  1581 18F8			antic_loop1
  1582 18F8 AD 0B D4			lda vcount
  1583 18FB C9 64			cmp #100
  1584 18FD 90 F9			bcc antic_loop1		// wait till scanline 200
  1585 18FF 8D 16 19			sta scanline
  1586 1902			antic_loop2
  1587 1902 AD 0B D4			lda vcount
  1588 1905 C9 0A			cmp #10
  1589 1907 30 0A			bmi antic_loop2_fin
  1590 1909 CD 16 19			cmp scanline
  1591 190C 30 F4			bmi antic_loop2
  1592 190E 8D 16 19			sta scanline
  1593 1911 10 EF			bpl antic_loop2
  1594
  1595 1913			antic_loop2_fin
  1596 1913 A0 00			ldy #$00
  1597 1915 A9 00			lda #0
  1598 = 1916			scanline equ *-1
  1599 1917 C9 87			cmp #135
  1600 1919 30 01			bmi ntsc
  1601 191B C8				iny
  1602 191C			ntsc
  1603 191C 8C 3F A6			sty Result
  1604
  1605
  1606 191F			@exit
  1607
  1608 				; ------------------------------------------------------------
  1609
  1610 = A63F			RESULT	= DATAORIGIN+$01CA
  1611 191F 60				rts						; ret
  1612 				.endl
  1613
  1614 				; ------------------------------------------------------------
  1615
  1616 = 0101			adr.BANKS	= $0101
  1617 1920			.var BANKS	= adr.BANKS .word
  1618 = FFF7			DETECTOS	= $FFF7
  1619
  1620 = 1920 01 01		BANKS
  1620 				.endl							; UNIT MISC
  1621
  1622 				; ------------------------------------------------------------
  1623
  1624 1922			.local	RMT						; UNIT
  1625
  1626 				; ------------------------------------------------------------
  1627 				; ------------------------------------------------------------
  1628 1922			@UnitInit
  1629
  1630 				; optimize FAIL ('MISC.DETECTANTIC', RMT), line = 175
  1631
  1632 1922 20 F8 18			jsr MISC.DETECTANTIC
  1633 1925 AD 3F A6			lda MISC.DETECTANTIC.RESULT
  1634 1928 F0 05			jeq l_03BB
  1635
  1636 				; optimize OK (RMT), line = 176
  1637
  1638 192A A9 00			lda #$00
  1639 192C 4C 31 19			jmp l_03C9
  1640 192F			l_03BB
  1641
  1642 				; optimize OK (RMT), line = 178
  1643
  1644 192F A9 04			lda #$04
  1645 1931			l_03C9
  1646 1931 8D 40 A6			sta NTSC
  1647
  1648 1934 60				rts
  1649
  1650 				; ------------------------------------------------------------
  1651
  1652 = A640			NTSC	= DATAORIGIN+$01CB
  1653
  1654 				.endl							; UNIT RMT
  1655
  1656 				; ------------------------------------------------------------
  1657
  1658 1935			.local	B_PMG						; UNIT
  1659
  1660 				; ------------------------------------------------------------
  1661
  1662 = 0001			PMG_VDELAY_M0	= $01
  1663 = 0002			PMG_VDELAY_M1	= $02
  1664 = 0004			PMG_VDELAY_M2	= $04
  1665 = 0008			PMG_VDELAY_M3	= $08
  1666 = 0010			PMG_VDELAY_P0	= $10
  1667 = 0020			PMG_VDELAY_P1	= $20
  1668 = 0040			PMG_VDELAY_P2	= $40
  1669 = 0080			PMG_VDELAY_P3	= $80
  1670 = 0000			PMG_SIZE_NORMAL	= $00
  1671 = 0001			PMG_SIZE_X2	= $01
  1672 = 0003			PMG_SIZE_X4	= $03
  1673 = 0001			PMG_MSIZE0_X2	= $01
  1674 = 0003			PMG_MSIZE0_X4	= $03
  1675 = 0004			PMG_MSIZE1_X2	= $04
  1676 = 000C			PMG_MSIZE1_X4	= $0C
  1677 = 0010			PMG_MSIZE2_X2	= $10
  1678 = 0030			PMG_MSIZE2_X4	= $30
  1679 = 0040			PMG_MSIZE3_X2	= $40
  1680 = 00C0			PMG_MSIZE4_X4	= $C0
  1681 = 0001			PMG_GRACTL_MISSILES	= $01
  1682 = 0002			PMG_GRACTL_PLAYERS	= $02
  1683 = 0004			PMG_GRACTL_LATCH	= $04
  1684 = 0003			PMG_GRACTL_DEFAULT	= $03
  1685 = 0004			PMG_SDMCTL_DMA_MISSILE	= $04
  1686 = 0008			PMG_SDMCTL_DMA_PLAYER	= $08
  1687 = 000C			PMG_SDMCTL_DMA_BOTH	= $0C
  1688 = 0010			PMG_SDMCTL_ONELINE	= $10
  1689 = 0000			PMG_SDMCTL_SCREEN_DISABLED	= $00
  1690 = 0001			PMG_SDMCTL_SCREEN_NARROW	= $01
  1691 = 0002			PMG_SDMCTL_SCREEN_NORMAL	= $02
  1692 = 0003			PMG_SDMCTL_SCREEN_WIDE	= $03
  1693 = 000E			PMG_SDMCTL_DEFAULT	= $0E
  1694 = 0001			PMG_COLLISION_PLAYER_TO_P0	= $01
  1695 = 0002			PMG_COLLISION_PLAYER_TO_P1	= $02
  1696 = 0004			PMG_COLLISION_PLAYER_TO_P2	= $04
  1697 = 0008			PMG_COLLISION_PLAYER_TO_P3	= $08
  1698 = 0010			PMG_5PLAYER	= $10
  1699 = 0020			PMG_OVERLAP	= $20
  1700 = D400			PMG_SDMCTL	= $D400
  1701 = 022F			PMG_SDMCTL_S	= $022F
  1702 = D01B			PMG_GPRIOR	= $D01B
  1703 = 026F			PMG_GPRIOR_S	= $026F
  1704 = D012			PMG_PCOLR0	= $D012
  1705 = D013			PMG_PCOLR1	= $D013
  1706 = D014			PMG_PCOLR2	= $D014
  1707 = D015			PMG_PCOLR3	= $D015
  1708 = D012			adr.PMG_PCOLR	= $D012
  1709 1935			.var PMG_PCOLR	= adr.PMG_PCOLR .word
  1710 = 02C0			PMG_PCOLR0_S	= $02C0
  1711 = 02C1			PMG_PCOLR1_S	= $02C1
  1712 = 02C2			PMG_PCOLR2_S	= $02C2
  1713 = 02C3			PMG_PCOLR3_S	= $02C3
  1714 = 02C0			adr.PMG_PCOLR_S	= $02C0
  1715 1935			.var PMG_PCOLR_S	= adr.PMG_PCOLR_S .word
  1716 = D000			PMG_HPOS0	= $D000
  1717 = D001			PMG_HPOS1	= $D001
  1718 = D002			PMG_HPOS2	= $D002
  1719 = D003			PMG_HPOS3	= $D003
  1720 = D000			adr.PMG_HPOS	= $D000
  1721 1935			.var PMG_HPOS	= adr.PMG_HPOS .word
  1722 = D004			PMG_HPOSM0	= $D004
  1723 = D005			PMG_HPOSM1	= $D005
  1724 = D006			PMG_HPOSM2	= $D006
  1725 = D007			PMG_HPOSM3	= $D007
  1726 = D004			adr.PMG_HPOSM	= $D004
  1727 1935			.var PMG_HPOSM	= adr.PMG_HPOSM .word
  1728 = D008			PMG_SIZEP0	= $D008
  1729 = D009			PMG_SIZEP1	= $D009
  1730 = D00A			PMG_SIZEP2	= $D00A
  1731 = D00B			PMG_SIZEP3	= $D00B
  1732 = D008			adr.PMG_SIZEP	= $D008
  1733 1935			.var PMG_SIZEP	= adr.PMG_SIZEP .word
  1734 = D00C			PMG_SIZEM	= $D00C
  1735 = D00D			PMG_GRAFP0	= $D00D
  1736 = D00E			PMG_GRAFP1	= $D00E
  1737 = D00F			PMG_GRAFP2	= $D00F
  1738 = D010			PMG_GRAFP3	= $D010
  1739 = D00D			adr.PMG_GRAFP	= $D00D
  1740 1935			.var PMG_GRAFP	= adr.PMG_GRAFP .word
  1741 = D011			PMG_GRAFM	= $D011
  1742 = D00C			PMG_P0PL	= $D00C
  1743 = D00D			PMG_P1PL	= $D00D
  1744 = D00E			PMG_P2PL	= $D00E
  1745 = D00F			PMG_P3PL	= $D00F
  1746 = D00C			adr.PMG_PPL	= $D00C
  1747 1935			.var PMG_PPL	= adr.PMG_PPL .word
  1748 = D01C			PMG_VDELAY	= $D01C
  1749 = D01D			PMG_GRACTL	= $D01D
  1750 = D01E			PMG_HITCLR	= $D01E
  1751 = D407			PMG_PMBASE	= $D407
  1752 = A651			PMG_ONELINE	= DATAORIGIN+$01DC
  1753 = A652			PMG_BASE	= DATAORIGIN+$01DD
  1754 = A654			PMG_SIZE	= DATAORIGIN+$01DF
  1755
  1756 = 1935 12 D0		PMG_PCOLR
  1756 = 1937 C0 02		PMG_PCOLR_S
  1756 = 1939 00 D0		PMG_HPOS
  1756 = 193B 04 D0		PMG_HPOSM
  1756 = 193D 08 D0		PMG_SIZEP
  1756 = 193F 0D D0		PMG_GRAFP
  1756 = 1941 0C D0		PMG_PPL
  1756 				.endl							; UNIT B_PMG
  1757
  1758 				; ------------------------------------------------------------
  1759
  1760 1943			.local	DOS						; UNIT
  1761
  1762 				; ------------------------------------------------------------
  1763
  1764 = D014			PALNTSC	= $D014
  1765
  1766 				.endl							; UNIT DOS
  1767
  1768 				; ------------------------------------------------------------
  1769
  1770 1943			.local	STRUTILS					; UNIT
  1771
  1772 				; ------------------------------------------------------------
  1773
  1774 				.endl							; UNIT STRUTILS
  1775
  1776 				; ------------------------------------------------------------
  1777
  1778 1943			.local	SYSUTILS					; UNIT
  1779
  1780 1943			.local	INTTOSTR_03DC					; FUNCTION | ASSEMBLER | OVERLOAD
  1781
  1782 				; ------------------------------------------------------------
  1783
  1784 				; Generate Assignment for CARDINAL / INTEGER / REAL / SINGLE
  1785 				; as Pointer
  1786 1943 B5 94			lda :STACKORIGIN,x
  1787 1945 8D 56 A6			sta A
  1788 1948 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1789 194A 8D 57 A6			sta A+1
  1790 194D B5 B4			lda :STACKORIGIN+STACKWIDTH*2,x
  1791 194F 8D 58 A6			sta A+2
  1792 1952 B5 C4			lda :STACKORIGIN+STACKWIDTH*3,x
  1793 1954 8D 59 A6			sta A+3
  1794 1957 CA				dex
  1795 1958			@main
  1796
  1797 				; -------------------  ASM Block 00000137  -------------------
  1798
  1799 1958 8A 48			txa:pha
  1800
  1801 195A E8				inx
  1802
  1803 					@ValueToStr #@printINT
  1803 				 LDY> @PRINTINT\ LDA< @PRINTINT\ JSR @VALUETOSTR
  1803 195B A0 14		 LDY> @PRINTINT
  1803 195D A9 1B		 LDA< @PRINTINT
  1803 195F 20 51 13		 JSR @VALUETOSTR
  1804
  1805 1962 A2 20			ldx #$20
  1806 1964 BD 00 04 9D 5A A6 + 	mva:rpl @buf,x adr.Result,x-
  1807
  1808 196D 68 AA			pla:tax
  1809
  1810 196F			@exit
  1811
  1812 				; ------------------------------------------------------------
  1813
  1814 				; Push WORD / SMALLINT / SHORTREAL / POINTER
  1815 				; as Pointer
  1816
  1817 196F E8				inx
  1818 1970 AD 7B 19 95 94		mva RESULT :STACKORIGIN,x
  1819 1975 AD 7C 19 95 A4		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
  1820
  1821 					.ifdef @new
  1822 					lda <@VarData
  1823 					sta :ztmp
  1824 					lda >@VarData
  1825 					ldy #@VarDataSize-1
  1826 					jmp @FreeMem
  1827 					eif
  1828
  1829 				; ------------------------------------------------------------
  1830
  1831 = A656			A	= DATAORIGIN+$01E1
  1832 = A65A			adr.RESULT	= [DATAORIGIN+$01E5] .array [33]
  1833 197A			.var RESULT	= adr.RESULT .word
  1834
  1835 = A656			@VarData	= A
  1836 = 0025			@VarDataSize	= 37
  1837
  1838 197A 60				rts						; ret
  1839 = 197B 5A A6		RESULT
  1839 				.endl
  1840
  1841 197D			.local	INTTOSTR_03E2					; FUNCTION | ASSEMBLER | OVERLOAD
  1842
  1843 				; ------------------------------------------------------------
  1844
  1845 				; Generate Assignment for CARDINAL / INTEGER / REAL / SINGLE
  1846 				; as Pointer
  1847 197D B5 94			lda :STACKORIGIN,x
  1848 197F 8D 7B A6			sta A
  1849 1982 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1850 1984 8D 7C A6			sta A+1
  1851 1987 B5 B4			lda :STACKORIGIN+STACKWIDTH*2,x
  1852 1989 8D 7D A6			sta A+2
  1853 198C B5 C4			lda :STACKORIGIN+STACKWIDTH*3,x
  1854 198E 8D 7E A6			sta A+3
  1855 1991 CA				dex
  1856 1992			@main
  1857
  1858 				; -------------------  ASM Block 00000138  -------------------
  1859
  1860 1992 8A 48			txa:pha
  1861
  1862 1994 E8				inx
  1863
  1864 					@ValueToStr #@printCARD
  1864 				 LDY> @PRINTCARD\ LDA< @PRINTCARD\ JSR @VALUETOSTR
  1864 1995 A0 14		 LDY> @PRINTCARD
  1864 1997 A9 25		 LDA< @PRINTCARD
  1864 1999 20 51 13		 JSR @VALUETOSTR
  1865
  1866 199C A2 20			ldx #$20
  1867 199E BD 00 04 9D 7F A6 + 	mva:rpl @buf,x adr.Result,x-
  1868
  1869 19A7 68 AA			pla:tax
  1870
  1871 19A9			@exit
  1872
  1873 				; ------------------------------------------------------------
  1874
  1875 				; Push WORD / SMALLINT / SHORTREAL / POINTER
  1876 				; as Pointer
  1877
  1878 19A9 E8				inx
  1879 19AA AD B5 19 95 94		mva RESULT :STACKORIGIN,x
  1880 19AF AD B6 19 95 A4		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
  1881
  1882 					.ifdef @new
  1883 					lda <@VarData
  1884 					sta :ztmp
  1885 					lda >@VarData
  1886 					ldy #@VarDataSize-1
  1887 					jmp @FreeMem
  1888 					eif
  1889
  1890 				; ------------------------------------------------------------
  1891
  1892 = A67B			A	= DATAORIGIN+$0206
  1893 = A67F			adr.RESULT	= [DATAORIGIN+$020A] .array [33]
  1894 19B4			.var RESULT	= adr.RESULT .word
  1895
  1896 = A67B			@VarData	= A
  1897 = 0025			@VarDataSize	= 37
  1898
  1899 19B4 60				rts						; ret
  1900 = 19B5 7F A6		RESULT
  1900 				.endl
  1901
  1902 19B7			.local	STRTOINT_03E8					; FUNCTION | ASSEMBLER | OVERLOAD
  1903
  1904 				; -------------------  ASM Block 00000140  -------------------
  1905
  1906 					@StrToInt s
  1906 				 LDY S+1\ LDA S\ JSR @STRTOINT
  1906 19B7 AC A1 A6		 LDY S+1
  1906 19BA AD A0 A6		 LDA S
  1906 19BD 20 6C 13		 JSR @STRTOINT
  1907
  1908 19C0 A5 88 8D A2 A6		mva edx Result
  1909 19C5 A5 89 8D A3 A6		mva edx+1 Result+1
  1910 19CA A5 8A 8D A4 A6		mva edx+2 Result+2
  1911 19CF A5 8B 8D A5 A6		mva edx+3 Result+3
  1912
  1913 19D4			@exit
  1914
  1915 				; ------------------------------------------------------------
  1916
  1917 = A6A0			S	= DATAORIGIN+$022B
  1918 = A6A2			RESULT	= DATAORIGIN+$022D
  1919
  1920 = A6A0			@VarData	= S
  1921 = 0002			@VarDataSize	= 2
  1922
  1923 19D4 60				rts						; ret
  1924 				.endl
  1925
  1926 				; ------------------------------------------------------------
  1927
  1928 = 0001			FAREADONLY	= $01
  1929 = 0002			FAHIDDEN	= $02
  1930 = 0004			FASYSFILE	= $04
  1931 = 0008			FAVOLUMEID	= $08
  1932 = 0010			FADIRECTORY	= $10
  1933 = 0020			FAARCHIVE	= $20
  1934 = 003F			FAANYFILE	= $3F
  1935
  1936 				.endl							; UNIT SYSUTILS
  1937
  1938 				; ------------------------------------------------------------
  1939
  1940 19D5			.local	B_SYSTEM					; UNIT
  1941
  1942 19D5			.local	SYSTEMOFF_0414					; PROCEDURE | ASSEMBLER | OVERLOAD
  1943 19D5 8D A7 A6			sta PORT_B
  1944
  1945 				; -------------------  ASM Block 00000146  -------------------
  1946
  1947
  1948 						;lda:cmp:req 20 ;; removed due to problem with nmien = 0 already set
  1949 19D8 78					sei
  1950 19D9 A9 00 8D 0E D4			mva #0 NMIEN
  1951
  1952 19DE AD A7 A6 8D 01 D3			mva port_b PORTB
  1953 19E4 A9 0E 8D FA FF A9 + 		mwa #__nmi NMIVEC
  1954
  1955 19EE A9 24				lda <__iret
  1956 19F0 8D FE FF				sta IRQVEC
  1957 19F3 8D 22 1A				sta __vblvec
  1958 19F6 8D 14 1A				sta __dlivec
  1959
  1960 19F9 A9 1A				lda >__iret
  1961 19FB 8D FF FF				sta IRQVEC+1
  1962 19FE 8D 23 1A				sta __vblvec+1
  1963 1A01 8D 15 1A				sta __dlivec+1
  1964
  1965 1A04 A9 40 8D 0E D4			mva #$40 NMIEN
  1966 1A09 8D A6 A6				sta __nmien
  1967 1A0C D0 17				bne __stop
  1968 1A0E			__nmi
  1969 1A0E 2C 0F D4				bit NMIST
  1970 1A11 10 04				bpl __vbl
  1971 1A13 4C 14 1A				jmp __dlivec
  1972 = 1A14			.def :__dlivec = *-2
  1973 1A16 40					rti
  1974 1A17			__vbl
  1975 1A17 E6 14				inc rtclok+2
  1976 1A19 D0 06				bne __vblvec-1
  1977 1A1B E6 13				inc rtclok+1
  1978 1A1D D0 02				bne __vblvec-1
  1979 1A1F E6 12				inc rtclok
  1980 1A21 4C 22 1A				jmp __vblvec
  1981 = 1A22			.def :__vblvec = *-2
  1982 = 1A24			.def :__iret
  1983 1A24 40			    	rti
  1984 1A25			__stop
  1985
  1986 				; ------------------------------------------------------------
  1987
  1988 = A6A7			PORT_B	= DATAORIGIN+$0232
  1989
  1990 = A6A7			@VarData	= PORT_B
  1991 = 0001			@VarDataSize	= 1
  1992
  1993 1A25			@exit
  1994 					.ifdef @new
  1995 					lda <@VarData
  1996 					sta :ztmp
  1997 					lda >@VarData
  1998 					ldy #@VarDataSize-1
  1999 					jmp @FreeMem
  2000 					els
  2001 1A25 60				rts						; ret
  2002 					eif
  2003 				.endl
  2004
  2005 1A26			.local	SYSTEMOFF_0415					; PROCEDURE | OVERLOAD
  2006
  2007 				; optimize OK (B_SYSTEM), line = 180
  2008
  2009 1A26 A9 FE			lda #$FE
  2010 1A28 20 D5 19			jsr SYSTEMOFF_0414
  2011 1A2B			@exit
  2012 					.ifdef @new
  2013 					lda <@VarData
  2014 					sta :ztmp
  2015 					lda >@VarData
  2016 					ldy #@VarDataSize-1
  2017 					jmp @FreeMem
  2018 					els
  2019 1A2B 60				rts						; ret
  2020 					eif
  2021 				.endl
  2022
  2023 1A2C			.local	ENABLEDLI					; PROCEDURE | ASSEMBLER
  2024
  2025 				; -------------------  ASM Block 00000153  -------------------
  2026
  2027
  2028 1A2C A5 14 C5 14 F0 FC			lda:cmp:req 20
  2029 1A32 A9 00 8D 0E D4			mva #0 NMIEN
  2030 1A37 AD A8 A6 8D 14 1A + 		mwa dliptr __dlivec
  2031 1A43 A9 C0 8D 0E D4			mva #$c0 NMIEN
  2032 1A48 8D A6 A6				sta __nmien
  2033
  2034 				; ------------------------------------------------------------
  2035
  2036 = A6A8			DLIPTR	= DATAORIGIN+$0233
  2037
  2038 = A6A8			@VarData	= DLIPTR
  2039 = 0002			@VarDataSize	= 2
  2040
  2041 1A4B			@exit
  2042 					.ifdef @new
  2043 					lda <@VarData
  2044 					sta :ztmp
  2045 					lda >@VarData
  2046 					ldy #@VarDataSize-1
  2047 					jmp @FreeMem
  2048 					els
  2049 1A4B 60				rts						; ret
  2050 					eif
  2051 				.endl
  2052
  2053 1A4C			.local	DISABLEDLI					; PROCEDURE | ASSEMBLER
  2054
  2055 				; -------------------  ASM Block 00000154  -------------------
  2056
  2057
  2058 1A4C A5 14 C5 14 F0 FC			lda:cmp:req 20
  2059 1A52 A9 40 8D 0E D4			mva #$40 NMIEN
  2060 1A57 8D A6 A6				sta __nmien
  2061
  2062 1A5A			@exit
  2063 					.ifdef @new
  2064 					lda <@VarData
  2065 					sta :ztmp
  2066 					lda >@VarData
  2067 					ldy #@VarDataSize-1
  2068 					jmp @FreeMem
  2069 					els
  2070 1A5A 60				rts						; ret
  2071 					eif
  2072 				.endl
  2073
  2074 1A5B			.local	WAITFRAME					; PROCEDURE | ASSEMBLER
  2075
  2076 				; -------------------  ASM Block 00000155  -------------------
  2077
  2078
  2079 1A5B A5 14 C5 14 F0 FC	    lda:cmp:req rtclok+2
  2080
  2081 1A61			@exit
  2082 					.ifdef @new
  2083 					lda <@VarData
  2084 					sta :ztmp
  2085 					lda >@VarData
  2086 					ldy #@VarDataSize-1
  2087 					jmp @FreeMem
  2088 					els
  2089 1A61 60				rts						; ret
  2090 					eif
  2091 				.endl
  2092
  2093 1A62			.local	WAITFRAMES					; PROCEDURE
  2094 1A62 8D AA A6			sta FRAMES
  2095
  2096 				; --- WhileProlog
  2097 1A65 4C 6E 1A			jmp l_0423
  2098 1A68			l_0424
  2099
  2100 				; optimize FAIL ('WAITFRAME', B_SYSTEM), line = 269
  2101
  2102 1A68 20 5B 1A			jsr WAITFRAME
  2103
  2104 				; optimize FAIL (0, B_SYSTEM), line = 270
  2105
  2106 1A6B CE AA A6			dec FRAMES
  2107 1A6E			l_0423
  2108
  2109 				; optimize OK (B_SYSTEM), line = 268
  2110
  2111 1A6E AD AA A6			lda FRAMES
  2112 1A71 D0 F5			jne l_0424
  2113
  2114 				; ------------------------------------------------------------
  2115
  2116 = A6AA			FRAMES	= DATAORIGIN+$0235
  2117
  2118 = A6AA			@VarData	= FRAMES
  2119 = 0001			@VarDataSize	= 1
  2120
  2121 1A73			@exit
  2122 					.ifdef @new
  2123 					lda <@VarData
  2124 					sta :ztmp
  2125 					lda >@VarData
  2126 					ldy #@VarDataSize-1
  2127 					jmp @FreeMem
  2128 					els
  2129 1A73 60				rts						; ret
  2130 					eif
  2131 				.endl
  2132
  2133 1A74			.local	SETCHARSET					; PROCEDURE
  2134 1A74 8D AB A6			sta MSB
  2135
  2136 				; optimize OK (B_SYSTEM), line = 276
  2137
  2138 1A77 8D 09 D4			sta ATARI.CHBASE
  2139
  2140 				; ------------------------------------------------------------
  2141
  2142 = A6AB			MSB	= DATAORIGIN+$0236
  2143
  2144 = A6AB			@VarData	= MSB
  2145 = 0001			@VarDataSize	= 1
  2146
  2147 1A7A			@exit
  2148 					.ifdef @new
  2149 					lda <@VarData
  2150 					sta :ztmp
  2151 					lda >@VarData
  2152 					ldy #@VarDataSize-1
  2153 					jmp @FreeMem
  2154 					els
  2155 1A7A 60				rts						; ret
  2156 					eif
  2157 				.endl
  2158
  2159 				; ------------------------------------------------------------
  2160
  2161 = A6A6			__NMIEN	= DATAORIGIN+$0231
  2162 = 0080			PORTB_SELFTEST_OFF	= $80
  2163 = 0002			PORTB_BASIC_OFF	= $02
  2164 = 0001			PORTB_SYSTEM_ON	= $01
  2165
  2166 				.endl							; UNIT B_SYSTEM
  2167
  2168 				; ------------------------------------------------------------
  2169
  2170 1A7B			.local	B_CRT						; UNIT
  2171
  2172 1A7B			.local	ATASCII2ANTIC_0440				; FUNCTION | OVERLOAD
  2173 1A7B 8D B5 A6			sta C
  2174
  2175 				; -------------------  ASM Block 00000156  -------------------
  2176
  2177
  2178 1A7E AD B5 A6		        lda c
  2179 1A81 0A			        asl
  2180 1A82 08			        php
  2181 1A83 C9 C0		        cmp #2*$60
  2182 1A85 B0 06		        bcs @+
  2183 1A87 E9 3F		        sbc #2*$20-1
  2184 1A89 B0 02		        bcs @+
  2185 1A8B 69 C0		        adc #2*$60
  2186 1A8D 28			@       plp
  2187 1A8E 6A			        ror
  2188 1A8F 8D B6 A6		        sta result;
  2189 				    
  2190 1A92			@exit
  2191
  2192 				; ------------------------------------------------------------
  2193
  2194 = A6B5			C	= DATAORIGIN+$0240
  2195 = A6B6			RESULT	= DATAORIGIN+$0241
  2196
  2197 = A6B5			@VarData	= C
  2198 = 0001			@VarDataSize	= 1
  2199
  2200 1A92 60				rts						; ret
  2201 				.endl
  2202
  2203 1A93			.local	ANTIC2ATASCII_0444				; FUNCTION | OVERLOAD
  2204 1A93 8D B7 A6			sta C
  2205
  2206 				; -------------------  ASM Block 00000157  -------------------
  2207
  2208
  2209 1A96 AD B7 A6		        lda c
  2210 1A99 0A			        asl
  2211 1A9A 08			        php
  2212 1A9B C9 C0		        cmp #2*$60
  2213 1A9D B0 06		        bcs @+
  2214 1A9F E9 7F		        sbc #2*$40-1
  2215 1AA1 B0 02		        bcs @+
  2216 1AA3 69 C0		        adc #2*$60
  2217 1AA5 28			@       plp
  2218 1AA6 6A			        ror
  2219 1AA7 8D B8 A6		        sta result;
  2220 				    
  2221 1AAA			@exit
  2222
  2223 				; ------------------------------------------------------------
  2224
  2225 = A6B7			C	= DATAORIGIN+$0242
  2226 = A6B8			RESULT	= DATAORIGIN+$0243
  2227
  2228 = A6B7			@VarData	= C
  2229 = 0001			@VarDataSize	= 1
  2230
  2231 1AAA 60				rts						; ret
  2232 				.endl
  2233
  2234 1AAB			.local	ATASCII2ANTIC_0448				; FUNCTION | OVERLOAD
  2235
  2236 				; ------------------------------------------------------------
  2237
  2238 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2239 				; as Pointer
  2240 1AAB B5 94			lda :STACKORIGIN,x
  2241 1AAD 85 82			sta :bp2
  2242 1AAF B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2243 1AB1 85 83			sta :bp2+1
  2244 1AB3 A0 00			ldy #$00
  2245 1AB5 B1 82 99 B9 A6 C8 + 	mva:rne (:bp2),y adr.S,y+
  2246 1ABD A9 B9 8D 02 1B A9 + 	mwa #adr.S S
  2247 1AC7 CA				dex
  2248 1AC8			@main
  2249
  2250 				; optimize OK (B_CRT), line = 468
  2251
  2252 1AC8 AD B9 A6			lda adr.S
  2253 1ACB 8D B9 A7			sta adr.RESULT
  2254
  2255 				; optimize OK (B_CRT), line = 469
  2256
  2257 1ACE A9 01			lda #$01
  2258 1AD0 8D B9 A8			sta I
  2259 1AD3 AD B9 A6 8D DA 1A		mva adr.S @FORTMP_045F_0
  2260
  2261 1AD9			l_0462
  2262 				; --- ForToDoCondition
  2263 1AD9 A9 00			lda @FORTMP_045F_0::#$00
  2264 1ADB CD B9 A8			cmp I
  2265 1ADE 90 21			jcc l_0470
  2266
  2267 				; optimize FAIL (1, B_CRT), line = 470
  2268
  2269 1AE0 E8				inx
  2270 1AE1 AD B9 A8 95 94		mva I :STACKORIGIN,x
  2271 1AE6 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2272 1AEA AC B9 A8			ldy I
  2273 1AED B9 B9 A6			lda adr.S,y
  2274 1AF0 20 7B 1A			jsr ATASCII2ANTIC_0440
  2275 1AF3 B4 94			ldy :STACKORIGIN,x
  2276 1AF5 AD B6 A6			lda ATASCII2ANTIC_0440.RESULT
  2277 1AF8 99 B9 A7			sta adr.RESULT,y
  2278 1AFB CA				dex
  2279
  2280 				; --- ForToDoEpilog
  2281 1AFC EE B9 A8			inc I
  2282 1AFF D0 D8			jne l_0462
  2283 1B01			l_0470
  2284 1B01			@exit
  2285
  2286 				; ------------------------------------------------------------
  2287
  2288 = A6B9			adr.S	= [DATAORIGIN+$0244] .array [256]
  2289 1B01			.var S	= adr.S .word
  2290 = A7B9			adr.RESULT	= [DATAORIGIN+$0344] .array [256]
  2291 1B01			.var RESULT	= adr.RESULT .word
  2292 = A8B9			I	= DATAORIGIN+$0444
  2293
  2294 = 1B02			@VarData	= S
  2295 = 0201			@VarDataSize	= 513
  2296
  2297 1B01 60				rts						; ret
  2298 = 1B02 B9 A6		S
  2298 = 1B04 B9 A7		RESULT
  2298 				.endl
  2299
  2300 1B06			.local	ANTIC2ATASCII_0483				; FUNCTION | OVERLOAD
  2301
  2302 				; ------------------------------------------------------------
  2303
  2304 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2305 				; as Pointer
  2306 1B06 B5 94			lda :STACKORIGIN,x
  2307 1B08 85 82			sta :bp2
  2308 1B0A B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2309 1B0C 85 83			sta :bp2+1
  2310 1B0E A0 00			ldy #$00
  2311 1B10 B1 82 99 BB A8 C8 + 	mva:rne (:bp2),y adr.S,y+
  2312 1B18 A9 BB 8D 5D 1B A9 + 	mwa #adr.S S
  2313 1B22 CA				dex
  2314 1B23			@main
  2315
  2316 				; optimize OK (B_CRT), line = 476
  2317
  2318 1B23 AD BB A8			lda adr.S
  2319 1B26 8D BB A9			sta adr.RESULT
  2320
  2321 				; optimize OK (B_CRT), line = 477
  2322
  2323 1B29 A9 01			lda #$01
  2324 1B2B 8D BB AA			sta I
  2325 1B2E AD BB A8 8D 35 1B		mva adr.S @FORTMP_049A_0
  2326
  2327 1B34			l_049D
  2328 				; --- ForToDoCondition
  2329 1B34 A9 00			lda @FORTMP_049A_0::#$00
  2330 1B36 CD BB AA			cmp I
  2331 1B39 90 21			jcc l_04AB
  2332
  2333 				; optimize FAIL (1, B_CRT), line = 478
  2334
  2335 1B3B E8				inx
  2336 1B3C AD BB AA 95 94		mva I :STACKORIGIN,x
  2337 1B41 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2338 1B45 AC BB AA			ldy I
  2339 1B48 B9 BB A8			lda adr.S,y
  2340 1B4B 20 93 1A			jsr ANTIC2ATASCII_0444
  2341 1B4E B4 94			ldy :STACKORIGIN,x
  2342 1B50 AD B8 A6			lda ANTIC2ATASCII_0444.RESULT
  2343 1B53 99 BB A9			sta adr.RESULT,y
  2344 1B56 CA				dex
  2345
  2346 				; --- ForToDoEpilog
  2347 1B57 EE BB AA			inc I
  2348 1B5A D0 D8			jne l_049D
  2349 1B5C			l_04AB
  2350 1B5C			@exit
  2351
  2352 				; ------------------------------------------------------------
  2353
  2354 = A8BB			adr.S	= [DATAORIGIN+$0446] .array [256]
  2355 1B5C			.var S	= adr.S .word
  2356 = A9BB			adr.RESULT	= [DATAORIGIN+$0546] .array [256]
  2357 1B5C			.var RESULT	= adr.RESULT .word
  2358 = AABB			I	= DATAORIGIN+$0646
  2359
  2360 = 1B5D			@VarData	= S
  2361 = 0201			@VarDataSize	= 513
  2362
  2363 1B5C 60				rts						; ret
  2364 = 1B5D BB A8		S
  2364 = 1B5F BB A9		RESULT
  2364 				.endl
  2365
  2366 1B61			.local	CRT_INIT_04BE					; PROCEDURE | OVERLOAD
  2367
  2368 				; optimize OK (B_CRT), line = 483
  2369
  2370 1B61 AD BD AA			lda VRAM_ADDRESS
  2371 1B64 8D AC A6			sta CRT_VRAM
  2372 1B67 AD BE AA			lda VRAM_ADDRESS+1
  2373 1B6A 8D AD A6			sta CRT_VRAM+1
  2374
  2375 				; optimize OK (B_CRT), line = 484
  2376
  2377 1B6D AD BF AA			lda WIDTH
  2378 1B70 8D B0 A6			sta CRT_SCREENWIDTH
  2379
  2380 				; optimize OK (B_CRT), line = 485
  2381
  2382 1B73 AD C0 AA			lda HEIGHT
  2383 1B76 8D B1 A6			sta CRT_SCREENHEIGHT
  2384
  2385 				; optimize OK (B_CRT), line = 486
  2386
  2387 1B79 85 8C			sta :ecx
  2388 1B7B AD BF AA			lda WIDTH
  2389 1B7E 85 84			sta :eax
  2390 					.ifdef fmulinit
  2391 					fmulu_8
  2392 					els
  2393 1B80 20 F8 11			imulCL
  2394 					eif
  2395 1B83 8D AF A6			sta CRT_SIZE+1
  2396 1B86 A5 84			lda :eax
  2397 1B88 8D AE A6			sta CRT_SIZE
  2398
  2399 				; optimize OK (B_CRT), line = 487
  2400
  2401 1B8B AD AC A6			lda CRT_VRAM
  2402 1B8E 8D B2 A6			sta CRT_CURSOR
  2403 1B91 AD AD A6			lda CRT_VRAM+1
  2404 1B94 8D B3 A6			sta CRT_CURSOR+1
  2405
  2406 				; optimize OK (B_CRT), line = 488
  2407
  2408 1B97 A9 00			lda #$00
  2409 1B99 8D B4 A6			sta CRT_LEFTMARGIN
  2410
  2411 				; ------------------------------------------------------------
  2412
  2413 = AABD			VRAM_ADDRESS	= DATAORIGIN+$0648
  2414 = AABF			WIDTH	= DATAORIGIN+$064A
  2415 = AAC0			HEIGHT	= DATAORIGIN+$064B
  2416
  2417 = AABD			@VarData	= VRAM_ADDRESS
  2418 = 0004			@VarDataSize	= 4
  2419
  2420 1B9C			@exit
  2421 					.ifdef @new
  2422 					lda <@VarData
  2423 					sta :ztmp
  2424 					lda >@VarData
  2425 					ldy #@VarDataSize-1
  2426 					jmp @FreeMem
  2427 					els
  2428 1B9C 60				rts						; ret
  2429 					eif
  2430 				.endl
  2431
  2432 1B9D			.local	CRT_CLEAR_04E8					; PROCEDURE | OVERLOAD
  2433
  2434 				; optimize OK (B_CRT), line = 504
  2435
  2436 1B9D AD AC A6			lda CRT_VRAM
  2437 1BA0 85 88			sta SYSTEM.FILLCHAR_02BB.A
  2438 1BA2 AD AD A6			lda CRT_VRAM+1
  2439 1BA5 85 89			sta SYSTEM.FILLCHAR_02BB.A+1
  2440 1BA7 AD AE A6			lda CRT_SIZE
  2441 1BAA 85 8C			sta SYSTEM.FILLCHAR_02BB.COUNT
  2442 1BAC AD AF A6			lda CRT_SIZE+1
  2443 1BAF 85 8D			sta SYSTEM.FILLCHAR_02BB.COUNT+1
  2444 1BB1 A9 00			lda #$00
  2445 1BB3 85 84			sta SYSTEM.FILLCHAR_02BB.VALUE
  2446 1BB5				.LOCAL +MAIN.SYSTEM.FILLCHAR_02BB
  2447 1BB5				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_02BB.M@INLINE [Source: main.a65]
     4 1BB5 20 8A 10			jsr @fill
Source: main.a65
  2448 					.ENDL
  2449
  2450 				; optimize OK (B_CRT), line = 505
  2451
  2452 1BB8 AD AC A6			lda CRT_VRAM
  2453 1BBB 8D B2 A6			sta CRT_CURSOR
  2454 1BBE AD AD A6			lda CRT_VRAM+1
  2455 1BC1 8D B3 A6			sta CRT_CURSOR+1
  2456 1BC4			@exit
  2457 					.ifdef @new
  2458 					lda <@VarData
  2459 					sta :ztmp
  2460 					lda >@VarData
  2461 					ldy #@VarDataSize-1
  2462 					jmp @FreeMem
  2463 					els
  2464 1BC4 60				rts						; ret
  2465 					eif
  2466 				.endl
  2467
  2468 1BC5			.local	CRT_GOTOXY					; PROCEDURE
  2469
  2470 				; optimize OK (B_CRT), line = 516
  2471
  2472 1BC5 AD B0 A6			lda CRT_SCREENWIDTH
  2473 1BC8 85 8C			sta :ecx
  2474 1BCA AD C2 AA			lda Y
  2475 1BCD 85 84			sta :eax
  2476 					.ifdef fmulinit
  2477 					fmulu_8
  2478 					els
  2479 1BCF 20 F8 11			imulCL
  2480 					eif
  2481 1BD2 A5 84			lda :eax
  2482 1BD4 18 6D C1 AA			add X
  2483 1BD8 85 9D			sta :STACKORIGIN+9
  2484 1BDA A5 85			lda :eax+1
  2485 1BDC 69 00			adc #$00
  2486 1BDE 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2487 1BE0 A5 9D			lda :STACKORIGIN+9
  2488 1BE2 18 6D AC A6			add CRT_VRAM
  2489 1BE6 8D B2 A6			sta CRT_CURSOR
  2490 1BE9 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2491 1BEB 6D AD A6			adc CRT_VRAM+1
  2492 1BEE 8D B3 A6			sta CRT_CURSOR+1
  2493
  2494 				; ------------------------------------------------------------
  2495
  2496 = AAC1			X	= DATAORIGIN+$064C
  2497 = AAC2			Y	= DATAORIGIN+$064D
  2498
  2499 = AAC1			@VarData	= X
  2500 = 0002			@VarDataSize	= 2
  2501
  2502 1BF1			@exit
  2503 					.ifdef @new
  2504 					lda <@VarData
  2505 					sta :ztmp
  2506 					lda >@VarData
  2507 					ldy #@VarDataSize-1
  2508 					jmp @FreeMem
  2509 					els
  2510 1BF1 60				rts						; ret
  2511 					eif
  2512 				.endl
  2513
  2514 1BF2			.local	CRT_WHEREY					; FUNCTION
  2515
  2516 				; optimize OK (B_CRT), line = 521
  2517
  2518 1BF2 AD B2 A6			lda CRT_CURSOR
  2519 1BF5 38 ED AC A6			sub CRT_VRAM
  2520 1BF9 85 84			sta @WORD.DIV.A
  2521 1BFB AD B3 A6			lda CRT_CURSOR+1
  2522 1BFE ED AD A6			sbc CRT_VRAM+1
  2523 1C01 85 85			sta @WORD.DIV.A+1
  2524 1C03 AD B0 A6			lda CRT_SCREENWIDTH
  2525 1C06 85 8C			sta @WORD.DIV.B
  2526 1C08 A9 00			lda #$00
  2527 1C0A 85 8D			sta @WORD.DIV.B+1
  2528 1C0C 20 AD 12			jsr @WORD.DIV
  2529 1C0F A5 84			lda :eax
  2530 1C11 8D C3 AA			sta RESULT
  2531 1C14			@exit
  2532
  2533 				; ------------------------------------------------------------
  2534
  2535 = AAC3			RESULT	= DATAORIGIN+$064E
  2536 1C14 60				rts						; ret
  2537 				.endl
  2538
  2539 1C15			.local	CRT_WHEREX					; FUNCTION
  2540
  2541 				; optimize OK (B_CRT), line = 526
  2542
  2543 1C15 AD B2 A6			lda CRT_CURSOR
  2544 1C18 38 ED AC A6			sub CRT_VRAM
  2545 1C1C 85 84			sta @WORD.MOD.A
  2546 1C1E AD B3 A6			lda CRT_CURSOR+1
  2547 1C21 ED AD A6			sbc CRT_VRAM+1
  2548 1C24 85 85			sta @WORD.MOD.A+1
  2549 1C26 AD B0 A6			lda CRT_SCREENWIDTH
  2550 1C29 85 8C			sta @WORD.MOD.B
  2551 1C2B A9 00			lda #$00
  2552 1C2D 85 8D			sta @WORD.MOD.B+1
  2553 1C2F 20 AD 12			jsr @WORD.MOD
  2554 1C32 A5 90			lda @WORD.MOD.RESULT
  2555 1C34 8D C4 AA			sta RESULT
  2556 1C37			@exit
  2557
  2558 				; ------------------------------------------------------------
  2559
  2560 = AAC4			RESULT	= DATAORIGIN+$064F
  2561 1C37 60				rts						; ret
  2562 				.endl
  2563
  2564 1C38			.local	CRT_WRITE_053A					; PROCEDURE | OVERLOAD
  2565
  2566 				; ------------------------------------------------------------
  2567
  2568 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2569 				; as Pointer
  2570 1C38 B5 94			lda :STACKORIGIN,x
  2571 1C3A 85 82			sta :bp2
  2572 1C3C B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2573 1C3E 85 83			sta :bp2+1
  2574 1C40 A0 00			ldy #$00
  2575 1C42 B1 82 99 C5 AA C8 + 	mva:rne (:bp2),y adr.S,y+
  2576 1C4A A9 C5 8D 86 1C A9 + 	mwa #adr.S S
  2577 1C54 CA				dex
  2578 1C55			@main
  2579
  2580 				; optimize OK (B_CRT), line = 531
  2581
  2582 1C55 AD C5 AA			lda adr.S
  2583 1C58 85 84			sta SYSTEM.MOVE_02BF.COUNT
  2584 1C5A A9 C6			lda <adr.S+$01
  2585 1C5C 85 88			sta SYSTEM.MOVE_02BF.SOURCE
  2586 1C5E A9 AA			lda >adr.S+$01
  2587 1C60 85 89			sta SYSTEM.MOVE_02BF.SOURCE+1
  2588 1C62 AD B2 A6			lda CRT_CURSOR
  2589 1C65 85 8C			sta SYSTEM.MOVE_02BF.DEST
  2590 1C67 AD B3 A6			lda CRT_CURSOR+1
  2591 1C6A 85 8D			sta SYSTEM.MOVE_02BF.DEST+1
  2592 1C6C A9 00			lda #$00
  2593 1C6E 85 85			sta SYSTEM.MOVE_02BF.COUNT+1
  2594 1C70				.LOCAL +MAIN.SYSTEM.MOVE_02BF
  2595 1C70				m@INLINE
Macro: MAIN.SYSTEM.MOVE_02BF.M@INLINE [Source: main.a65]
     4 1C70 20 35 10			jsr @move
Source: main.a65
  2596 					.ENDL
  2597
  2598 				; optimize OK (B_CRT), line = 532
  2599
  2600 1C73 AD C5 AA			lda adr.S
  2601 1C76 18 6D B2 A6			add CRT_CURSOR
  2602 1C7A 8D B2 A6			sta CRT_CURSOR
  2603 1C7D AD B3 A6			lda CRT_CURSOR+1
  2604 1C80 69 00			adc #$00
  2605 1C82 8D B3 A6			sta CRT_CURSOR+1
  2606
  2607 				; ------------------------------------------------------------
  2608
  2609 = AAC5			adr.S	= [DATAORIGIN+$0650] .array [256]
  2610 1C85			.var S	= adr.S .word
  2611
  2612 = 1C86			@VarData	= S
  2613 = 0100			@VarDataSize	= 256
  2614
  2615 1C85			@exit
  2616 					.ifdef @new
  2617 					lda <@VarData
  2618 					sta :ztmp
  2619 					lda >@VarData
  2620 					ldy #@VarDataSize-1
  2621 					jmp @FreeMem
  2622 					els
  2623 1C85 60				rts						; ret
  2624 					eif
  2625 = 1C86 C5 AA		S
  2625 				.endl
  2626
  2627 1C88			.local	CRT_WRITE_054D					; PROCEDURE | OVERLOAD
  2628 1C88 8D C5 AB			sta C
  2629
  2630 				; optimize OK (B_CRT), line = 537
  2631
  2632 1C8B AC B3 A6			ldy CRT_CURSOR+1
  2633 1C8E 84 81			sty :bp+1
  2634 1C90 AC B2 A6			ldy CRT_CURSOR
  2635 1C93 AD C5 AB			lda C
  2636 1C96 91 80			sta (:bp),y
  2637
  2638 				; optimize FAIL (0, B_CRT), line = 538
  2639
  2640 1C98 EE B2 A6			inc CRT_CURSOR
  2641 1C9B D0 03			sne
  2642 1C9D EE B3 A6			inc CRT_CURSOR+1
  2643
  2644 				; ------------------------------------------------------------
  2645
  2646 = ABC5			C	= DATAORIGIN+$0750
  2647
  2648 = ABC5			@VarData	= C
  2649 = 0001			@VarDataSize	= 1
  2650
  2651 1CA0			@exit
  2652 					.ifdef @new
  2653 					lda <@VarData
  2654 					sta :ztmp
  2655 					lda >@VarData
  2656 					ldy #@VarDataSize-1
  2657 					jmp @FreeMem
  2658 					els
  2659 1CA0 60				rts						; ret
  2660 					eif
  2661 				.endl
  2662
  2663 1CA1			.local	CRT_WRITE_055B					; PROCEDURE | OVERLOAD
  2664 1CA1 8D C6 AB			sta NUM
  2665
  2666 				; optimize FAIL ('SYSUTILS.INTTOSTR_03E2', B_CRT), line = 543
  2667
  2668 1CA4 E8				inx
  2669 1CA5 AD C6 AB 95 94		mva NUM :STACKORIGIN,x
  2670 1CAA A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2671 1CAE 95 B4			sta :STACKORIGIN+STACKWIDTH*2,x
  2672 1CB0 95 C4			sta :STACKORIGIN+STACKWIDTH*3,x
  2673 1CB2 20 7D 19			jsr SYSUTILS.INTTOSTR_03E2
  2674 1CB5 20 AB 1A			jsr ATASCII2ANTIC_0448
  2675 1CB8 E8				inx
  2676 1CB9 AD 04 1B 95 94		mva ATASCII2ANTIC_0448.RESULT :STACKORIGIN,x
  2677 1CBE AD 05 1B 95 A4		mva ATASCII2ANTIC_0448.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  2678 1CC3 20 38 1C			jsr CRT_WRITE_053A
  2679
  2680 				; ------------------------------------------------------------
  2681
  2682 = ABC6			NUM	= DATAORIGIN+$0751
  2683
  2684 = ABC6			@VarData	= NUM
  2685 = 0001			@VarDataSize	= 1
  2686
  2687 1CC6			@exit
  2688 					.ifdef @new
  2689 					lda <@VarData
  2690 					sta :ztmp
  2691 					lda >@VarData
  2692 					ldy #@VarDataSize-1
  2693 					jmp @FreeMem
  2694 					els
  2695 1CC6 60				rts						; ret
  2696 					eif
  2697 				.endl
  2698
  2699 1CC7			.local	CRT_WRITE_0565					; PROCEDURE | OVERLOAD
  2700
  2701 				; optimize FAIL ('SYSUTILS.INTTOSTR_03E2', B_CRT), line = 548
  2702
  2703 1CC7 E8				inx
  2704 1CC8 AD C7 AB 95 94		mva NUM :STACKORIGIN,x
  2705 1CCD AD C8 AB 95 A4		mva NUM+1 :STACKORIGIN+STACKWIDTH,x
  2706 1CD2 A9 00 95 B4			mva #$00 :STACKORIGIN+STACKWIDTH*2,x
  2707 1CD6 95 C4			sta :STACKORIGIN+STACKWIDTH*3,x
  2708 1CD8 20 7D 19			jsr SYSUTILS.INTTOSTR_03E2
  2709 1CDB 20 AB 1A			jsr ATASCII2ANTIC_0448
  2710 1CDE E8				inx
  2711 1CDF AD 04 1B 95 94		mva ATASCII2ANTIC_0448.RESULT :STACKORIGIN,x
  2712 1CE4 AD 05 1B 95 A4		mva ATASCII2ANTIC_0448.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  2713 1CE9 20 38 1C			jsr CRT_WRITE_053A
  2714
  2715 				; ------------------------------------------------------------
  2716
  2717 = ABC7			NUM	= DATAORIGIN+$0752
  2718
  2719 = ABC7			@VarData	= NUM
  2720 = 0002			@VarDataSize	= 2
  2721
  2722 1CEC			@exit
  2723 					.ifdef @new
  2724 					lda <@VarData
  2725 					sta :ztmp
  2726 					lda >@VarData
  2727 					ldy #@VarDataSize-1
  2728 					jmp @FreeMem
  2729 					els
  2730 1CEC 60				rts						; ret
  2731 					eif
  2732 				.endl
  2733
  2734 1CED			.local	CRT_WRITE_056E					; PROCEDURE | OVERLOAD
  2735
  2736 				; optimize FAIL ('SYSUTILS.INTTOSTR_03DC', B_CRT), line = 558
  2737
  2738 1CED E8				inx
  2739 1CEE AD C9 AB 95 94		mva NUM :STACKORIGIN,x
  2740 1CF3 AD CA AB 95 A4		mva NUM+1 :STACKORIGIN+STACKWIDTH,x
  2741 1CF8 AD CB AB 95 B4		mva NUM+2 :STACKORIGIN+STACKWIDTH*2,x
  2742 1CFD AD CC AB 95 C4		mva NUM+3 :STACKORIGIN+STACKWIDTH*3,x
  2743 1D02 20 43 19			jsr SYSUTILS.INTTOSTR_03DC
  2744 1D05 20 AB 1A			jsr ATASCII2ANTIC_0448
  2745 1D08 E8				inx
  2746 1D09 AD 04 1B 95 94		mva ATASCII2ANTIC_0448.RESULT :STACKORIGIN,x
  2747 1D0E AD 05 1B 95 A4		mva ATASCII2ANTIC_0448.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  2748 1D13 20 38 1C			jsr CRT_WRITE_053A
  2749
  2750 				; ------------------------------------------------------------
  2751
  2752 = ABC9			NUM	= DATAORIGIN+$0754
  2753
  2754 = ABC9			@VarData	= NUM
  2755 = 0004			@VarDataSize	= 4
  2756
  2757 1D16			@exit
  2758 					.ifdef @new
  2759 					lda <@VarData
  2760 					sta :ztmp
  2761 					lda >@VarData
  2762 					ldy #@VarDataSize-1
  2763 					jmp @FreeMem
  2764 					els
  2765 1D16 60				rts						; ret
  2766 					eif
  2767 				.endl
  2768
  2769 1D17			.local	CRT_PUT_0576					; PROCEDURE | OVERLOAD
  2770 1D17 8D CD AB			sta B
  2771
  2772 				; optimize OK (B_CRT), line = 574
  2773
  2774 1D1A AC B3 A6			ldy CRT_CURSOR+1
  2775 1D1D 84 81			sty :bp+1
  2776 1D1F AC B2 A6			ldy CRT_CURSOR
  2777 1D22 AD CD AB			lda B
  2778 1D25 91 80			sta (:bp),y
  2779
  2780 				; optimize FAIL (0, B_CRT), line = 575
  2781
  2782 1D27 EE B2 A6			inc CRT_CURSOR
  2783 1D2A D0 03			sne
  2784 1D2C EE B3 A6			inc CRT_CURSOR+1
  2785
  2786 				; ------------------------------------------------------------
  2787
  2788 = ABCD			B	= DATAORIGIN+$0758
  2789
  2790 = ABCD			@VarData	= B
  2791 = 0001			@VarDataSize	= 1
  2792
  2793 1D2F			@exit
  2794 					.ifdef @new
  2795 					lda <@VarData
  2796 					sta :ztmp
  2797 					lda >@VarData
  2798 					ldy #@VarDataSize-1
  2799 					jmp @FreeMem
  2800 					els
  2801 1D2F 60				rts						; ret
  2802 					eif
  2803 				.endl
  2804
  2805 1D30			.local	CRT_KEYPRESSED					; FUNCTION
  2806
  2807 				; optimize OK (B_CRT), line = 592
  2808
  2809 1D30 A9 00			lda #$00
  2810 1D32 8D CE AB			sta RESULT
  2811
  2812 				; optimize OK (B_CRT), line = 593
  2813
  2814 1D35 AD 0F D2			lda ATARI.SKSTAT
  2815 1D38 29 04			and #$04
  2816 1D3A D0 05			jne l_05A1
  2817 1D3C A9 01			lda #$01
  2818 1D3E 8D CE AB			sta RESULT
  2819 1D41			l_05A1
  2820 1D41			@exit
  2821
  2822 				; ------------------------------------------------------------
  2823
  2824 = ABCE			RESULT	= DATAORIGIN+$0759
  2825 1D41 60				rts						; ret
  2826 				.endl
  2827
  2828 1D42			.local	CRT_READKEY					; FUNCTION
  2829
  2830 				; optimize OK (B_CRT), line = 598
  2831
  2832 1D42 AD 09 D2			lda KBCODE
  2833 1D45 8D CF AB			sta RESULT
  2834
  2835 				; --- RepeatUntilProlog
  2836 1D48			l_05B3
  2837
  2838 				; optimize FAIL ('CRT_KEYPRESSED', B_CRT), line = 599
  2839
  2840 1D48 20 30 1D			jsr CRT_KEYPRESSED
  2841 1D4B A0 01			ldy #1
  2842 1D4D AD CE AB			lda CRT_KEYPRESSED.RESULT
  2843 1D50 F0 01			beq @+
  2844 1D52 88				dey
  2845 				@
  2846 1D53 94 95			sty :STACKORIGIN+1,x
  2847 1D55 A0 01			ldy #1
  2848 1D57 AD CF AB			lda RESULT
  2849 1D5A CD 09 D2			cmp KBCODE
  2850 1D5D D0 01			bne @+
  2851 1D5F 88				dey
  2852 				@
  2853 1D60 98				tya
  2854 1D61 15 95			ora :STACKORIGIN+1,x
  2855 1D63 F0 E3			jeq l_05B3
  2856
  2857 				; --- RepeatUntilProlog
  2858 1D65			l_05CA
  2859
  2860 				; optimize FAIL ('CRT_KEYPRESSED', B_CRT), line = 600
  2861
  2862 1D65 20 30 1D			jsr CRT_KEYPRESSED
  2863 1D68 AD CE AB			lda CRT_KEYPRESSED.RESULT
  2864 1D6B F0 F8			jeq l_05CA
  2865
  2866 				; optimize OK (B_CRT), line = 601
  2867
  2868 1D6D AD 09 D2			lda KBCODE
  2869 1D70 8D CF AB			sta RESULT
  2870 1D73			@exit
  2871
  2872 				; ------------------------------------------------------------
  2873
  2874 = ABCF			RESULT	= DATAORIGIN+$075A
  2875 1D73 60				rts						; ret
  2876 				.endl
  2877
  2878 1D74			.local	CRT_READCHAR					; FUNCTION
  2879
  2880 				; --- RepeatUntilProlog
  2881 1D74			l_05DA
  2882
  2883 				; optimize FAIL ('CRT_READKEY', B_CRT), line = 607
  2884
  2885 1D74 20 42 1D			jsr CRT_READKEY
  2886 1D77 AC CF AB			ldy CRT_READKEY.RESULT
  2887 1D7A B9 5D 0E			lda adr.CRT_KEYCODE,y
  2888 1D7D 8D D0 AB			sta RESULT
  2889
  2890 				; optimize OK (B_CRT), line = 608
  2891
  2892 1D80 C9 FF			cmp #$FF
  2893 1D82 F0 F0			jeq l_05DA
  2894 1D84			@exit
  2895
  2896 				; ------------------------------------------------------------
  2897
  2898 = ABD0			RESULT	= DATAORIGIN+$075B
  2899 1D84 60				rts						; ret
  2900 				.endl
  2901
  2902 1D85			.local	CRT_READCHARI					; FUNCTION
  2903
  2904 				; optimize FAIL ('CRT_READCHAR', B_CRT), line = 613
  2905
  2906 1D85 20 74 1D			jsr CRT_READCHAR
  2907 1D88 AD D0 AB			lda CRT_READCHAR.RESULT
  2908 1D8B 20 7B 1A			jsr ATASCII2ANTIC_0440
  2909 1D8E AD B6 A6			lda ATASCII2ANTIC_0440.RESULT
  2910 1D91 8D D1 AB			sta RESULT
  2911 1D94			@exit
  2912
  2913 				; ------------------------------------------------------------
  2914
  2915 = ABD1			RESULT	= DATAORIGIN+$075C
  2916 1D94 60				rts						; ret
  2917 				.endl
  2918
  2919 1D95			.local	CRT_READSTRINGI_05F8				; FUNCTION | OVERLOAD
  2920 1D95 8D D2 AB			sta LIMIT
  2921
  2922 1D98 A9 00 8D D3 AB		mva #$00 adr.RESULT
  2923
  2924 				; --- RepeatUntilProlog
  2925 1D9D			l_05FC
  2926
  2927 				; optimize FAIL ('CRT_READCHARI', B_CRT), line = 621
  2928
  2929 1D9D 20 85 1D			jsr CRT_READCHARI
  2930 1DA0 AD D1 AB			lda CRT_READCHARI.RESULT
  2931 1DA3 8D D3 AC			sta A
  2932
  2933 				; optimize OK (B_CRT), line = 622
  2934
  2935 1DA6 C9 DB			cmp #$DB
  2936 1DA8 D0 03			jne l_0612
  2937 1DAA 4C 0A 1E			jmp @exit
  2938 1DAD			l_0612
  2939
  2940 				; optimize OK (B_CRT), line = 623
  2941
  2942 1DAD AD D3 AC			lda A
  2943 1DB0 C9 7E			cmp #$7E
  2944 1DB2 D0 22			jne l_0639
  2945 1DB4 AD D3 AB			lda adr.RESULT
  2946 1DB7 F0 1D			jeq l_0639
  2947
  2948 				; optimize FAIL (0, B_CRT), line = 624
  2949
  2950 1DB9 AD B2 A6			lda CRT_CURSOR
  2951 1DBC D0 03			bne @+
  2952 1DBE CE B3 A6			dec CRT_CURSOR+1
  2953 				@
  2954 1DC1 CE B2 A6			dec CRT_CURSOR
  2955
  2956 				; optimize OK (B_CRT), line = 625
  2957
  2958 1DC4 AC B3 A6			ldy CRT_CURSOR+1
  2959 1DC7 84 81			sty :bp+1
  2960 1DC9 AC B2 A6			ldy CRT_CURSOR
  2961 1DCC A9 00			lda #$00
  2962 1DCE 91 80			sta (:bp),y
  2963
  2964 				; optimize OK (B_CRT), line = 626
  2965
  2966 1DD0 CE D3 AB			dec adr.RESULT
  2967 1DD3 4C 07 1E			jmp l_064D
  2968 1DD6			l_0639
  2969
  2970 				; optimize OK (B_CRT), line = 628
  2971
  2972 1DD6 AD D3 AC			lda A
  2973 1DD9 C9 C2			cmp #$C2
  2974 1DDB F0 2A			jeq l_069E
  2975 1DDD C9 C1			cmp #$C1
  2976 1DDF F0 26			jeq l_069E
  2977 1DE1 C9 7F			cmp #$7F
  2978 1DE3 F0 22			jeq l_069E
  2979 1DE5 C9 5B			cmp #$5B
  2980 1DE7 F0 1E			jeq l_069E
  2981 1DE9 C9 7E			cmp #$7E
  2982 1DEB F0 1A			jeq l_069E
  2983 1DED AD D3 AB			lda adr.RESULT
  2984 1DF0 CD D2 AB			cmp LIMIT
  2985 1DF3 B0 12			jcs l_069E
  2986
  2987 				; optimize OK (B_CRT), line = 634
  2988
  2989 1DF5 AD D3 AC			lda A
  2990 1DF8 20 17 1D			jsr CRT_PUT_0576
  2991
  2992 				; optimize OK (B_CRT), line = 635
  2993
  2994 1DFB EE D3 AB			inc adr.RESULT
  2995
  2996 				; optimize OK (B_CRT), line = 636
  2997
  2998 1DFE AC D3 AB			ldy adr.RESULT
  2999 1E01 AD D3 AC			lda A
  3000 1E04 99 D3 AB			sta adr.RESULT,y
  3001 1E07			l_069E
  3002 1E07			l_064D
  3003
  3004 				; optimize OK (B_CRT), line = 638
  3005
  3006 1E07 4C 9D 1D			jmp l_05FC
  3007 1E0A			@exit
  3008
  3009 				; ------------------------------------------------------------
  3010
  3011 = ABD2			LIMIT	= DATAORIGIN+$075D
  3012 = ABD3			adr.RESULT	= [DATAORIGIN+$075E] .array [256]
  3013 1E0A			.var RESULT	= adr.RESULT .word
  3014 = ACD3			A	= DATAORIGIN+$085E
  3015
  3016 = ABD2			@VarData	= LIMIT
  3017 = 0102			@VarDataSize	= 258
  3018
  3019 1E0A 60				rts						; ret
  3020 = 1E0B D3 AB		RESULT
  3020 				.endl
  3021
  3022 1E0D			.local	CRT_READSTRING_06B7				; FUNCTION | OVERLOAD
  3023 1E0D 8D D4 AC			sta LIMIT
  3024
  3025 				; optimize OK (B_CRT), line = 648
  3026
  3027 1E10 20 95 1D			jsr CRT_READSTRINGI_05F8
  3028 1E13 E8				inx
  3029 1E14 AD 0B 1E 95 94		mva CRT_READSTRINGI_05F8.RESULT :STACKORIGIN,x
  3030 1E19 AD 0C 1E 95 A4		mva CRT_READSTRINGI_05F8.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  3031 1E1E 20 06 1B			jsr ANTIC2ATASCII_0483
  3032 1E21 E8				inx
  3033 1E22 AD 5F 1B			lda ANTIC2ATASCII_0483.RESULT
  3034 1E25 85 88			sta @move.src
  3035 1E27 AD 60 1B			lda ANTIC2ATASCII_0483.RESULT+1
  3036 1E2A 85 89			sta @move.src+1
  3037 1E2C AC 41 1E 84 82 AC + 	mwy RESULT :bp2
  3038 1E36 A0 00			ldy #$00
  3039 1E38 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  3040 1E3F CA				dex
  3041 1E40			@exit
  3042
  3043 				; ------------------------------------------------------------
  3044
  3045 = ACD4			LIMIT	= DATAORIGIN+$085F
  3046 = ACD5			adr.RESULT	= [DATAORIGIN+$0860] .array [256]
  3047 1E40			.var RESULT	= adr.RESULT .word
  3048
  3049 = ACD4			@VarData	= LIMIT
  3050 = 0101			@VarDataSize	= 257
  3051
  3052 1E40 60				rts						; ret
  3053 = 1E41 D5 AC		RESULT
  3053 				.endl
  3054
  3055 1E43			.local	CRT_NEWLINE_06C0				; PROCEDURE | OVERLOAD
  3056 1E43 8D D5 AD			sta OFFSET
  3057
  3058 				; optimize OK (B_CRT), line = 670
  3059
  3060 1E46 8D B4 A6			sta CRT_LEFTMARGIN
  3061
  3062 				; optimize OK (B_CRT), line = 671
  3063
  3064 1E49 AD B2 A6			lda CRT_CURSOR
  3065 1E4C 18 6D B0 A6			add CRT_SCREENWIDTH
  3066 1E50 85 9D			sta :STACKORIGIN+9
  3067 1E52 AD B3 A6			lda CRT_CURSOR+1
  3068 1E55 69 00			adc #$00
  3069 1E57 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3070 1E59 AD B2 A6			lda CRT_CURSOR
  3071 1E5C 38 ED AC A6			sub CRT_VRAM
  3072 1E60 85 84			sta @INTEGER.MOD.A
  3073 1E62 AD B3 A6			lda CRT_CURSOR+1
  3074 1E65 ED AD A6			sbc CRT_VRAM+1
  3075 1E68 85 85			sta @INTEGER.MOD.A+1
  3076 1E6A A9 00			lda #$00
  3077 1E6C E9 00			sbc #$00
  3078 1E6E 85 86			sta @INTEGER.MOD.A+2
  3079 1E70 A9 00			lda #$00
  3080 1E72 E9 00			sbc #$00
  3081 1E74 85 87			sta @INTEGER.MOD.A+3
  3082 1E76 AD B0 A6			lda CRT_SCREENWIDTH
  3083 1E79 85 8C			sta @INTEGER.MOD.B
  3084 1E7B A9 00			lda #$00
  3085 1E7D 85 8D			sta @INTEGER.MOD.B+1
  3086 1E7F 85 8E			sta @INTEGER.MOD.B+2
  3087 1E81 85 8F			sta @INTEGER.MOD.B+3
  3088 1E83 20 88 11			jsr @INTEGER.MOD
  3089 1E86 A5 88			lda @INTEGER.MOD.RESULT
  3090 1E88 85 9E			sta :STACKORIGIN+10
  3091 1E8A A5 89			lda @INTEGER.MOD.RESULT+1
  3092 1E8C 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  3093 1E8E A5 9D			lda :STACKORIGIN+9
  3094 1E90 38 E5 9E			sub :STACKORIGIN+10
  3095 1E93 A8				tay
  3096 1E94 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  3097 1E96 E5 AE			sbc :STACKORIGIN+STACKWIDTH+10
  3098 1E98 8D B3 A6			sta CRT_CURSOR+1
  3099 1E9B 98				tya
  3100 1E9C 18 6D D5 AD			add OFFSET
  3101 1EA0 8D B2 A6			sta CRT_CURSOR
  3102 1EA3 90 03			scc
  3103 1EA5 EE B3 A6			inc CRT_CURSOR+1
  3104
  3105 				; ------------------------------------------------------------
  3106
  3107 = ADD5			OFFSET	= DATAORIGIN+$0960
  3108
  3109 = ADD5			@VarData	= OFFSET
  3110 = 0001			@VarDataSize	= 1
  3111
  3112 1EA8			@exit
  3113 					.ifdef @new
  3114 					lda <@VarData
  3115 					sta :ztmp
  3116 					lda >@VarData
  3117 					ldy #@VarDataSize-1
  3118 					jmp @FreeMem
  3119 					els
  3120 1EA8 60				rts						; ret
  3121 					eif
  3122 				.endl
  3123
  3124 1EA9			.local	CRT_NEWLINE_06EB				; PROCEDURE | OVERLOAD
  3125
  3126 				; optimize OK (B_CRT), line = 676
  3127
  3128 1EA9 AD B4 A6			lda CRT_LEFTMARGIN
  3129 1EAC 20 43 1E			jsr CRT_NEWLINE_06C0
  3130 1EAF			@exit
  3131 					.ifdef @new
  3132 					lda <@VarData
  3133 					sta :ztmp
  3134 					lda >@VarData
  3135 					ldy #@VarDataSize-1
  3136 					jmp @FreeMem
  3137 					els
  3138 1EAF 60				rts						; ret
  3139 					eif
  3140 				.endl
  3141
  3142 1EB0			.local	CRT_WRITECENTERED_06F6				; PROCEDURE | OVERLOAD
  3143
  3144 				; ------------------------------------------------------------
  3145
  3146 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  3147 				; as Pointer
  3148 1EB0 B5 94			lda :STACKORIGIN,x
  3149 1EB2 8D D6 AD			sta ROW
  3150 1EB5 CA				dex
  3151 1EB6 30 1D			jmi @main
  3152
  3153 				; ------------------------------------------------------------
  3154
  3155 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3156 				; as Pointer
  3157 1EB8 B5 94			lda :STACKORIGIN,x
  3158 1EBA 85 82			sta :bp2
  3159 1EBC B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  3160 1EBE 85 83			sta :bp2+1
  3161 1EC0 A0 00			ldy #$00
  3162 1EC2 B1 82 99 D7 AD C8 + 	mva:rne (:bp2),y adr.S,y+
  3163 1ECA A9 D7 8D 19 1F A9 + 	mwa #adr.S S
  3164 1ED4 CA				dex
  3165 1ED5			@main
  3166
  3167 				; optimize OK (B_CRT), line = 690
  3168
  3169 1ED5 AD B0 A6			lda CRT_SCREENWIDTH
  3170 1ED8 4A				lsr @
  3171 1ED9 85 9D			sta :STACKORIGIN+9
  3172 1EDB AD D7 AD			lda adr.S
  3173 1EDE 4A				lsr @
  3174 1EDF 85 9E			sta :STACKORIGIN+10
  3175 1EE1 A5 9D			lda :STACKORIGIN+9
  3176 1EE3 38 E5 9E			sub :STACKORIGIN+10
  3177 1EE6 38 E9 01			sub #$01
  3178 1EE9 8D D7 AE			sta OFF
  3179
  3180 				; optimize OK (B_CRT), line = 691
  3181
  3182 1EEC AD B2 A6			lda CRT_CURSOR
  3183 1EEF 18 6D D7 AE			add OFF
  3184 1EF3 8D B2 A6			sta CRT_CURSOR
  3185 1EF6 90 03			scc
  3186 1EF8 EE B3 A6			inc CRT_CURSOR+1
  3187
  3188 				; optimize OK (B_CRT), line = 692
  3189
  3190 1EFB AD D7 AE			lda OFF
  3191 1EFE 8D C1 AA			sta CRT_GOTOXY.X
  3192 1F01 AD D6 AD			lda ROW
  3193 1F04 8D C2 AA			sta CRT_GOTOXY.Y
  3194 1F07 20 C5 1B			jsr CRT_GOTOXY
  3195
  3196 				; optimize FAIL ('CRT_WRITE_053A', B_CRT), line = 693
  3197
  3198 1F0A E8				inx
  3199 1F0B AD 19 1F 95 94		mva S :STACKORIGIN,x
  3200 1F10 AD 1A 1F 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3201 1F15 20 38 1C			jsr CRT_WRITE_053A
  3202
  3203 				; ------------------------------------------------------------
  3204
  3205 = ADD6			ROW	= DATAORIGIN+$0961
  3206 = ADD7			adr.S	= [DATAORIGIN+$0962] .array [256]
  3207 1F18			.var S	= adr.S .word
  3208 = AED7			OFF	= DATAORIGIN+$0A62
  3209
  3210 = ADD6			@VarData	= ROW
  3211 = 0102			@VarDataSize	= 258
  3212
  3213 1F18			@exit
  3214 					.ifdef @new
  3215 					lda <@VarData
  3216 					sta :ztmp
  3217 					lda >@VarData
  3218 					ldy #@VarDataSize-1
  3219 					jmp @FreeMem
  3220 					els
  3221 1F18 60				rts						; ret
  3222 					eif
  3223 = 1F19 D7 AD		S
  3223 				.endl
  3224
  3225 1F1B			.local	CRT_WRITERIGHTALIGNED_0722			; PROCEDURE | OVERLOAD
  3226
  3227 				; ------------------------------------------------------------
  3228
  3229 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  3230 				; as Pointer
  3231 1F1B B5 94			lda :STACKORIGIN,x
  3232 1F1D 8D D8 AE			sta ROW
  3233 1F20 CA				dex
  3234 1F21 30 1D			jmi @main
  3235
  3236 				; ------------------------------------------------------------
  3237
  3238 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3239 				; as Pointer
  3240 1F23 B5 94			lda :STACKORIGIN,x
  3241 1F25 85 82			sta :bp2
  3242 1F27 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  3243 1F29 85 83			sta :bp2+1
  3244 1F2B A0 00			ldy #$00
  3245 1F2D B1 82 99 D9 AE C8 + 	mva:rne (:bp2),y adr.S,y+
  3246 1F35 A9 D9 8D 77 1F A9 + 	mwa #adr.S S
  3247 1F3F CA				dex
  3248 1F40			@main
  3249
  3250 				; optimize OK (B_CRT), line = 704
  3251
  3252 1F40 AD B0 A6			lda CRT_SCREENWIDTH
  3253 1F43 38 ED D9 AE			sub adr.S
  3254 1F47 8D D9 AF			sta OFF
  3255
  3256 				; optimize OK (B_CRT), line = 705
  3257
  3258 1F4A AD B2 A6			lda CRT_CURSOR
  3259 1F4D 18 6D D9 AF			add OFF
  3260 1F51 8D B2 A6			sta CRT_CURSOR
  3261 1F54 90 03			scc
  3262 1F56 EE B3 A6			inc CRT_CURSOR+1
  3263
  3264 				; optimize OK (B_CRT), line = 706
  3265
  3266 1F59 AD D9 AF			lda OFF
  3267 1F5C 8D C1 AA			sta CRT_GOTOXY.X
  3268 1F5F AD D8 AE			lda ROW
  3269 1F62 8D C2 AA			sta CRT_GOTOXY.Y
  3270 1F65 20 C5 1B			jsr CRT_GOTOXY
  3271
  3272 				; optimize FAIL ('CRT_WRITE_053A', B_CRT), line = 707
  3273
  3274 1F68 E8				inx
  3275 1F69 AD 77 1F 95 94		mva S :STACKORIGIN,x
  3276 1F6E AD 78 1F 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3277 1F73 20 38 1C			jsr CRT_WRITE_053A
  3278
  3279 				; ------------------------------------------------------------
  3280
  3281 = AED8			ROW	= DATAORIGIN+$0A63
  3282 = AED9			adr.S	= [DATAORIGIN+$0A64] .array [256]
  3283 1F76			.var S	= adr.S .word
  3284 = AFD9			OFF	= DATAORIGIN+$0B64
  3285
  3286 = AED8			@VarData	= ROW
  3287 = 0102			@VarDataSize	= 258
  3288
  3289 1F76			@exit
  3290 					.ifdef @new
  3291 					lda <@VarData
  3292 					sta :ztmp
  3293 					lda >@VarData
  3294 					ldy #@VarDataSize-1
  3295 					jmp @FreeMem
  3296 					els
  3297 1F76 60				rts						; ret
  3298 					eif
  3299 = 1F77 D9 AE		S
  3299 				.endl
  3300
  3301 1F79			.local	CRT_CLEARROW_0742				; PROCEDURE | OVERLOAD
  3302 1F79 8D DA AF			sta ROW
  3303
  3304 				; optimize OK (B_CRT), line = 717
  3305
  3306 1F7C AD B4 A6			lda CRT_LEFTMARGIN
  3307 1F7F 8D C1 AA			sta CRT_GOTOXY.X
  3308 1F82 AD DA AF			lda ROW
  3309 1F85 8D C2 AA			sta CRT_GOTOXY.Y
  3310 1F88 20 C5 1B			jsr CRT_GOTOXY
  3311
  3312 				; optimize OK (B_CRT), line = 718
  3313
  3314 1F8B AD B0 A6			lda CRT_SCREENWIDTH
  3315 1F8E 85 8C			sta :ecx
  3316 1F90 AD DA AF			lda ROW
  3317 1F93 85 84			sta :eax
  3318 					.ifdef fmulinit
  3319 					fmulu_8
  3320 					els
  3321 1F95 20 F8 11			imulCL
  3322 					eif
  3323 1F98 AD AC A6			lda CRT_VRAM
  3324 1F9B 18 65 84			add :eax
  3325 1F9E 85 88			sta SYSTEM.FILLBYTE_02BD.A
  3326 1FA0 AD AD A6			lda CRT_VRAM+1
  3327 1FA3 65 85			adc :eax+1
  3328 1FA5 85 89			sta SYSTEM.FILLBYTE_02BD.A+1
  3329 1FA7 AD B0 A6			lda CRT_SCREENWIDTH
  3330 1FAA 85 8C			sta SYSTEM.FILLBYTE_02BD.COUNT
  3331 1FAC A9 00			lda #$00
  3332 1FAE 85 8D			sta SYSTEM.FILLBYTE_02BD.COUNT+1
  3333 1FB0 85 84			sta SYSTEM.FILLBYTE_02BD.VALUE
  3334 1FB2				.LOCAL +MAIN.SYSTEM.FILLBYTE_02BD
  3335 1FB2				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE_02BD.M@INLINE [Source: main.a65]
     4 1FB2 20 8A 10			jsr @fill
Source: main.a65
  3336 					.ENDL
  3337
  3338 				; ------------------------------------------------------------
  3339
  3340 = AFDA			ROW	= DATAORIGIN+$0B65
  3341
  3342 = AFDA			@VarData	= ROW
  3343 = 0001			@VarDataSize	= 1
  3344
  3345 1FB5			@exit
  3346 					.ifdef @new
  3347 					lda <@VarData
  3348 					sta :ztmp
  3349 					lda >@VarData
  3350 					ldy #@VarDataSize-1
  3351 					jmp @FreeMem
  3352 					els
  3353 1FB5 60				rts						; ret
  3354 					eif
  3355 				.endl
  3356
  3357 1FB6			.local	CRT_INVERT					; PROCEDURE
  3358
  3359 				; optimize OK (B_CRT), line = 734
  3360
  3361 1FB6 AD B0 A6			lda CRT_SCREENWIDTH
  3362 1FB9 85 8C			sta :ecx
  3363 1FBB AD DC AF			lda Y
  3364 1FBE 85 84			sta :eax
  3365 					.ifdef fmulinit
  3366 					fmulu_8
  3367 					els
  3368 1FC0 20 F8 11			imulCL
  3369 					eif
  3370 1FC3 AD AC A6			lda CRT_VRAM
  3371 1FC6 18 65 84			add :eax
  3372 1FC9 A8				tay
  3373 1FCA AD AD A6			lda CRT_VRAM+1
  3374 1FCD 65 85			adc :eax+1
  3375 1FCF 8D DF AF			sta CURSOR+1
  3376 1FD2 98				tya
  3377 1FD3 18 6D DB AF			add X
  3378 1FD7 8D DE AF			sta CURSOR
  3379 1FDA 90 03			scc
  3380 1FDC EE DF AF			inc CURSOR+1
  3381
  3382 				; --- WhileProlog
  3383 1FDF 4C FB 1F			jmp l_077C
  3384 1FE2			l_077D
  3385
  3386 				; optimize OK (B_CRT), line = 736
  3387
  3388 1FE2 AC DF AF			ldy CURSOR+1
  3389 1FE5 84 81			sty :bp+1
  3390 1FE7 AC DE AF			ldy CURSOR
  3391 1FEA B1 80			lda (:bp),y
  3392 1FEC 49 80			eor #$80
  3393 1FEE 91 80			sta (:bp),y
  3394
  3395 				; optimize FAIL (0, B_CRT), line = 737
  3396
  3397 1FF0 CE DD AF			dec WIDTH
  3398
  3399 				; optimize FAIL (0, B_CRT), line = 738
  3400
  3401 1FF3 EE DE AF			inc CURSOR
  3402 1FF6 D0 03			sne
  3403 1FF8 EE DF AF			inc CURSOR+1
  3404 1FFB			l_077C
  3405
  3406 				; optimize OK (B_CRT), line = 735
  3407
  3408 1FFB AD DD AF			lda WIDTH
  3409 1FFE D0 E2			jne l_077D
  3410
  3411 				; ------------------------------------------------------------
  3412
  3413 = AFDB			X	= DATAORIGIN+$0B66
  3414 = AFDC			Y	= DATAORIGIN+$0B67
  3415 = AFDD			WIDTH	= DATAORIGIN+$0B68
  3416 = AFDE			CURSOR	= DATAORIGIN+$0B69
  3417
  3418 = AFDB			@VarData	= X
  3419 = 0005			@VarDataSize	= 5
  3420
  3421 2000			@exit
  3422 					.ifdef @new
  3423 					lda <@VarData
  3424 					sta :ztmp
  3425 					lda >@VarData
  3426 					ldy #@VarDataSize-1
  3427 					jmp @FreeMem
  3428 					els
  3429 2000 60				rts						; ret
  3430 					eif
  3431 				.endl
  3432
  3433 				; ------------------------------------------------------------
  3434
  3435 = 0028			DEFAULT_SCREENWIDTH	= $28
  3436 = 0018			DEFAULT_SCREENHEIGHT	= $18
  3437 = 009B			CHAR_RETURN	= $9B
  3438 = 001B			CHAR_ESCAPE	= $1B
  3439 = 007E			CHAR_BACKSPACE	= $7E
  3440 = 007F			CHAR_TAB	= $7F
  3441 = 0081			CHAR_INVERSE	= $81
  3442 = 0082			CHAR_CAPS	= $82
  3443 = 00DB			ICHAR_RETURN	= $DB
  3444 = 005B			ICHAR_ESCAPE	= $5B
  3445 = 007E			ICHAR_BACKSPACE	= $7E
  3446 = 007F			ICHAR_TAB	= $7F
  3447 = 00C1			ICHAR_INVERSE	= $C1
  3448 = 00C2			ICHAR_CAPS	= $C2
  3449 = 0E5D			adr.CRT_KEYCODE	= CODEORIGIN+$025D
  3450 2001			.var CRT_KEYCODE	= adr.CRT_KEYCODE .word
  3451 = A6AC			CRT_VRAM	= DATAORIGIN+$0237
  3452 = A6AE			CRT_SIZE	= DATAORIGIN+$0239
  3453 = A6B0			CRT_SCREENWIDTH	= DATAORIGIN+$023B
  3454 = A6B1			CRT_SCREENHEIGHT	= DATAORIGIN+$023C
  3455 = A6B2			CRT_CURSOR	= DATAORIGIN+$023D
  3456 = A6B4			CRT_LEFTMARGIN	= DATAORIGIN+$023F
  3457 = D209			KBCODE	= $D209
  3458 = D01F			CONSOL	= $D01F
  3459
  3460 = 2001 5D 0E		CRT_KEYCODE
  3460 				.endl							; UNIT B_CRT
  3461
  3462 2003			.local	GETRANDOM					; FUNCTION
  3463
  3464 				; optimize OK (helpers.pas), line = 12
  3465
  3466 2003 AD 7D B4			lda MINP
  3467 2006 8D 87 B4			sta PROP
  3468 2009 AD 7E B4			lda MINP+1
  3469 200C 8D 88 B4			sta PROP+1
  3470
  3471 				; --- RepeatUntilProlog
  3472 200F			l_07A5
  3473
  3474 				; optimize FAIL ('B_CRT.CRT_KEYPRESSED', helpers.pas), line = 14
  3475
  3476 200F 20 30 1D			jsr B_CRT.CRT_KEYPRESSED
  3477 2012 AD CE AB			lda B_CRT.CRT_KEYPRESSED.RESULT
  3478 2015 D0 F8			jne l_07A5
  3479
  3480 				; --- RepeatUntilProlog
  3481 2017			l_07AE
  3482
  3483 				; optimize OK (helpers.pas), line = 17
  3484
  3485 2017 AD 87 B4			lda PROP
  3486 201A 18 6D 81 B4			add STEPS
  3487 201E 8D 87 B4			sta PROP
  3488 2021 AD 88 B4			lda PROP+1
  3489 2024 6D 82 B4			adc STEPS+1
  3490 2027 8D 88 B4			sta PROP+1
  3491
  3492 				; optimize OK (helpers.pas), line = 18
  3493
  3494 202A AD 80 B4			lda MAXP+1
  3495 202D CD 88 B4			cmp PROP+1
  3496 2030 D0 06			bne @+
  3497 2032 AD 7F B4			lda MAXP
  3498 2035 CD 87 B4			cmp PROP
  3499 				@
  3500 2038 B0 0C			jcs l_07CA
  3501
  3502 				; optimize OK (helpers.pas), line = 19
  3503
  3504 203A AD 7D B4			lda MINP
  3505 203D 8D 87 B4			sta PROP
  3506 2040 AD 7E B4			lda MINP+1
  3507 2043 8D 88 B4			sta PROP+1
  3508 2046			l_07CA
  3509
  3510 				; optimize OK (helpers.pas), line = 20
  3511
  3512 2046 AD 83 B4			lda X
  3513 2049 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  3514 204C AD 84 B4			lda Y
  3515 204F 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  3516 2052 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  3517
  3518 				; optimize FAIL ('B_SYSTEM.WAITFRAME', helpers.pas), line = 21
  3519
  3520 2055 20 5B 1A			jsr B_SYSTEM.WAITFRAME
  3521
  3522 				; optimize OK (helpers.pas), line = 22
  3523
  3524 2058 AD 87 B4			lda PROP
  3525 205B 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
  3526 205E AD 88 B4			lda PROP+1
  3527 2061 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
  3528 2064 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
  3529
  3530 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpers.pas), line = 23
  3531
  3532 2067 E8				inx
  3533 2068 A9 76 95 94			mva #$76 :STACKORIGIN,x
  3534 206C A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  3535 2070 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  3536
  3537 				; optimize FAIL ('B_CRT.CRT_KEYPRESSED', helpers.pas), line = 25
  3538
  3539 2073 20 30 1D			jsr B_CRT.CRT_KEYPRESSED
  3540 2076 AD CE AB			lda B_CRT.CRT_KEYPRESSED.RESULT
  3541 2079 F0 9C			jeq l_07AE
  3542
  3543 				; optimize OK (helpers.pas), line = 26
  3544
  3545 207B AD 87 B4			lda PROP
  3546 207E 8D 85 B4			sta RESULT
  3547 2081 AD 88 B4			lda PROP+1
  3548 2084 8D 86 B4			sta RESULT+1
  3549 2087			@exit
  3550
  3551 				; ------------------------------------------------------------
  3552
  3553 = B47D			MINP	= DATAORIGIN+$1008
  3554 = B47F			MAXP	= DATAORIGIN+$100A
  3555 = B481			STEPS	= DATAORIGIN+$100C
  3556 = B483			X	= DATAORIGIN+$100E
  3557 = B484			Y	= DATAORIGIN+$100F
  3558 = B485			RESULT	= DATAORIGIN+$1010
  3559 = B487			PROP	= DATAORIGIN+$1012
  3560
  3561 = B47D			@VarData	= MINP
  3562 = 000A			@VarDataSize	= 10
  3563
  3564 2087 60				rts						; ret
  3565 				.endl
  3566
  3567 2088			.local	EFFECTWAIT					; PROCEDURE
  3568
  3569 				; optimize OK (helpers.pas), line = 33
  3570
  3571 2088 A9 78			lda #$78
  3572 208A 20 62 1A			jsr B_SYSTEM.WAITFRAMES
  3573 208D			@exit
  3574 					.ifdef @new
  3575 					lda <@VarData
  3576 					sta :ztmp
  3577 					lda >@VarData
  3578 					ldy #@VarDataSize-1
  3579 					jmp @FreeMem
  3580 					els
  3581 208D 60				rts						; ret
  3582 					eif
  3583 				.endl
  3584
  3585 208E			.local	READKEYANDSTICK					; FUNCTION
  3586
  3587 				; -------------------  ASM Block 00000158  -------------------
  3588
  3589 				;
  3590 208E 48 8A 48 98 48	        phr
  3591 2093			  loop:
  3592 2093 AD 00 D3		        lda $d300
  3593 2096 29 0F		        and #$0f
  3594 2098 C9 0F		        cmp #$0f 
  3595 209A D0 27		        bne foundstick
  3596
  3597 209C AD 1F D0		        lda consol		; START
  3598 209F C9 05		        cmp #$05
  3599 20A1 F0 27		        beq foundsave
  3600 20A3 C9 03		        cmp #$03
  3601 20A5 F0 28		        beq foundload
  3602
  3603 20A7 AD 0F D2		        lda skctl		; ANY KEY
  3604 20AA 29 04		        and #$04
  3605 20AC D0 E5		        bne loop
  3606
  3607 20AE AD 09 D2		        lda kbcode
  3608 20B1 4C D1 20		        jmp loopend
  3609 20B4			  stickdata:
  3610 				        // right, left, down, up --> 7= 0111=right 11=1011=left, 13=1101=down, 14=1110=up
  3611 20B4 00 00 00 00 00 00 +         dta 0,0,0,0,    0,0, $73, 0,   0,0, $02, 0,     0, $26, $60
  3612 20C3			  foundstick:
  3613 20C3 A8			        tay
  3614 20C4 B9 B4 20		        lda stickdata,y
  3615 20C7 4C D1 20		        jmp loopend
  3616 20CA			  foundsave:
  3617 20CA A9 1F		        lda #$1f 
  3618 20CC 4C D1 20		        jmp loopend
  3619 20CF			  foundload:
  3620 20CF A9 1E		        lda #$1e
  3621 				        // check for key
  3622 20D1			  loopend:
  3623 20D1 8D 8A B4		        sta ch
  3624 20D4 68 A8 68 AA 68	        plr
  3625 				  
  3626 				; optimize OK (helpers.pas), line = 80
  3627
  3628 20D9 AD 8A B4			lda CH
  3629 20DC 8D 89 B4			sta RESULT
  3630 20DF			@exit
  3631
  3632 				; ------------------------------------------------------------
  3633
  3634 = B489			RESULT	= DATAORIGIN+$1014
  3635 = B48A			CH	= DATAORIGIN+$1015
  3636
  3637 = B48A			@VarData	= CH
  3638 = 0001			@VarDataSize	= 1
  3639
  3640 20DF 60				rts						; ret
  3641 				.endl
  3642
  3643 20E0			.local	CHECKKEYANDSTICK				; FUNCTION
  3644
  3645 				; optimize OK (helpers.pas), line = 90
  3646
  3647 20E0 A9 00			lda #$00
  3648 20E2 8D 8C B4			sta CH
  3649
  3650 				; -------------------  ASM Block 00000159  -------------------
  3651
  3652 				;
  3653 20E5 48 8A 48 98 48	        phr
  3654
  3655 20EA AD 00 D3		        lda $d300
  3656 20ED 29 0F		        and #$0f
  3657 20EF C9 0F		        cmp #$0f   
  3658 20F1 D0 23		        bne foundstick
  3659
  3660 20F3 AD 1F D0		        lda consol		; START
  3661 20F6 29 01		        and #1
  3662 20F8 F0 23		        beq foundconsol
  3663
  3664 20FA AD 0F D2		        lda skctl		; ANY KEY
  3665 20FD 29 04		        and #$04
  3666 20FF D0 1C		        bne loopend_zero
  3667
  3668 2101 AD 09 D2		        lda kbcode
  3669 2104 4C 1F 21		        jmp loopend
  3670 2107			  stickdata:
  3671 2107 00 00 00 00 00 00 +         dta 0,0,0,0,0,0, $73, 0,0,0, $02, 0, 0, $26, $60
  3672 2116			  foundstick:
  3673 2116 A8			        tay
  3674 2117 B9 07 21		        lda stickdata,y
  3675 211A 4C 1F 21		        jmp loopend
  3676 211D			  foundconsol:
  3677 				        // check for key
  3678 211D			  loopend_zero:
  3679 211D A9 00		        lda #$00
  3680 211F			  loopend:
  3681 211F 8D 8C B4		        sta ch
  3682 2122 68 A8 68 AA 68	        plr
  3683 				  
  3684 				; optimize OK (helpers.pas), line = 124
  3685
  3686 2127 AD 8C B4			lda CH
  3687 212A 8D 8B B4			sta RESULT
  3688 212D			@exit
  3689
  3690 				; ------------------------------------------------------------
  3691
  3692 = B48B			RESULT	= DATAORIGIN+$1016
  3693 = B48C			CH	= DATAORIGIN+$1017
  3694
  3695 = B48C			@VarData	= CH
  3696 = 0001			@VarDataSize	= 1
  3697
  3698 212D 60				rts						; ret
  3699 				.endl
  3700
  3701 212E			.local	WAITFORKEY					; PROCEDURE
  3702
  3703 				; optimize FAIL ('B_CRT.CRT_WHEREY', helpers.pas), line = 131
  3704
  3705 212E E8				inx
  3706 212F AD 36 A4 95 94		mva WAITKEY_STRING :STACKORIGIN,x
  3707 2134 AD 37 A4 95 A4		mva WAITKEY_STRING+1 :STACKORIGIN+STACKWIDTH,x
  3708 2139 20 F2 1B			jsr B_CRT.CRT_WHEREY
  3709 213C E8				inx
  3710 213D AD C3 AA			lda B_CRT.CRT_WHEREY.RESULT
  3711 2140 18 69 02			add #$02
  3712 2143 95 94			sta :STACKORIGIN,x
  3713 2145 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  3714
  3715 				; optimize FAIL ('B_CRT.CRT_READKEY', helpers.pas), line = 132
  3716
  3717 2148 20 42 1D			jsr B_CRT.CRT_READKEY
  3718 214B			@exit
  3719 					.ifdef @new
  3720 					lda <@VarData
  3721 					sta :ztmp
  3722 					lda >@VarData
  3723 					ldy #@VarDataSize-1
  3724 					jmp @FreeMem
  3725 					els
  3726 214B 60				rts						; ret
  3727 					eif
  3728 				.endl
  3729
  3730 214C			.local	CRT_WRITELN2					; PROCEDURE
  3731
  3732 				; ------------------------------------------------------------
  3733
  3734 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3735 				; as Pointer
  3736 214C B5 94			lda :STACKORIGIN,x
  3737 214E 85 82			sta :bp2
  3738 2150 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  3739 2152 85 83			sta :bp2+1
  3740 2154 A0 00			ldy #$00
  3741 2156 B1 82 99 8D B4 C8 + 	mva:rne (:bp2),y adr.S,y+
  3742 215E A9 8D 8D 7E 21 A9 + 	mwa #adr.S S
  3743 2168 CA				dex
  3744 2169			@main
  3745
  3746 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpers.pas), line = 138
  3747
  3748 2169 E8				inx
  3749 216A AD 7E 21 95 94		mva S :STACKORIGIN,x
  3750 216F AD 7F 21 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3751 2174 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  3752
  3753 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpers.pas), line = 139
  3754
  3755 2177 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  3756
  3757 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpers.pas), line = 140
  3758
  3759 217A 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  3760
  3761 				; ------------------------------------------------------------
  3762
  3763 = B48D			adr.S	= [DATAORIGIN+$1018] .array [256]
  3764 217D			.var S	= adr.S .word
  3765
  3766 = 217E			@VarData	= S
  3767 = 0100			@VarDataSize	= 256
  3768
  3769 217D			@exit
  3770 					.ifdef @new
  3771 					lda <@VarData
  3772 					sta :ztmp
  3773 					lda >@VarData
  3774 					ldy #@VarDataSize-1
  3775 					jmp @FreeMem
  3776 					els
  3777 217D 60				rts						; ret
  3778 					eif
  3779 = 217E 8D B4		S
  3779 				.endl
  3780
  3781 2180			.local	CRT_WRITELN					; PROCEDURE
  3782
  3783 				; ------------------------------------------------------------
  3784
  3785 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3786 				; as Pointer
  3787 2180 B5 94			lda :STACKORIGIN,x
  3788 2182 85 82			sta :bp2
  3789 2184 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  3790 2186 85 83			sta :bp2+1
  3791 2188 A0 00			ldy #$00
  3792 218A B1 82 99 8D B5 C8 + 	mva:rne (:bp2),y adr.S,y+
  3793 2192 A9 8D 8D AF 21 A9 + 	mwa #adr.S S
  3794 219C CA				dex
  3795 219D			@main
  3796
  3797 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpers.pas), line = 146
  3798
  3799 219D E8				inx
  3800 219E AD AF 21 95 94		mva S :STACKORIGIN,x
  3801 21A3 AD B0 21 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3802 21A8 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  3803
  3804 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpers.pas), line = 147
  3805
  3806 21AB 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  3807
  3808 				; ------------------------------------------------------------
  3809
  3810 = B58D			adr.S	= [DATAORIGIN+$1118] .array [256]
  3811 21AE			.var S	= adr.S .word
  3812
  3813 = 21AF			@VarData	= S
  3814 = 0100			@VarDataSize	= 256
  3815
  3816 21AE			@exit
  3817 					.ifdef @new
  3818 					lda <@VarData
  3819 					sta :ztmp
  3820 					lda >@VarData
  3821 					ldy #@VarDataSize-1
  3822 					jmp @FreeMem
  3823 					els
  3824 21AE 60				rts						; ret
  3825 					eif
  3826 = 21AF 8D B5		S
  3826 				.endl
  3827
  3828 21B1			.local	GETANSWER					; FUNCTION
  3829
  3830 				; --- RepeatUntilProlog
  3831 21B1			l_0830
  3832
  3833 				; optimize FAIL ('B_CRT.CRT_READKEY', helpers.pas), line = 156
  3834
  3835 21B1 20 42 1D			jsr B_CRT.CRT_READKEY
  3836 21B4 AD CF AB			lda B_CRT.CRT_READKEY.RESULT
  3837 21B7 8D 8F B6			sta RESULT
  3838
  3839 				; optimize OK (helpers.pas), line = 157
  3840
  3841 21BA AD 8D B6			lda A
  3842 21BD CD 8F B6			cmp RESULT
  3843 21C0 F0 08			jeq l_0830x
  3844 21C2 AD 8E B6			lda B
  3845 21C5 CD 8F B6			cmp RESULT
  3846 21C8 D0 E7			jne l_0830
  3847 21CA			l_0830x
  3848
  3849 				; optimize OK (helpers.pas), line = 158
  3850
  3851 21CA A0 01			ldy #1
  3852 21CC AD 8F B6			lda RESULT
  3853 21CF CD 8E B6			cmp B
  3854 21D2 F0 01			beq @+
  3855 21D4 88				dey
  3856 				@
  3857 21D5 98				tya
  3858 21D6 8D 8F B6			sta RESULT
  3859 21D9			@exit
  3860
  3861 				; ------------------------------------------------------------
  3862
  3863 = B68D			A	= DATAORIGIN+$1218
  3864 = B68E			B	= DATAORIGIN+$1219
  3865 = B68F			RESULT	= DATAORIGIN+$121A
  3866
  3867 = B68D			@VarData	= A
  3868 = 0002			@VarDataSize	= 2
  3869
  3870 21D9 60				rts						; ret
  3871 				.endl
  3872
  3873 21DA			.local	GETYESNO					; FUNCTION
  3874
  3875 				; optimize OK (helpers.pas), line = 165
  3876
  3877 21DA A9 23			lda #$23
  3878 21DC 8D 8D B6			sta GETANSWER.A
  3879 21DF A9 2B			lda #$2B
  3880 21E1 8D 8E B6			sta GETANSWER.B
  3881 21E4 20 B1 21			jsr GETANSWER
  3882 21E7 AD 8F B6			lda GETANSWER.RESULT
  3883 21EA 8D 90 B6			sta RESULT
  3884 21ED			@exit
  3885
  3886 				; ------------------------------------------------------------
  3887
  3888 = B690			RESULT	= DATAORIGIN+$121B
  3889 21ED 60				rts						; ret
  3890 				.endl
  3891
  3892 21EE			.local	READVALUE					; FUNCTION
  3893
  3894 				; optimize FAIL ('B_CRT.CRT_WHEREX', helpers.pas), line = 174
  3895
  3896 21EE 20 15 1C			jsr B_CRT.CRT_WHEREX
  3897 21F1 AD C4 AA			lda B_CRT.CRT_WHEREX.RESULT
  3898 21F4 8D 99 B6			sta X
  3899
  3900 				; optimize FAIL ('B_CRT.CRT_WHEREY', helpers.pas), line = 175
  3901
  3902 21F7 20 F2 1B			jsr B_CRT.CRT_WHEREY
  3903 21FA AD C3 AA			lda B_CRT.CRT_WHEREY.RESULT
  3904 21FD 8D 9A B6			sta Y
  3905
  3906 				; --- RepeatUntilProlog
  3907 2200			l_0876
  3908
  3909 				; optimize OK (helpers.pas), line = 178
  3910
  3911 2200 AD 99 B6			lda X
  3912 2203 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  3913 2206 AD 9A B6			lda Y
  3914 2209 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  3915 220C 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  3916
  3917 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpers.pas), line = 179
  3918
  3919 220F E8				inx
  3920 2210 A9 7A 95 94			mva #$7A :STACKORIGIN,x
  3921 2214 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  3922 2218 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  3923
  3924 				; optimize OK (helpers.pas), line = 180
  3925
  3926 221B AD 99 B6			lda X
  3927 221E 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  3928 2221 AD 9A B6			lda Y
  3929 2224 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  3930 2227 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  3931
  3932 				; optimize OK (helpers.pas), line = 182
  3933
  3934 222A A9 05			lda #$05
  3935 222C 20 95 1D			jsr B_CRT.CRT_READSTRINGI_05F8
  3936 222F E8				inx
  3937 2230 AD 0B 1E			lda B_CRT.CRT_READSTRINGI_05F8.RESULT
  3938 2233 85 88			sta @move.src
  3939 2235 AD 0C 1E			lda B_CRT.CRT_READSTRINGI_05F8.RESULT+1
  3940 2238 85 89			sta @move.src+1
  3941 223A AC E5 22 84 82 AC + 	mwy K :bp2
  3942 2244 A0 00			ldy #$00
  3943 2246 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  3944
  3945 				; optimize FAIL ('B_CRT.ANTIC2ATASCII_0483', helpers.pas), line = 183
  3946
  3947 224D AD E5 22 95 94		mva K :STACKORIGIN,x
  3948 2252 AD E6 22 95 A4		mva K+1 :STACKORIGIN+STACKWIDTH,x
  3949 2257 20 06 1B			jsr B_CRT.ANTIC2ATASCII_0483
  3950 225A E8				inx
  3951 225B AD 5F 1B			lda B_CRT.ANTIC2ATASCII_0483.RESULT
  3952 225E 85 88			sta @move.src
  3953 2260 AD 60 1B			lda B_CRT.ANTIC2ATASCII_0483.RESULT+1
  3954 2263 85 89			sta @move.src+1
  3955 2265 AC E5 22 84 82 AC + 	mwy K :bp2
  3956 226F A0 00			ldy #$00
  3957 2271 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  3958 2278 CA				dex
  3959
  3960 				; optimize OK (helpers.pas), line = 184
  3961
  3962 2279 AD E5 22			lda K
  3963 227C 8D A0 A6			sta SYSUTILS.STRTOINT_03E8.S
  3964 227F AD E6 22			lda K+1
  3965 2282 8D A1 A6			sta SYSUTILS.STRTOINT_03E8.S+1
  3966 2285 20 B7 19			jsr SYSUTILS.STRTOINT_03E8
  3967 2288 AD A2 A6			lda SYSUTILS.STRTOINT_03E8.RESULT
  3968 228B 8D 97 B6			sta IVALUE
  3969 228E AD A3 A6			lda SYSUTILS.STRTOINT_03E8.RESULT+1
  3970 2291 8D 98 B6			sta IVALUE+1
  3971
  3972 				; optimize OK (helpers.pas), line = 185
  3973
  3974 2294 A0 01			ldy #1
  3975 2296 AD 97 B6			lda IVALUE
  3976 2299 CD 91 B6			cmp MINVALUE
  3977 229C AD 98 B6			lda IVALUE+1
  3978 229F ED 92 B6			sbc MINVALUE+1
  3979 22A2 50 02			svc
  3980 22A4 49 80			eor #$80
  3981 22A6 10 01			bpl @+
  3982 22A8 88				dey
  3983 				@
  3984 22A9 84 9D			sty :STACKORIGIN+9
  3985 22AB A0 01			ldy #1
  3986 22AD AD 93 B6			lda MAXVALUE
  3987 22B0 CD 97 B6			cmp IVALUE
  3988 22B3 AD 94 B6			lda MAXVALUE+1
  3989 22B6 ED 98 B6			sbc IVALUE+1
  3990 22B9 50 02			svc
  3991 22BB 49 80			eor #$80
  3992 22BD 10 01			bpl @+
  3993 22BF 88				dey
  3994 				@
  3995 22C0 98				tya
  3996 22C1 25 9D			and :STACKORIGIN+9
  3997 22C3 85 9D			sta :STACKORIGIN+9
  3998 22C5 A0 01			ldy #1
  3999 22C7 AD 98 B6			lda IVALUE+1
  4000 22CA 0D 97 B6			ora IVALUE
  4001 22CD F0 01			beq @+
  4002 22CF 88				dey
  4003 				@
  4004 22D0 98				tya
  4005 22D1 05 9D			ora :STACKORIGIN+9
  4006 22D3 D0 03 4C 00 22		jeq l_0876
  4007
  4008 				; optimize OK (helpers.pas), line = 189
  4009
  4010 22D8 AD 97 B6			lda IVALUE
  4011 22DB 8D 95 B6			sta RESULT
  4012 22DE AD 98 B6			lda IVALUE+1
  4013 22E1 8D 96 B6			sta RESULT+1
  4014 22E4			@exit
  4015
  4016 				; ------------------------------------------------------------
  4017
  4018 = B691			MINVALUE	= DATAORIGIN+$121C
  4019 = B693			MAXVALUE	= DATAORIGIN+$121E
  4020 = B695			RESULT	= DATAORIGIN+$1220
  4021 = B697			IVALUE	= DATAORIGIN+$1222
  4022 = B699			X	= DATAORIGIN+$1224
  4023 = B69A			Y	= DATAORIGIN+$1225
  4024 = B69B			adr.K	= [DATAORIGIN+$1226] .array [256]
  4025 22E4			.var K	= adr.K .word
  4026
  4027 = B691			@VarData	= MINVALUE
  4028 = 0108			@VarDataSize	= 264
  4029
  4030 22E4 60				rts						; ret
  4031 = 22E5 9B B6		K
  4031 				.endl
  4032
  4033 22E7			.local	READVALUENOZERO					; FUNCTION
  4034
  4035 				; optimize FAIL ('B_CRT.CRT_WHEREX', helpers.pas), line = 201
  4036
  4037 22E7 20 15 1C			jsr B_CRT.CRT_WHEREX
  4038 22EA AD C4 AA			lda B_CRT.CRT_WHEREX.RESULT
  4039 22ED 8D A3 B7			sta X
  4040
  4041 				; optimize FAIL ('B_CRT.CRT_WHEREY', helpers.pas), line = 202
  4042
  4043 22F0 20 F2 1B			jsr B_CRT.CRT_WHEREY
  4044 22F3 AD C3 AA			lda B_CRT.CRT_WHEREY.RESULT
  4045 22F6 8D A4 B7			sta Y
  4046
  4047 				; --- RepeatUntilProlog
  4048 22F9			l_08C7
  4049
  4050 				; optimize OK (helpers.pas), line = 205
  4051
  4052 22F9 AD A3 B7			lda X
  4053 22FC 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  4054 22FF AD A4 B7			lda Y
  4055 2302 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  4056 2305 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  4057
  4058 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpers.pas), line = 206
  4059
  4060 2308 E8				inx
  4061 2309 A9 7A 95 94			mva #$7A :STACKORIGIN,x
  4062 230D A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  4063 2311 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  4064
  4065 				; optimize OK (helpers.pas), line = 207
  4066
  4067 2314 AD A3 B7			lda X
  4068 2317 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  4069 231A AD A4 B7			lda Y
  4070 231D 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  4071 2320 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  4072
  4073 				; optimize OK (helpers.pas), line = 209
  4074
  4075 2323 A9 05			lda #$05
  4076 2325 20 95 1D			jsr B_CRT.CRT_READSTRINGI_05F8
  4077 2328 E8				inx
  4078 2329 AD 0B 1E			lda B_CRT.CRT_READSTRINGI_05F8.RESULT
  4079 232C 85 88			sta @move.src
  4080 232E AD 0C 1E			lda B_CRT.CRT_READSTRINGI_05F8.RESULT+1
  4081 2331 85 89			sta @move.src+1
  4082 2333 AC C4 23 84 82 AC + 	mwy K :bp2
  4083 233D A0 00			ldy #$00
  4084 233F B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  4085
  4086 				; optimize FAIL ('B_CRT.ANTIC2ATASCII_0483', helpers.pas), line = 210
  4087
  4088 2346 AD C4 23 95 94		mva K :STACKORIGIN,x
  4089 234B AD C5 23 95 A4		mva K+1 :STACKORIGIN+STACKWIDTH,x
  4090 2350 20 06 1B			jsr B_CRT.ANTIC2ATASCII_0483
  4091 2353 E8				inx
  4092 2354 AD 5F 1B			lda B_CRT.ANTIC2ATASCII_0483.RESULT
  4093 2357 85 88			sta @move.src
  4094 2359 AD 60 1B			lda B_CRT.ANTIC2ATASCII_0483.RESULT+1
  4095 235C 85 89			sta @move.src+1
  4096 235E AC C4 23 84 82 AC + 	mwy K :bp2
  4097 2368 A0 00			ldy #$00
  4098 236A B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  4099 2371 CA				dex
  4100
  4101 				; optimize OK (helpers.pas), line = 211
  4102
  4103 2372 AD C4 23			lda K
  4104 2375 8D A0 A6			sta SYSUTILS.STRTOINT_03E8.S
  4105 2378 AD C5 23			lda K+1
  4106 237B 8D A1 A6			sta SYSUTILS.STRTOINT_03E8.S+1
  4107 237E 20 B7 19			jsr SYSUTILS.STRTOINT_03E8
  4108 2381 AD A2 A6			lda SYSUTILS.STRTOINT_03E8.RESULT
  4109 2384 8D A1 B7			sta IVALUE
  4110 2387 AD A3 A6			lda SYSUTILS.STRTOINT_03E8.RESULT+1
  4111 238A 8D A2 B7			sta IVALUE+1
  4112
  4113 				; optimize OK (helpers.pas), line = 212
  4114
  4115 238D AD A1 B7			lda IVALUE
  4116 2390 CD 9B B7			cmp MINVALUE
  4117 2393 AD A2 B7			lda IVALUE+1
  4118 2396 ED 9C B7			sbc MINVALUE+1
  4119 2399 50 02			svc
  4120 239B 49 80			eor #$80
  4121 239D 10 03 4C F9 22		jmi l_08C7
  4122 23A2 AD 9D B7			lda MAXVALUE
  4123 23A5 CD A1 B7			cmp IVALUE
  4124 23A8 AD 9E B7			lda MAXVALUE+1
  4125 23AB ED A2 B7			sbc IVALUE+1
  4126 23AE 50 02			svc
  4127 23B0 49 80			eor #$80
  4128 23B2 10 03 4C F9 22		jmi l_08C7
  4129
  4130 				; optimize OK (helpers.pas), line = 213
  4131
  4132 23B7 AD A1 B7			lda IVALUE
  4133 23BA 8D 9F B7			sta RESULT
  4134 23BD AD A2 B7			lda IVALUE+1
  4135 23C0 8D A0 B7			sta RESULT+1
  4136 23C3			@exit
  4137
  4138 				; ------------------------------------------------------------
  4139
  4140 = B79B			MINVALUE	= DATAORIGIN+$1326
  4141 = B79D			MAXVALUE	= DATAORIGIN+$1328
  4142 = B79F			RESULT	= DATAORIGIN+$132A
  4143 = B7A1			IVALUE	= DATAORIGIN+$132C
  4144 = B7A3			X	= DATAORIGIN+$132E
  4145 = B7A4			Y	= DATAORIGIN+$132F
  4146 = B7A5			adr.K	= [DATAORIGIN+$1330] .array [256]
  4147 23C3			.var K	= adr.K .word
  4148
  4149 = B79B			@VarData	= MINVALUE
  4150 = 0108			@VarDataSize	= 264
  4151
  4152 23C3 60				rts						; ret
  4153 = 23C4 A5 B7		K
  4153 				.endl
  4154
  4155 23C6			.local	LOADGANGSTER					; PROCEDURE
  4156 23C6 8D A5 B8			sta G
  4157
  4158 				; optimize OK (helpers.pas), line = 221
  4159
  4160 23C9 AD 94 A2			lda GANGSTERFILENAME
  4161 23CC 8D A7 A5			sta XBIOS.XBIOSOPENFILE.FILENAME
  4162 23CF AD 95 A2			lda GANGSTERFILENAME+1
  4163 23D2 8D A8 A5			sta XBIOS.XBIOSOPENFILE.FILENAME+1
  4164 23D5 20 9B 16			jsr XBIOS.XBIOSOPENFILE
  4165
  4166 				; optimize OK (helpers.pas), line = 222
  4167
  4168 23D8 AD A1 A5			lda XBIOS.XBIOSIORESULT
  4169 23DB F0 0F			jeq l_0919
  4170
  4171 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpers.pas), line = 224
  4172
  4173 23DD E8				inx
  4174 23DE A9 82 95 94			mva #$82 :STACKORIGIN,x
  4175 23E2 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  4176 23E6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  4177
  4178 				; optimize FAIL ('WAITFORKEY', helpers.pas), line = 225
  4179
  4180 23E9 20 2E 21			jsr WAITFORKEY
  4181 23EC			l_0919
  4182
  4183 				; optimize OK (helpers.pas), line = 227
  4184
  4185 23EC A9 00			lda #$00
  4186 23EE 8D AA B8			sta P+2
  4187 23F1 8D AB B8			sta P+3
  4188 23F4 8D A8 B8			sta P
  4189 23F7 AD A5 B8			lda G
  4190 23FA 8D A9 B8			sta P+1
  4191
  4192 				; optimize OK (helpers.pas), line = 228
  4193
  4194 23FD AD A8 B8			lda P
  4195 2400 8D B0 A5			sta XBIOS.XBIOSSETFILEOFFSET.POS
  4196 2403 AD A9 B8			lda P+1
  4197 2406 8D B1 A5			sta XBIOS.XBIOSSETFILEOFFSET.POS+1
  4198 2409 AD AA B8			lda P+2
  4199 240C 8D B2 A5			sta XBIOS.XBIOSSETFILEOFFSET.POS+2
  4200 240F AD AB B8			lda P+3
  4201 2412 8D B3 A5			sta XBIOS.XBIOSSETFILEOFFSET.POS+3
  4202 2415 20 44 17			jsr XBIOS.XBIOSSETFILEOFFSET
  4203
  4204 				; optimize OK (helpers.pas), line = 229
  4205
  4206 2418 A9 FF			lda #$FF
  4207 241A 8D AE A5			sta XBIOS.XBIOSSETLENGTH.LEN
  4208 241D A9 00			lda #$00
  4209 241F 8D AF A5			sta XBIOS.XBIOSSETLENGTH.LEN+1
  4210 2422 20 36 17			jsr XBIOS.XBIOSSETLENGTH
  4211
  4212 				; optimize OK (helpers.pas), line = 230
  4213
  4214 2425 A9 00			lda #$00
  4215 2427 8D A7 B8			sta K
  4216
  4217 242A			l_0936
  4218 				; --- ForToDoCondition
  4219 242A 20 FF 16			jsr XBIOS.XBIOSGETBYTE
  4220 242D AD AD A5			lda XBIOS.XBIOSGETBYTE.RESULT
  4221 2430 8D A6 B8			sta B
  4222
  4223 				; optimize OK (helpers.pas), line = 233
  4224
  4225 2433 AC A7 B8			ldy K
  4226 2436 AD A6 B8			lda B
  4227 2439 99 00 E6			sta $E600,y
  4228
  4229 				; --- ForToDoEpilog
  4230 243C EE A7 B8			inc K
  4231 243F D0 E9			jne l_0936
  4232 2441			l_0944
  4233
  4234 				; optimize FAIL ('CRT_WRITELN', helpers.pas), line = 242
  4235
  4236 2441 E8				inx
  4237 2442 AD 1A A4 95 94		mva BUF_GANGSTERTEXT1 :STACKORIGIN,x
  4238 2447 AD 1B A4 95 A4		mva BUF_GANGSTERTEXT1+1 :STACKORIGIN+STACKWIDTH,x
  4239 244C 20 80 21			jsr CRT_WRITELN
  4240
  4241 				; optimize FAIL ('CRT_WRITELN', helpers.pas), line = 243
  4242
  4243 244F E8				inx
  4244 2450 AD 1C A4 95 94		mva BUF_GANGSTERTEXT2 :STACKORIGIN,x
  4245 2455 AD 1D A4 95 A4		mva BUF_GANGSTERTEXT2+1 :STACKORIGIN+STACKWIDTH,x
  4246 245A 20 80 21			jsr CRT_WRITELN
  4247
  4248 				; optimize FAIL ('CRT_WRITELN', helpers.pas), line = 244
  4249
  4250 245D E8				inx
  4251 245E AD 1E A4 95 94		mva BUF_GANGSTERTEXT3 :STACKORIGIN,x
  4252 2463 AD 1F A4 95 A4		mva BUF_GANGSTERTEXT3+1 :STACKORIGIN+STACKWIDTH,x
  4253 2468 20 80 21			jsr CRT_WRITELN
  4254
  4255 				; optimize FAIL ('CRT_WRITELN', helpers.pas), line = 245
  4256
  4257 246B E8				inx
  4258 246C AD 20 A4 95 94		mva BUF_GANGSTERTEXT4 :STACKORIGIN,x
  4259 2471 AD 21 A4 95 A4		mva BUF_GANGSTERTEXT4+1 :STACKORIGIN+STACKWIDTH,x
  4260 2476 20 80 21			jsr CRT_WRITELN
  4261
  4262 				; optimize FAIL ('CRT_WRITELN', helpers.pas), line = 246
  4263
  4264 2479 E8				inx
  4265 247A AD 22 A4 95 94		mva BUF_GANGSTERTEXT5 :STACKORIGIN,x
  4266 247F AD 23 A4 95 A4		mva BUF_GANGSTERTEXT5+1 :STACKORIGIN+STACKWIDTH,x
  4267 2484 20 80 21			jsr CRT_WRITELN
  4268
  4269 				; ------------------------------------------------------------
  4270
  4271 = B8A5			G	= DATAORIGIN+$1430
  4272 = B8A6			B	= DATAORIGIN+$1431
  4273 = B8A7			K	= DATAORIGIN+$1432
  4274 = B8A8			P	= DATAORIGIN+$1433
  4275
  4276 = B8A5			@VarData	= G
  4277 = 0007			@VarDataSize	= 7
  4278
  4279 2487			@exit
  4280 					.ifdef @new
  4281 					lda <@VarData
  4282 					sta :ztmp
  4283 					lda >@VarData
  4284 					ldy #@VarDataSize-1
  4285 					jmp @FreeMem
  4286 					els
  4287 2487 60				rts						; ret
  4288 					eif
  4289 				.endl
  4290
  4291 2488			.local	DLI_MAP						; PROCEDURE | ASSEMBLER | INTERRUPT
  4292
  4293 				; -------------------  ASM Block 00000160  -------------------
  4294
  4295
  4296 2488			dli:
  4297 2488 48 8A 48 98 48	    phr ; store registers
  4298
  4299 248D			dlijmp:
  4300 248D 4C 90 24		    jmp dli1
  4301
  4302 2490			dli1:
  4303 2490 A9 F0		    lda #>MAP_FNT_ADDRESS
  4304 2492 8D 09 D4		    sta $D409 ; CHBAS_real
  4305 2495 8D 0A D4		    sta WSYNC
  4306
  4307 2498 A9 0E 8D 16 D0	    mva #$0e atari.colpf0
  4308 249D A9 06 8D 17 D0	    mva #$06 atari.colpf1
  4309 24A2 A9 88 8D 18 D0	    mva #$88 atari.colpf2
  4310 24A7 A9 2A 8D 19 D0	    mva #$2a atari.colpf3
  4311 24AC A9 00 8D 1A D0	    mva #$00 atari.colbk
  4312
  4313 				    ; move PMG to current position
  4314 24B1 AD B8 EA		    lda PLAYERPOS_X
  4315 24B4 8D 00 D0		    sta HPOSP0
  4316 24B7 8D 01 D0		    sta HPOSP1
  4317 24BA 8D 02 D0		    sta HPOSP2
  4318 24BD 8D 03 D0		    sta HPOSP3
  4319
  4320 24C0 A9 D0		    lda #<dli2
  4321 24C2 8D 8E 24		    sta dlijmp+1
  4322 24C5 A9 24		    lda #>dli2
  4323 24C7 8D 8F 24		    sta dlijmp+2
  4324
  4325 24CA 68 A8 68 AA 68	    plr
  4326 24CF 40			    rti
  4327
  4328 24D0			dli2:
  4329 24D0 A9 FF 8D 17 D0	    mva #$ff atari.colpf1 ; lum
  4330 24D5 A9 00 8D 18 D0	    mva #$00 atari.colpf2 ; hue
  4331
  4332 24DA A9 CC		    lda #>MAINFONT_ADR
  4333 24DC 8D 09 D4		    sta $D409 ; CHBAS_real
  4334
  4335 				    ; deactivate PMG by moving it out of screen
  4336 24DF A9 00		    lda #$0
  4337 24E1 8D 00 D0		    sta HPOSP0
  4338 24E4 8D 01 D0		    sta HPOSP1
  4339 24E7 8D 02 D0		    sta HPOSP2
  4340 24EA 8D 03 D0		    sta HPOSP3
  4341 24ED 8D 0A D4		    sta WSYNC
  4342
  4343 				    ; next
  4344 24F0 A9 00		    lda #<dli3
  4345 24F2 8D 8E 24		    sta dlijmp+1
  4346 24F5 A9 25		    lda #>dli3
  4347 24F7 8D 8F 24		    sta dlijmp+2
  4348
  4349 24FA 68 A8 68 AA 68	    plr
  4350 24FF 40			    rti
  4351
  4352 2500			dli3:
  4353 2500 8D 0A D4		    sta WSYNC
  4354 2503 A9 FF 8D 17 D0	    mva #$ff atari.colpf1 ; lum
  4355 2508 A9 00 8D 18 D0	    mva #$00 atari.colpf2 ; hue
  4356
  4357 250D A9 90		    lda #<dli1
  4358 250F 8D 8E 24		    sta dlijmp+1
  4359 2512 A9 24		    lda #>dli1
  4360 2514 8D 8F 24		    sta dlijmp+2
  4361
  4362 2517 68 A8 68 AA 68	    plr
  4363 251C 40			    rti
  4364
  4365 251D 40				rti						; ret
  4366 				.endl
  4367
  4368 251E			.local	DLI_BLACK_CONSOLE				; PROCEDURE | ASSEMBLER | INTERRUPT
  4369
  4370 				; -------------------  ASM Block 00000161  -------------------
  4371
  4372
  4373 251E 48 8A 48 98 48	    phr ; store registers
  4374 2523 A9 00 8D 16 D0	    mva #$0 atari.colpf0                 ;---- outline color
  4375 2528 A9 00 8D 17 D0	    mva #$0 atari.colpf1                ;---- dark color
  4376 252D A9 00 8D 18 D0	    mva #$0 atari.colpf2                ;---- face shadow color
  4377 2532 A9 00 8D 1A D0	    mva #$0 atari.colbk                 ;---- back color
  4378 2537 68 A8 68 AA 68	    plr                                  ;---- restore registers
  4379
  4380 253C 40				rti						; ret
  4381 				.endl
  4382
  4383 253D			.local	DLI_CONSOLE					; PROCEDURE | ASSEMBLER | INTERRUPT
  4384
  4385 				; -------------------  ASM Block 00000162  -------------------
  4386
  4387
  4388 253D 48 8A 48 98 48	    phr ; store registers
  4389 2542 AD 98 C7 8D 1A D0	    mva loccolbk atari.colbk
  4390 2548 AD 99 C7 8D 16 D0	    mva loccolpf0 atari.colpf0                 ;---- outline color
  4391 254E AD 9A C7 8D 17 D0	    mva loccolpf1 atari.colpf1                 ;---- outline color
  4392 2554 AD 9B C7 8D 18 D0	    mva loccolpf2 atari.colpf2                 ;---- outline color
  4393 255A 68 A8 68 AA 68	    plr                                  ;---- restore registers
  4394
  4395 255F 40				rti						; ret
  4396 				.endl
  4397
  4398 2560			.local	WAITFRAMES					; PROCEDURE
  4399 2560 8D AD B8			sta FRAMES
  4400
  4401 				; --- WhileProlog
  4402 2563 4C 6C 25			jmp l_0970
  4403 2566			l_0971
  4404
  4405 				; optimize FAIL ('B_SYSTEM.WAITFRAME', console.pas), line = 13
  4406
  4407 2566 20 5B 1A			jsr B_SYSTEM.WAITFRAME
  4408
  4409 				; optimize FAIL (0, console.pas), line = 14
  4410
  4411 2569 CE AD B8			dec FRAMES
  4412 256C			l_0970
  4413
  4414 				; optimize OK (console.pas), line = 11
  4415
  4416 256C AD AD B8			lda FRAMES
  4417 256F D0 F5			jne l_0971
  4418
  4419 				; ------------------------------------------------------------
  4420
  4421 = B8AD			FRAMES	= DATAORIGIN+$1438
  4422
  4423 = B8AD			@VarData	= FRAMES
  4424 = 0001			@VarDataSize	= 1
  4425
  4426 2571			@exit
  4427 					.ifdef @new
  4428 					lda <@VarData
  4429 					sta :ztmp
  4430 					lda >@VarData
  4431 					ldy #@VarDataSize-1
  4432 					jmp @FreeMem
  4433 					els
  4434 2571 60				rts						; ret
  4435 					eif
  4436 				.endl
  4437
  4438 2572			.local	BLACKCONSOLE					; PROCEDURE
  4439
  4440 				; optimize OK (console.pas), line = 28
  4441
  4442 2572 AD AC B8			lda CONSOLESTATE
  4443 2575 D0 03			jne l_0998
  4444 2577 4C 96 25			jmp @exit
  4445 257A			l_0998
  4446
  4447 				; optimize OK (console.pas), line = 29
  4448
  4449 257A A9 1E			lda <DLI_BLACK_CONSOLE
  4450 257C 8D A8 A6			sta B_SYSTEM.ENABLEDLI.DLIPTR
  4451 257F A9 25			lda >DLI_BLACK_CONSOLE
  4452 2581 8D A9 A6			sta B_SYSTEM.ENABLEDLI.DLIPTR+1
  4453 2584 20 2C 1A			jsr B_SYSTEM.ENABLEDLI
  4454
  4455 				; optimize OK (console.pas), line = 30
  4456
  4457 2587 A9 40			lda #$40
  4458 2589 8D 02 D4			sta ATARI.DLISTL
  4459 258C A9 FC			lda #$FC
  4460 258E 8D 03 D4			sta ATARI.DLISTL+1
  4461
  4462 				; optimize OK (console.pas), line = 31
  4463
  4464 2591 A9 00			lda #$00
  4465 2593 8D AC B8			sta CONSOLESTATE
  4466 2596			@exit
  4467 					.ifdef @new
  4468 					lda <@VarData
  4469 					sta :ztmp
  4470 					lda >@VarData
  4471 					ldy #@VarDataSize-1
  4472 					jmp @FreeMem
  4473 					els
  4474 2596 60				rts						; ret
  4475 					eif
  4476 				.endl
  4477
  4478 2597			.local	ENABLECONSOLE					; PROCEDURE
  4479
  4480 				; optimize OK (console.pas), line = 37
  4481
  4482 2597 AD AC B8			lda CONSOLESTATE
  4483 259A C9 01			cmp #$01
  4484 259C D0 03			jne l_09BA
  4485 259E 4C D9 25			jmp @exit
  4486 25A1			l_09BA
  4487
  4488 				; optimize OK (console.pas), line = 39
  4489
  4490 25A1 A9 3D			lda <DLI_CONSOLE
  4491 25A3 8D A8 A6			sta B_SYSTEM.ENABLEDLI.DLIPTR
  4492 25A6 A9 25			lda >DLI_CONSOLE
  4493 25A8 8D A9 A6			sta B_SYSTEM.ENABLEDLI.DLIPTR+1
  4494 25AB 20 2C 1A			jsr B_SYSTEM.ENABLEDLI
  4495
  4496 				; optimize OK (console.pas), line = 40
  4497
  4498 25AE A9 00			lda #$00
  4499 25B0 8D 02 D4			sta ATARI.DLISTL
  4500 25B3 A9 FC			lda #$FC
  4501 25B5 8D 03 D4			sta ATARI.DLISTL+1
  4502
  4503 				; optimize OK (console.pas), line = 41
  4504
  4505 25B8 A9 CC			lda #$CC
  4506 25BA 20 74 1A			jsr B_SYSTEM.SETCHARSET
  4507
  4508 				; optimize OK (console.pas), line = 43
  4509
  4510 25BD A9 00			lda #$00
  4511 25BF 8D BD AA			sta B_CRT.CRT_INIT_04BE.VRAM_ADDRESS
  4512 25C2 A9 C8			lda #$C8
  4513 25C4 8D BE AA			sta B_CRT.CRT_INIT_04BE.VRAM_ADDRESS+1
  4514 25C7 A9 28			lda #$28
  4515 25C9 8D BF AA			sta B_CRT.CRT_INIT_04BE.WIDTH
  4516 25CC A9 19			lda #$19
  4517 25CE 8D C0 AA			sta B_CRT.CRT_INIT_04BE.HEIGHT
  4518 25D1 20 61 1B			jsr B_CRT.CRT_INIT_04BE
  4519
  4520 				; optimize OK (console.pas), line = 44
  4521
  4522 25D4 A9 01			lda #$01
  4523 25D6 8D AC B8			sta CONSOLESTATE
  4524 25D9			@exit
  4525 					.ifdef @new
  4526 					lda <@VarData
  4527 					sta :ztmp
  4528 					lda >@VarData
  4529 					ldy #@VarDataSize-1
  4530 					jmp @FreeMem
  4531 					els
  4532 25D9 60				rts						; ret
  4533 					eif
  4534 				.endl
  4535
  4536 25DA			.local	ENABLEMAPCONSOLE				; PROCEDURE
  4537
  4538 				; optimize OK (console.pas), line = 50
  4539
  4540 25DA AD AC B8			lda CONSOLESTATE
  4541 25DD C9 02			cmp #$02
  4542 25DF D0 03			jne l_09E2
  4543 25E1 4C 1C 26			jmp @exit
  4544 25E4			l_09E2
  4545
  4546 				; optimize OK (console.pas), line = 51
  4547
  4548 25E4 A9 88			lda <DLI_MAP
  4549 25E6 8D A8 A6			sta B_SYSTEM.ENABLEDLI.DLIPTR
  4550 25E9 A9 24			lda >DLI_MAP
  4551 25EB 8D A9 A6			sta B_SYSTEM.ENABLEDLI.DLIPTR+1
  4552 25EE 20 2C 1A			jsr B_SYSTEM.ENABLEDLI
  4553
  4554 				; optimize OK (console.pas), line = 52
  4555
  4556 25F1 A9 80			lda #$80
  4557 25F3 8D 02 D4			sta ATARI.DLISTL
  4558 25F6 A9 FC			lda #$FC
  4559 25F8 8D 03 D4			sta ATARI.DLISTL+1
  4560
  4561 				; optimize OK (console.pas), line = 53
  4562
  4563 25FB A9 F0			lda #$F0
  4564 25FD 20 74 1A			jsr B_SYSTEM.SETCHARSET
  4565
  4566 				; optimize OK (console.pas), line = 54
  4567
  4568 2600 A9 00			lda #$00
  4569 2602 8D BD AA			sta B_CRT.CRT_INIT_04BE.VRAM_ADDRESS
  4570 2605 A9 F4			lda #$F4
  4571 2607 8D BE AA			sta B_CRT.CRT_INIT_04BE.VRAM_ADDRESS+1
  4572 260A A9 28			lda #$28
  4573 260C 8D BF AA			sta B_CRT.CRT_INIT_04BE.WIDTH
  4574 260F A9 19			lda #$19
  4575 2611 8D C0 AA			sta B_CRT.CRT_INIT_04BE.HEIGHT
  4576 2614 20 61 1B			jsr B_CRT.CRT_INIT_04BE
  4577
  4578 				; optimize OK (console.pas), line = 55
  4579
  4580 2617 A9 02			lda #$02
  4581 2619 8D AC B8			sta CONSOLESTATE
  4582 261C			@exit
  4583 					.ifdef @new
  4584 					lda <@VarData
  4585 					sta :ztmp
  4586 					lda >@VarData
  4587 					ldy #@VarDataSize-1
  4588 					jmp @FreeMem
  4589 					els
  4590 261C 60				rts						; ret
  4591 					eif
  4592 				.endl
  4593
  4594 261D			.local	SHOWLOCATIONHEADER				; PROCEDURE
  4595
  4596 				; optimize FAIL ('ENABLECONSOLE', locations.pas), line = 43
  4597
  4598 261D 20 97 25			jsr ENABLECONSOLE
  4599
  4600 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', locations.pas), line = 44
  4601
  4602 2620 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
  4603
  4604 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', locations.pas), line = 45
  4605
  4606 2623 E8				inx
  4607 2624 AD 44 A3 95 94		mva LOC_NAME :STACKORIGIN,x
  4608 2629 AD 45 A3 95 A4		mva LOC_NAME+1 :STACKORIGIN+STACKWIDTH,x
  4609 262E E8				inx
  4610 262F A9 01 95 94			mva #$01 :STACKORIGIN,x
  4611 2633 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  4612
  4613 				; optimize OK (locations.pas), line = 46
  4614
  4615 2636 A9 00			lda #$00
  4616 2638 8D DB AF			sta B_CRT.CRT_INVERT.X
  4617 263B A9 01			lda #$01
  4618 263D 8D DC AF			sta B_CRT.CRT_INVERT.Y
  4619 2640 AD B0 A6			lda B_CRT.CRT_SCREENWIDTH
  4620 2643 8D DD AF			sta B_CRT.CRT_INVERT.WIDTH
  4621 2646 20 B6 1F			jsr B_CRT.CRT_INVERT
  4622 2649 A9 01 8D B0 B8		mva #$01 adr.CURRENTSUBLOCATIONNAME
  4623 264E A9 00 8D B1 B8		mva #$00 adr.CURRENTSUBLOCATIONNAME+1
  4624
  4625 				; optimize OK (locations.pas), line = 49
  4626
  4627 2653 A9 00			lda #$00
  4628 2655 8D D9 B8			sta IDX
  4629
  4630 2658			l_0A0D
  4631 				; --- ForToDoCondition
  4632 2658 AC D9 B8			ldy IDX
  4633 265B C0 04			cpy #$04
  4634 265D B0 31			jcs l_0A1B
  4635
  4636 				; optimize OK (locations.pas), line = 51
  4637
  4638 265F B9 2A C1			lda adr.LOC_MAP_PLACES,y
  4639 2662 CD 20 E4			cmp CURRENTMAP
  4640 2665 D0 24			jne l_0A32
  4641
  4642 				; optimize OK (locations.pas), line = 52
  4643
  4644 2667 AD D9 B8			lda IDX
  4645 266A 0A				asl @
  4646 266B A8				tay
  4647 266C B9 D0 B0			lda adr.LOC_SUBLOCATION_NAMES,y
  4648 266F 85 88			sta @move.src
  4649 2671 B9 D1 B0			lda adr.LOC_SUBLOCATION_NAMES+1,y
  4650 2674 85 89			sta @move.src+1
  4651 					@moveSTRING CURRENTSUBLOCATIONNAME #41
  4651 				 MWA CURRENTSUBLOCATIONNAME @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  4651 2676 AD 54 A4 85 8C AD +  MWA CURRENTSUBLOCATIONNAME @MOVE.DST
  4651 2680 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  4651 2688 20 D2 10		 JSR @MOVESTRING
  4652 268B			l_0A32
  4653
  4654 				; --- ForToDoEpilog
  4655 268B EE D9 B8			inc IDX
  4656 268E D0 C8			jne l_0A0D
  4657 2690			l_0A1B
  4658
  4659 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', locations.pas), line = 54
  4660
  4661 2690 E8				inx
  4662 2691 AD 54 A4 95 94		mva CURRENTSUBLOCATIONNAME :STACKORIGIN,x
  4663 2696 AD 55 A4 95 A4		mva CURRENTSUBLOCATIONNAME+1 :STACKORIGIN+STACKWIDTH,x
  4664 269B E8				inx
  4665 269C A9 02 95 94			mva #$02 :STACKORIGIN,x
  4666 26A0 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  4667
  4668 				; optimize OK (locations.pas), line = 55
  4669
  4670 26A3 A9 00			lda #$00
  4671 26A5 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  4672 26A8 A9 04			lda #$04
  4673 26AA 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  4674 26AD 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  4675
  4676 				; ------------------------------------------------------------
  4677
  4678 = B8D9			IDX	= DATAORIGIN+$1464
  4679 = B8DA			adr.SUBLOCATION	= [DATAORIGIN+$1465] .array [41]
  4680 26B0			.var SUBLOCATION	= adr.SUBLOCATION .word
  4681
  4682 = B8D9			@VarData	= IDX
  4683 = 002A			@VarDataSize	= 42
  4684
  4685 26B0			@exit
  4686 					.ifdef @new
  4687 					lda <@VarData
  4688 					sta :ztmp
  4689 					lda >@VarData
  4690 					ldy #@VarDataSize-1
  4691 					jmp @FreeMem
  4692 					els
  4693 26B0 60				rts						; ret
  4694 					eif
  4695 = 26B1 DA B8		SUBLOCATION
  4695 				.endl
  4696
  4697 26B3			.local	LOADLOCATION					; PROCEDURE
  4698 26B3 8D 03 B9			sta L
  4699
  4700 				; optimize OK (locations.pas), line = 62
  4701
  4702 26B6 AD 01 E0			lda LASTLOCATIONSTRINGS
  4703 26B9 CD 03 B9			cmp L
  4704 26BC D0 03			jne l_0A5E
  4705 26BE 4C 85 28			jmp @exit
  4706 26C1			l_0A5E
  4707
  4708 				; optimize OK (locations.pas), line = 63
  4709
  4710 26C1 AD 03 B9			lda L
  4711 26C4 8D 01 E0			sta LASTLOCATIONSTRINGS
  4712
  4713 				; optimize OK (locations.pas), line = 64
  4714
  4715 26C7 AD 03 B9			lda L
  4716 26CA 8D 06 B9			sta @CASETMP_0009
  4717 26CD C9 01			cmp #$01
  4718 26CF D0 0F			jne l_0A72
  4719 				@
  4720
  4721 				; optimize OK (locations.pas), line = 65
  4722
  4723 26D1 AD 96 A2			lda LOCABANKFNAME
  4724 26D4 8D 04 B9			sta LOCFNAME
  4725 26D7 AD 97 A2			lda LOCABANKFNAME+1
  4726 26DA 8D 05 B9			sta LOCFNAME+1
  4727 26DD 4C 6C 28			jmp a_0009
  4728 26E0			l_0A72
  4729 26E0 C9 02			cmp #$02
  4730 26E2 D0 0F			jne l_0A80
  4731
  4732 				; optimize OK (locations.pas), line = 66
  4733
  4734 26E4 AD 98 A2			lda LOCAFORGFNAME
  4735 26E7 8D 04 B9			sta LOCFNAME
  4736 26EA AD 99 A2			lda LOCAFORGFNAME+1
  4737 26ED 8D 05 B9			sta LOCFNAME+1
  4738 26F0 4C 6C 28			jmp a_0009
  4739 26F3			l_0A80
  4740 26F3 C9 03			cmp #$03
  4741 26F5 D0 0F			jne l_0A8E
  4742
  4743 				; optimize OK (locations.pas), line = 67
  4744
  4745 26F7 AD 9A A2			lda LOCAMONYFNAME
  4746 26FA 8D 04 B9			sta LOCFNAME
  4747 26FD AD 9B A2			lda LOCAMONYFNAME+1
  4748 2700 8D 05 B9			sta LOCFNAME+1
  4749 2703 4C 6C 28			jmp a_0009
  4750 2706			l_0A8E
  4751 2706 C9 04			cmp #$04
  4752 2708 D0 0F			jne l_0A9C
  4753
  4754 				; optimize OK (locations.pas), line = 68
  4755
  4756 270A AD 9C A2			lda LOCALOANFNAME
  4757 270D 8D 04 B9			sta LOCFNAME
  4758 2710 AD 9D A2			lda LOCALOANFNAME+1
  4759 2713 8D 05 B9			sta LOCFNAME+1
  4760 2716 4C 6C 28			jmp a_0009
  4761 2719			l_0A9C
  4762 2719 C9 05			cmp #$05
  4763 271B D0 0F			jne l_0AAA
  4764
  4765 				; optimize OK (locations.pas), line = 69
  4766
  4767 271D AD 9E A2			lda LOCAPOLIFNAME
  4768 2720 8D 04 B9			sta LOCFNAME
  4769 2723 AD 9F A2			lda LOCAPOLIFNAME+1
  4770 2726 8D 05 B9			sta LOCFNAME+1
  4771 2729 4C 6C 28			jmp a_0009
  4772 272C			l_0AAA
  4773 272C C9 06			cmp #$06
  4774 272E D0 0F			jne l_0AB8
  4775
  4776 				; optimize OK (locations.pas), line = 70
  4777
  4778 2730 AD A0 A2			lda LOCACARSFNAME
  4779 2733 8D 04 B9			sta LOCFNAME
  4780 2736 AD A1 A2			lda LOCACARSFNAME+1
  4781 2739 8D 05 B9			sta LOCFNAME+1
  4782 273C 4C 6C 28			jmp a_0009
  4783 273F			l_0AB8
  4784 273F C9 07			cmp #$07
  4785 2741 D0 0F			jne l_0AC6
  4786
  4787 				; optimize OK (locations.pas), line = 71
  4788
  4789 2743 AD A2 A2			lda LOCAPUBBFNAME
  4790 2746 8D 04 B9			sta LOCFNAME
  4791 2749 AD A3 A2			lda LOCAPUBBFNAME+1
  4792 274C 8D 05 B9			sta LOCFNAME+1
  4793 274F 4C 6C 28			jmp a_0009
  4794 2752			l_0AC6
  4795 2752 C9 14			cmp #$14
  4796 2754 D0 0F			jne l_0AD4
  4797
  4798 				; optimize OK (locations.pas), line = 72
  4799
  4800 2756 AD A4 A2			lda LOCAPUBCFNAME
  4801 2759 8D 04 B9			sta LOCFNAME
  4802 275C AD A5 A2			lda LOCAPUBCFNAME+1
  4803 275F 8D 05 B9			sta LOCFNAME+1
  4804 2762 4C 6C 28			jmp a_0009
  4805 2765			l_0AD4
  4806 2765 C9 09			cmp #$09
  4807 2767 D0 0F			jne l_0AE2
  4808
  4809 				; optimize OK (locations.pas), line = 73
  4810
  4811 2769 AD A6 A2			lda LOCASTORFNAME
  4812 276C 8D 04 B9			sta LOCFNAME
  4813 276F AD A7 A2			lda LOCASTORFNAME+1
  4814 2772 8D 05 B9			sta LOCFNAME+1
  4815 2775 4C 6C 28			jmp a_0009
  4816 2778			l_0AE2
  4817 2778 C9 0A			cmp #$0A
  4818 277A D0 0F			jne l_0AF0
  4819
  4820 				; optimize OK (locations.pas), line = 74
  4821
  4822 277C AD A8 A2			lda LOCAHIDEFNAME
  4823 277F 8D 04 B9			sta LOCFNAME
  4824 2782 AD A9 A2			lda LOCAHIDEFNAME+1
  4825 2785 8D 05 B9			sta LOCFNAME+1
  4826 2788 4C 6C 28			jmp a_0009
  4827 278B			l_0AF0
  4828 278B C9 0B			cmp #$0B
  4829 278D D0 0F			jne l_0AFE
  4830
  4831 				; optimize OK (locations.pas), line = 75
  4832
  4833 278F AD AA A2			lda LOCAGAMBFNAME
  4834 2792 8D 04 B9			sta LOCFNAME
  4835 2795 AD AB A2			lda LOCAGAMBFNAME+1
  4836 2798 8D 05 B9			sta LOCFNAME+1
  4837 279B 4C 6C 28			jmp a_0009
  4838 279E			l_0AFE
  4839 279E C9 0C			cmp #$0C
  4840 27A0 D0 0F			jne l_0B0C
  4841
  4842 				; optimize OK (locations.pas), line = 76
  4843
  4844 27A2 AD AC A2			lda LOCASUBWFNAME
  4845 27A5 8D 04 B9			sta LOCFNAME
  4846 27A8 AD AD A2			lda LOCASUBWFNAME+1
  4847 27AB 8D 05 B9			sta LOCFNAME+1
  4848 27AE 4C 6C 28			jmp a_0009
  4849 27B1			l_0B0C
  4850 27B1 C9 0D			cmp #$0D
  4851 27B3 D0 0F			jne l_0B1A
  4852
  4853 				; optimize OK (locations.pas), line = 77
  4854
  4855 27B5 AD AE A2			lda LOCAARMSFNAME
  4856 27B8 8D 04 B9			sta LOCFNAME
  4857 27BB AD AF A2			lda LOCAARMSFNAME+1
  4858 27BE 8D 05 B9			sta LOCFNAME+1
  4859 27C1 4C 6C 28			jmp a_0009
  4860 27C4			l_0B1A
  4861 27C4 C9 13			cmp #$13
  4862 27C6 D0 0F			jne l_0B28
  4863
  4864 				; optimize OK (locations.pas), line = 78
  4865
  4866 27C8 AD B0 A2			lda LOCAMAINFNAME
  4867 27CB 8D 04 B9			sta LOCFNAME
  4868 27CE AD B1 A2			lda LOCAMAINFNAME+1
  4869 27D1 8D 05 B9			sta LOCFNAME+1
  4870 27D4 4C 6C 28			jmp a_0009
  4871 27D7			l_0B28
  4872 27D7 C9 16			cmp #$16
  4873 27D9 D0 0F			jne l_0B36
  4874
  4875 				; optimize OK (locations.pas), line = 79
  4876
  4877 27DB AD B2 A2			lda LOCAJOBBFNAME
  4878 27DE 8D 04 B9			sta LOCFNAME
  4879 27E1 AD B3 A2			lda LOCAJOBBFNAME+1
  4880 27E4 8D 05 B9			sta LOCFNAME+1
  4881 27E7 4C 6C 28			jmp a_0009
  4882 27EA			l_0B36
  4883 27EA C9 18			cmp #$18
  4884 27EC D0 0F			jne l_0B44
  4885
  4886 				; optimize OK (locations.pas), line = 80
  4887
  4888 27EE AD 9A A2			lda LOCAMONYFNAME
  4889 27F1 8D 04 B9			sta LOCFNAME
  4890 27F4 AD 9B A2			lda LOCAMONYFNAME+1
  4891 27F7 8D 05 B9			sta LOCFNAME+1
  4892 27FA 4C 6C 28			jmp a_0009
  4893 27FD			l_0B44
  4894 27FD C9 17			cmp #$17
  4895 27FF D0 0F			jne l_0B52
  4896
  4897 				; optimize OK (locations.pas), line = 81
  4898
  4899 2801 AD FC A2			lda LOCACENTFNAME
  4900 2804 8D 04 B9			sta LOCFNAME
  4901 2807 AD FD A2			lda LOCACENTFNAME+1
  4902 280A 8D 05 B9			sta LOCFNAME+1
  4903 280D 4C 6C 28			jmp a_0009
  4904 2810			l_0B52
  4905 2810 C9 19			cmp #$19
  4906 2812 D0 0F			jne l_0B60
  4907
  4908 				; optimize OK (locations.pas), line = 82
  4909
  4910 2814 AD B6 A2			lda LOCACOURFNAME
  4911 2817 8D 04 B9			sta LOCFNAME
  4912 281A AD B7 A2			lda LOCACOURFNAME+1
  4913 281D 8D 05 B9			sta LOCFNAME+1
  4914 2820 4C 6C 28			jmp a_0009
  4915 2823			l_0B60
  4916 2823 C9 1A			cmp #$1A
  4917 2825 D0 0F			jne l_0B6E
  4918
  4919 				; optimize OK (locations.pas), line = 83
  4920
  4921 2827 AD B8 A2			lda LOCACAUGFNAME
  4922 282A 8D 04 B9			sta LOCFNAME
  4923 282D AD B9 A2			lda LOCACAUGFNAME+1
  4924 2830 8D 05 B9			sta LOCFNAME+1
  4925 2833 4C 6C 28			jmp a_0009
  4926 2836			l_0B6E
  4927 2836 C9 1B			cmp #$1B
  4928 2838 D0 0F			jne l_0B7C
  4929
  4930 				; optimize OK (locations.pas), line = 84
  4931
  4932 283A AD BA A2			lda LOCAROADFNAME
  4933 283D 8D 04 B9			sta LOCFNAME
  4934 2840 AD BB A2			lda LOCAROADFNAME+1
  4935 2843 8D 05 B9			sta LOCFNAME+1
  4936 2846 4C 6C 28			jmp a_0009
  4937 2849			l_0B7C
  4938 2849 C9 15			cmp #$15
  4939 284B D0 0F			jne l_0B8A
  4940
  4941 				; optimize OK (locations.pas), line = 85
  4942
  4943 284D AD BC A2			lda LOCAUPDTFNAME
  4944 2850 8D 04 B9			sta LOCFNAME
  4945 2853 AD BD A2			lda LOCAUPDTFNAME+1
  4946 2856 8D 05 B9			sta LOCFNAME+1
  4947 2859 4C 6C 28			jmp a_0009
  4948 285C			l_0B8A
  4949 285C C9 1C			cmp #$1C
  4950 285E D0 0C			jne l_0B98
  4951
  4952 				; optimize OK (locations.pas), line = 86
  4953
  4954 2860 AD BE A2			lda LOCASETUFNAME
  4955 2863 8D 04 B9			sta LOCFNAME
  4956 2866 AD BF A2			lda LOCASETUFNAME+1
  4957 2869 8D 05 B9			sta LOCFNAME+1
  4958 286C			l_0B98
  4959 286C			a_0009
  4960
  4961 				; optimize OK (locations.pas), line = 88
  4962
  4963 286C AD 04 B9			lda LOCFNAME
  4964 286F 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
  4965 2872 AD 05 B9			lda LOCFNAME+1
  4966 2875 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
  4967 2878 A9 80			lda #$80
  4968 287A 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
  4969 287D A9 BE			lda #$BE
  4970 287F 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
  4971 2882 20 65 17			jsr XBAPLIB.XBUNAPL
  4972
  4973 				; ------------------------------------------------------------
  4974
  4975 = B903			L	= DATAORIGIN+$148E
  4976 = B904			LOCFNAME	= DATAORIGIN+$148F
  4977 = B906			@CASETMP_0009	= DATAORIGIN+$1491
  4978
  4979 = B903			@VarData	= L
  4980 = 0004			@VarDataSize	= 4
  4981
  4982 2885			@exit
  4983 					.ifdef @new
  4984 					lda <@VarData
  4985 					sta :ztmp
  4986 					lda >@VarData
  4987 					ldy #@VarDataSize-1
  4988 					jmp @FreeMem
  4989 					els
  4990 2885 60				rts						; ret
  4991 					eif
  4992 				.endl
  4993
  4994 2886			.local	SHOWLOCATION					; FUNCTION
  4995 2886 8D 07 B9			sta L
  4996
  4997 				; optimize OK (locations.pas), line = 97
  4998
  4999 2889 20 B3 26			jsr LOADLOCATION
  5000
  5001 				; optimize OK (locations.pas), line = 98
  5002
  5003 288C A9 63			lda #$63
  5004 288E 8D AF B8			sta CURRENTSUBLOCATION
  5005
  5006 				; optimize OK (locations.pas), line = 99
  5007
  5008 2891 A9 00			lda #$00
  5009 2893 8D 09 B9			sta I
  5010
  5011 2896			l_0BD0
  5012 				; --- ForToDoCondition
  5013 2896 AC 09 B9			ldy I
  5014 2899 C0 04			cpy #$04
  5015 289B B0 13			jcs l_0BDE
  5016
  5017 				; optimize OK (locations.pas), line = 100
  5018
  5019 289D B9 2A C1			lda adr.LOC_MAP_PLACES,y
  5020 28A0 CD 20 E4			cmp CURRENTMAP
  5021 28A3 D0 06			jne l_0BF5
  5022 28A5 AD 09 B9			lda I
  5023 28A8 8D AF B8			sta CURRENTSUBLOCATION
  5024 28AB			l_0BF5
  5025
  5026 				; --- ForToDoEpilog
  5027 28AB EE 09 B9			inc I
  5028 28AE D0 E6			jne l_0BD0
  5029 28B0			l_0BDE
  5030
  5031 				; optimize OK (locations.pas), line = 101
  5032
  5033 28B0 AD AF B8			lda CURRENTSUBLOCATION
  5034 28B3 C9 63			cmp #$63
  5035 28B5 D0 03			jne l_0C15
  5036
  5037 				; --- RepeatUntilProlog
  5038 28B7			l_0C17
  5039 28B7 4C B7 28			jmp l_0C17
  5040 28BA			l_0C15
  5041
  5042 				; optimize OK (locations.pas), line = 102
  5043
  5044 28BA AD 29 C1			lda LOC_NOPTIONS
  5045 28BD D0 08			jne l_0C30
  5046
  5047 				; optimize OK (locations.pas), line = 104
  5048
  5049 28BF A9 63			lda #$63
  5050 28C1 8D 08 B9			sta RESULT
  5051 28C4 4C 98 29			jmp @exit
  5052 28C7			l_0C30
  5053
  5054 				; optimize FAIL ('SHOWLOCATIONHEADER', locations.pas), line = 108
  5055
  5056 28C7 20 1D 26			jsr SHOWLOCATIONHEADER
  5057
  5058 				; optimize OK (locations.pas), line = 111
  5059
  5060 28CA A9 00			lda #$00
  5061 28CC 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  5062 28CF A9 04			lda #$04
  5063 28D1 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  5064 28D4 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  5065
  5066 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', locations.pas), line = 112
  5067
  5068 28D7 E8				inx
  5069 28D8 AD 62 A3 95 94		mva LOC_DESCRIPTION_1 :STACKORIGIN,x
  5070 28DD AD 63 A3 95 A4		mva LOC_DESCRIPTION_1+1 :STACKORIGIN+STACKWIDTH,x
  5071 28E2 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  5072
  5073 				; optimize OK (locations.pas), line = 113
  5074
  5075 28E5 A9 00			lda #$00
  5076 28E7 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  5077 28EA A9 05			lda #$05
  5078 28EC 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  5079 28EF 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  5080
  5081 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', locations.pas), line = 114
  5082
  5083 28F2 E8				inx
  5084 28F3 AD 64 A3 95 94		mva LOC_DESCRIPTION_2 :STACKORIGIN,x
  5085 28F8 AD 65 A3 95 A4		mva LOC_DESCRIPTION_2+1 :STACKORIGIN+STACKWIDTH,x
  5086 28FD 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  5087
  5088 				; optimize OK (locations.pas), line = 116
  5089
  5090 2900 A9 00			lda #$00
  5091 2902 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  5092 2905 A9 07			lda #$07
  5093 2907 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  5094 290A 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  5095
  5096 				; optimize OK (locations.pas), line = 117
  5097
  5098 290D A9 00			lda #$00
  5099 290F 8D 09 B9			sta I
  5100
  5101 2912			l_0C50
  5102 				; --- ForToDoCondition
  5103 2912 AD 09 B9			lda I
  5104 2915 C9 0A			cmp #$0A
  5105 2917 B0 47			jcs l_0C5E
  5106
  5107 				; optimize OK (locations.pas), line = 119
  5108
  5109 2919 0A				asl @
  5110 291A A8				tay
  5111 291B B9 BC B0			lda adr.LOC_OPTIONS,y
  5112 291E 85 88			sta @move.src
  5113 2920 B9 BD B0			lda adr.LOC_OPTIONS+1,y
  5114 2923 85 89			sta @move.src+1
  5115 					@moveSTRING TMPS #41
  5115 				 MWA TMPS @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  5115 2925 AD 99 29 85 8C AD +  MWA TMPS @MOVE.DST
  5115 292F A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  5115 2937 20 D2 10		 JSR @MOVESTRING
  5116
  5117 				; optimize OK (locations.pas), line = 120
  5118
  5119 293A AD 0B B9			lda adr.TMPS
  5120 293D D0 03			jne l_0C72
  5121 293F 4C 60 29			jmp b_0C50					; break
  5122 2942			l_0C72
  5123
  5124 				; optimize OK (locations.pas), line = 122
  5125
  5126 2942 AD 0C B9			lda adr.TMPS+$01
  5127 2945 D0 03			jne l_0C88
  5128
  5129 				; optimize FAIL ('CRT_WRITELN', locations.pas), line = 123
  5130 2947 4C 4D 29			jmp l_0C95
  5131 294A			l_0C88
  5132
  5133 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', locations.pas), line = 126
  5134
  5135 294A 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  5136
  5137 				; optimize FAIL ('CRT_WRITELN', locations.pas), line = 127
  5138 294D			l_0C95
  5139
  5140 294D E8				inx
  5141 294E AD 99 29 95 94		mva TMPS :STACKORIGIN,x
  5142 2953 AD 9A 29 95 A4		mva TMPS+1 :STACKORIGIN+STACKWIDTH,x
  5143 2958 20 80 21			jsr CRT_WRITELN
  5144
  5145 				; --- ForToDoEpilog
  5146 295B EE 09 B9			inc I
  5147 295E D0 B2			jne l_0C50
  5148 2960			l_0C5E
  5149 2960			b_0C50
  5150
  5151 				; --- RepeatUntilProlog
  5152 2960			l_0C9F
  5153
  5154 				; optimize FAIL ('B_CRT.CRT_READKEY', locations.pas), line = 133
  5155
  5156 2960 20 42 1D			jsr B_CRT.CRT_READKEY
  5157 2963 AD CF AB			lda B_CRT.CRT_READKEY.RESULT
  5158 2966 8D 0A B9			sta CHOICE
  5159
  5160 				; optimize OK (locations.pas), line = 134
  5161
  5162 2969 A8				tay
  5163 296A B9 5D 0E			lda B_CRT.adr.CRT_KEYCODE,y
  5164 296D 8D 09 B9			sta I
  5165
  5166 				; optimize OK (locations.pas), line = 135
  5167
  5168 2970 C9 31			cmp #$31
  5169 2972 90 EC			jcc l_0C9F
  5170 2974 A9 31			lda #$31
  5171 2976 18 6D 29 C1			add LOC_NOPTIONS
  5172 297A 85 9F			sta :STACKORIGIN+11
  5173 297C A9 00			lda #$00
  5174 297E 69 00			adc #$00
  5175 2980 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  5176 2982 A9 00			lda #$00
  5177 2984 C5 AF			cmp :STACKORIGIN+STACKWIDTH+11
  5178 2986 D0 05			bne @+
  5179 2988 AD 09 B9			lda I
  5180 298B C5 9F			cmp :STACKORIGIN+11
  5181 				@
  5182 298D B0 D1			jcs l_0C9F
  5183 				@
  5184
  5185 				; optimize OK (locations.pas), line = 136
  5186
  5187 298F AD 09 B9			lda I
  5188 2992 38 E9 30			sub #$30
  5189 2995 8D 08 B9			sta RESULT
  5190 2998			@exit
  5191
  5192 				; ------------------------------------------------------------
  5193
  5194 = B907			L	= DATAORIGIN+$1492
  5195 = B908			RESULT	= DATAORIGIN+$1493
  5196 = B909			I	= DATAORIGIN+$1494
  5197 = B90A			CHOICE	= DATAORIGIN+$1495
  5198 = B90B			adr.TMPS	= [DATAORIGIN+$1496] .array [41]
  5199 2998			.var TMPS	= adr.TMPS .word
  5200
  5201 = B907			@VarData	= L
  5202 = 002C			@VarDataSize	= 44
  5203
  5204 2998 60				rts						; ret
  5205 = 2999 0B B9		TMPS
  5205 				.endl
  5206
  5207 299B			.local	NEXTPLAYER					; PROCEDURE
  5208
  5209 				; optimize OK (player.pas), line = 9
  5210
  5211 299B EE 1A E4			inc CURRENTPLAYER
  5212
  5213 				; optimize OK (player.pas), line = 10
  5214
  5215 299E AD 00 E0			lda NPLAYERS
  5216 29A1 38 E9 01			sub #$01
  5217 29A4 85 9E			sta :STACKORIGIN+10
  5218 29A6 A9 00			lda #$00
  5219 29A8 E9 00			sbc #$00
  5220 29AA 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5221 29AC A5 9E			lda :STACKORIGIN+10
  5222 29AE CD 1A E4			cmp CURRENTPLAYER
  5223 29B1 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  5224 29B3 E9 00			sbc #$00
  5225 29B5 50 02			svc
  5226 29B7 49 80			eor #$80
  5227 29B9 10 1C			jpl l_0CFF
  5228
  5229 				; optimize OK (player.pas), line = 12
  5230
  5231 29BB AD 1A E4			lda CURRENTPLAYER
  5232 29BE 38 ED 00 E0			sub NPLAYERS
  5233 29C2 8D 1A E4			sta CURRENTPLAYER
  5234
  5235 				; optimize OK (player.pas), line = 13
  5236
  5237 29C5 EE 52 E1			inc CURRENTMONTH
  5238
  5239 				; optimize OK (player.pas), line = 14
  5240
  5241 29C8 AD 52 E1			lda CURRENTMONTH
  5242 29CB C9 0D			cmp #$0D
  5243 29CD 90 08			jcc l_0D28
  5244
  5245 				; optimize OK (player.pas), line = 15
  5246
  5247 29CF EE 53 E1			inc CURRENTYEAR
  5248
  5249 				; optimize OK (player.pas), line = 16
  5250
  5251 29D2 A9 01			lda #$01
  5252 29D4 8D 52 E1			sta CURRENTMONTH
  5253 29D7			l_0D28
  5254 29D7			l_0CFF
  5255 29D7			@exit
  5256 					.ifdef @new
  5257 					lda <@VarData
  5258 					sta :ztmp
  5259 					lda >@VarData
  5260 					ldy #@VarDataSize-1
  5261 					jmp @FreeMem
  5262 					els
  5263 29D7 60				rts						; ret
  5264 					eif
  5265 				.endl
  5266
  5267 29D8			.local	INITPLAYERS					; PROCEDURE
  5268
  5269 				; optimize OK (player.pas), line = 27
  5270
  5271 29D8 A9 00			lda #$00
  5272 29DA A8				tay
  5273
  5274 29DB			l_0D48
  5275 				; --- ForToDoCondition
  5276 29DB C0 04			cpy #$04
  5277 29DD B0 12			jcs l_0D56
  5278
  5279 				; optimize OK (player.pas), line = 29
  5280
  5281 29DF A9 03			lda #$03
  5282 29E1 99 34 E0			sta adr.PLMAPPOSX,y
  5283
  5284 				; optimize OK (player.pas), line = 30
  5285
  5286 29E4 A9 02			lda #$02
  5287 29E6 99 38 E0			sta adr.PLMAPPOSY,y
  5288
  5289 				; optimize OK (player.pas), line = 31
  5290
  5291 29E9 A9 00			lda #$00
  5292 29EB 99 3C E0			sta adr.PLCURRENTMAP,y
  5293
  5294 				; --- ForToDoEpilog
  5295 29EE C8				iny
  5296 29EF D0 EA			jne l_0D48
  5297 29F1			l_0D56
  5298 29F1 8C 34 B9			sty K
  5299
  5300 				; ------------------------------------------------------------
  5301
  5302 = B934			K	= DATAORIGIN+$14BF
  5303
  5304 = B934			@VarData	= K
  5305 = 0001			@VarDataSize	= 1
  5306
  5307 29F4			@exit
  5308 					.ifdef @new
  5309 					lda <@VarData
  5310 					sta :ztmp
  5311 					lda >@VarData
  5312 					ldy #@VarDataSize-1
  5313 					jmp @FreeMem
  5314 					els
  5315 29F4 60				rts						; ret
  5316 					eif
  5317 				.endl
  5318
  5319 29F5			.local	PLAYERSTURN					; PROCEDURE
  5320
  5321 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', player.pas), line = 48
  5322
  5323 29F5 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
  5324
  5325 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', player.pas), line = 49
  5326
  5327 29F8 E8				inx
  5328 29F9 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
  5329 29FE AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
  5330 2A03 E8				inx
  5331 2A04 A9 04 95 94			mva #$04 :STACKORIGIN,x
  5332 2A08 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  5333
  5334 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', player.pas), line = 50
  5335
  5336 2A0B E8				inx
  5337 2A0C AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
  5338 2A11 E8				inx
  5339 2A12 A9 03 95 94			mva #$03 :STACKORIGIN,x
  5340 2A16 20 87 0F			jsr shlEAX_CL.BYTE
  5341 2A19 CA				dex
  5342 2A1A B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  5343 2A1C 16 94			asl :STACKORIGIN,x
  5344 2A1E 2A				rol @
  5345 2A1F 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  5346 2A21 B4 94			ldy :STACKORIGIN,x
  5347 2A23 B9 E0 B0			lda adr.GANGSTERNAMES,y
  5348 2A26 95 94			sta :STACKORIGIN,x
  5349 2A28 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
  5350 2A2B 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  5351 2A2D E8				inx
  5352 2A2E A9 05 95 94			mva #$05 :STACKORIGIN,x
  5353 2A32 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  5354
  5355 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', player.pas), line = 51
  5356
  5357 2A35 E8				inx
  5358 2A36 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
  5359 2A3B AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
  5360 2A40 E8				inx
  5361 2A41 A9 06 95 94			mva #$06 :STACKORIGIN,x
  5362 2A45 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  5363
  5364 				; optimize OK (player.pas), line = 53
  5365
  5366 2A48 A9 00			lda #$00
  5367 2A4A 8D B9 A5			sta CRT.SOUND.CHAN
  5368 2A4D A9 64			lda #$64
  5369 2A4F 8D BA A5			sta CRT.SOUND.FREQ
  5370 2A52 A9 0A			lda #$0A
  5371 2A54 8D BB A5			sta CRT.SOUND.DIST
  5372 2A57 A9 0F			lda #$0F
  5373 2A59 8D BC A5			sta CRT.SOUND.VOL
  5374 2A5C 20 BA 18			jsr CRT.SOUND
  5375
  5376 				; optimize OK (player.pas), line = 54
  5377
  5378 2A5F A9 1E			lda #$1E
  5379 2A61 20 60 25			jsr WAITFRAMES
  5380
  5381 				; optimize OK (player.pas), line = 55
  5382
  5383 2A64 A9 00			lda #$00
  5384 2A66 8D B9 A5			sta CRT.SOUND.CHAN
  5385 2A69 A9 60			lda #$60
  5386 2A6B 8D BA A5			sta CRT.SOUND.FREQ
  5387 2A6E A9 0A			lda #$0A
  5388 2A70 8D BB A5			sta CRT.SOUND.DIST
  5389 2A73 A9 0F			lda #$0F
  5390 2A75 8D BC A5			sta CRT.SOUND.VOL
  5391 2A78 20 BA 18			jsr CRT.SOUND
  5392
  5393 				; optimize OK (player.pas), line = 56
  5394
  5395 2A7B A9 14			lda #$14
  5396 2A7D 20 60 25			jsr WAITFRAMES
  5397
  5398 				; optimize OK (player.pas), line = 57
  5399
  5400 2A80 A9 00			lda #$00
  5401 2A82 8D B9 A5			sta CRT.SOUND.CHAN
  5402 2A85 A9 79			lda #$79
  5403 2A87 8D BA A5			sta CRT.SOUND.FREQ
  5404 2A8A A9 0A			lda #$0A
  5405 2A8C 8D BB A5			sta CRT.SOUND.DIST
  5406 2A8F A9 0F			lda #$0F
  5407 2A91 8D BC A5			sta CRT.SOUND.VOL
  5408 2A94 20 BA 18			jsr CRT.SOUND
  5409
  5410 				; optimize OK (player.pas), line = 58
  5411
  5412 2A97 A9 0A			lda #$0A
  5413 2A99 20 60 25			jsr WAITFRAMES
  5414
  5415 				; optimize FAIL ('CRT.NOSOUND', player.pas), line = 71
  5416
  5417 2A9C 20 92 18			jsr CRT.NOSOUND
  5418
  5419 				; optimize FAIL ('WAITFORKEY', player.pas), line = 72
  5420
  5421 2A9F 20 2E 21			jsr WAITFORKEY
  5422
  5423 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', player.pas), line = 73
  5424
  5425 2AA2 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  5426
  5427 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', player.pas), line = 74
  5428
  5429 2AA5 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  5430 2AA8			@exit
  5431 					.ifdef @new
  5432 					lda <@VarData
  5433 					sta :ztmp
  5434 					lda >@VarData
  5435 					ldy #@VarDataSize-1
  5436 					jmp @FreeMem
  5437 					els
  5438 2AA8 60				rts						; ret
  5439 					eif
  5440 				.endl
  5441
  5442 2AA9			.local	PLACECURRENTPLAYER				; PROCEDURE
  5443
  5444 				; optimize OK (player.pas), line = 81
  5445
  5446 2AA9 AC 1A E4			ldy CURRENTPLAYER
  5447 2AAC B9 34 E0			lda adr.PLMAPPOSX,y
  5448 2AAF 8D BA EA			sta MAPPOS_X
  5449
  5450 				; optimize OK (player.pas), line = 82
  5451
  5452 2AB2 B9 38 E0			lda adr.PLMAPPOSY,y
  5453 2AB5 8D BB EA			sta MAPPOS_Y
  5454
  5455 				; optimize OK (player.pas), line = 83
  5456
  5457 2AB8 A9 00			lda #$00
  5458 2ABA 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5459 2ABC AD BA EA			lda MAPPOS_X
  5460 2ABF 0A				asl @
  5461 2AC0 26 AE			rol :STACKORIGIN+STACKWIDTH+10
  5462 2AC2 0A				asl @
  5463 2AC3 0A				asl @
  5464 2AC4 18 69 31			add #$31
  5465 2AC7 8D B8 EA			sta PLAYERPOS_X
  5466
  5467 				; optimize OK (player.pas), line = 84
  5468
  5469 2ACA A9 00			lda #$00
  5470 2ACC 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5471 2ACE AD BB EA			lda MAPPOS_Y
  5472 2AD1 0A				asl @
  5473 2AD2 26 AE			rol :STACKORIGIN+STACKWIDTH+10
  5474 2AD4 0A				asl @
  5475 2AD5 0A				asl @
  5476 2AD6 18 69 24			add #$24
  5477 2AD9 8D B9 EA			sta PLAYERPOS_Y
  5478
  5479 				; optimize OK (player.pas), line = 85
  5480
  5481 2ADC B9 3C E0			lda adr.PLCURRENTMAP,y
  5482 2ADF 8D 20 E4			sta CURRENTMAP
  5483 2AE2			@exit
  5484 					.ifdef @new
  5485 					lda <@VarData
  5486 					sta :ztmp
  5487 					lda >@VarData
  5488 					ldy #@VarDataSize-1
  5489 					jmp @FreeMem
  5490 					els
  5491 2AE2 60				rts						; ret
  5492 					eif
  5493 				.endl
  5494
  5495 2AE3			.local	ADDMONEY					; PROCEDURE
  5496
  5497 				; optimize OK (helpersGame.pas), line = 7
  5498
  5499 2AE3 AD 1A E4			lda CURRENTPLAYER
  5500 2AE6 0A				asl @
  5501 2AE7 0A				asl @
  5502 2AE8 A8				tay
  5503 2AE9 B9 10 E0			lda adr.PLMONEY,y
  5504 2AEC 18 6D 35 B9			add AMOUNT
  5505 2AF0 85 9E			sta :STACKORIGIN+10
  5506 2AF2 B9 11 E0			lda adr.PLMONEY+1,y
  5507 2AF5 6D 36 B9			adc AMOUNT+1
  5508 2AF8 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5509 2AFA B9 12 E0			lda adr.PLMONEY+2,y
  5510 2AFD 69 00			adc #$00
  5511 2AFF 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
  5512 2B01 B9 13 E0			lda adr.PLMONEY+3,y
  5513 2B04 69 00			adc #$00
  5514 2B06 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
  5515 2B08 A5 9E			lda :STACKORIGIN+10
  5516 2B0A 99 10 E0			sta adr.PLMONEY,y
  5517 2B0D A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  5518 2B0F 99 11 E0			sta adr.PLMONEY+1,y
  5519 2B12 A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
  5520 2B14 99 12 E0			sta adr.PLMONEY+2,y
  5521 2B17 A5 CE			lda :STACKORIGIN+STACKWIDTH*3+10
  5522 2B19 99 13 E0			sta adr.PLMONEY+3,y
  5523
  5524 				; ------------------------------------------------------------
  5525
  5526 = B935			AMOUNT	= DATAORIGIN+$14C0
  5527
  5528 = B935			@VarData	= AMOUNT
  5529 = 0002			@VarDataSize	= 2
  5530
  5531 2B1C			@exit
  5532 					.ifdef @new
  5533 					lda <@VarData
  5534 					sta :ztmp
  5535 					lda >@VarData
  5536 					ldy #@VarDataSize-1
  5537 					jmp @FreeMem
  5538 					els
  5539 2B1C 60				rts						; ret
  5540 					eif
  5541 				.endl
  5542
  5543 2B1D			.local	SUBMONEY					; PROCEDURE
  5544
  5545 				; optimize OK (helpersGame.pas), line = 13
  5546
  5547 2B1D AD 1A E4			lda CURRENTPLAYER
  5548 2B20 0A				asl @
  5549 2B21 0A				asl @
  5550 2B22 A8				tay
  5551 2B23 B9 10 E0			lda adr.PLMONEY,y
  5552 2B26 38 ED 37 B9			sub AMOUNT
  5553 2B2A 85 9E			sta :STACKORIGIN+10
  5554 2B2C B9 11 E0			lda adr.PLMONEY+1,y
  5555 2B2F ED 38 B9			sbc AMOUNT+1
  5556 2B32 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5557 2B34 B9 12 E0			lda adr.PLMONEY+2,y
  5558 2B37 E9 00			sbc #$00
  5559 2B39 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
  5560 2B3B B9 13 E0			lda adr.PLMONEY+3,y
  5561 2B3E E9 00			sbc #$00
  5562 2B40 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
  5563 2B42 A5 9E			lda :STACKORIGIN+10
  5564 2B44 99 10 E0			sta adr.PLMONEY,y
  5565 2B47 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  5566 2B49 99 11 E0			sta adr.PLMONEY+1,y
  5567 2B4C A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
  5568 2B4E 99 12 E0			sta adr.PLMONEY+2,y
  5569 2B51 A5 CE			lda :STACKORIGIN+STACKWIDTH*3+10
  5570 2B53 99 13 E0			sta adr.PLMONEY+3,y
  5571
  5572 				; ------------------------------------------------------------
  5573
  5574 = B937			AMOUNT	= DATAORIGIN+$14C2
  5575
  5576 = B937			@VarData	= AMOUNT
  5577 = 0002			@VarDataSize	= 2
  5578
  5579 2B56			@exit
  5580 					.ifdef @new
  5581 					lda <@VarData
  5582 					sta :ztmp
  5583 					lda >@VarData
  5584 					ldy #@VarDataSize-1
  5585 					jmp @FreeMem
  5586 					els
  5587 2B56 60				rts						; ret
  5588 					eif
  5589 				.endl
  5590
  5591 2B57			.local	CRACKEDBANK					; PROCEDURE
  5592
  5593 				; optimize OK (helpersGame.pas), line = 21
  5594
  5595 2B57 A9 01			lda #$01
  5596 2B59 20 B3 26			jsr LOADLOCATION
  5597
  5598 				; optimize OK (helpersGame.pas), line = 22
  5599
  5600 2B5C A9 00			lda #$00
  5601 2B5E 20 CB 15			jsr SYSTEM.RANDOM_02E9
  5602 2B61 E8				inx
  5603 2B62 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
  5604 2B67 E8				inx
  5605 2B68 A9 0B 95 94			mva #$0B :STACKORIGIN,x
  5606 2B6C 20 E7 11			jsr imulBYTE
  5607 2B6F A5 84			lda :eax
  5608 2B71 18 69 A0			add #$A0
  5609 2B74 95 93			sta :STACKORIGIN-1,x
  5610 2B76 A5 85			lda :eax+1
  5611 2B78 69 0F			adc #$0F
  5612 2B7A 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
  5613 2B7C B5 93			lda :STACKORIGIN-1,x
  5614 2B7E 18 6D 39 B9			add P
  5615 2B82 8D 3B B9			sta M
  5616 2B85 B5 A3			lda :STACKORIGIN-1+STACKWIDTH,x
  5617 2B87 6D 3A B9			adc P+1
  5618 2B8A 8D 3C B9			sta M+1
  5619 2B8D CA				dex
  5620 2B8E CA				dex
  5621
  5622 				; optimize FAIL ('ENABLECONSOLE', helpersGame.pas), line = 25
  5623
  5624 2B8F 20 97 25			jsr ENABLECONSOLE
  5625
  5626 				; optimize FAIL ('SHOWLOCATIONHEADER', helpersGame.pas), line = 26
  5627
  5628 2B92 20 1D 26			jsr SHOWLOCATIONHEADER
  5629
  5630 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', helpersGame.pas), line = 27
  5631
  5632 2B95 E8				inx
  5633 2B96 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
  5634 2B9B AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
  5635 2BA0 E8				inx
  5636 2BA1 A9 06 95 94			mva #$06 :STACKORIGIN,x
  5637 2BA5 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  5638
  5639 				; optimize OK (helpersGame.pas), line = 28
  5640
  5641 2BA8 A9 07			lda #$07
  5642 2BAA 8D 3D B9			sta K
  5643
  5644 				; optimize OK (helpersGame.pas), line = 31
  5645
  5646 2BAD AD 3A B9			lda P+1
  5647 2BB0 D0 05			bne @+
  5648 2BB2 AD 39 B9			lda P
  5649 2BB5 C9 01			cmp #$01
  5650 				@
  5651 2BB7 D0 42			jne l_0E35
  5652
  5653 				; optimize OK (helpersGame.pas), line = 33
  5654
  5655 2BB9 AC 1A E4			ldy CURRENTPLAYER
  5656 2BBC B9 40 E0			lda adr.PLOPPORTUNITY,y
  5657 2BBF 09 02			ora #$02
  5658 2BC1 F0 2D			jeq l_0E4F
  5659
  5660 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', helpersGame.pas), line = 35
  5661
  5662 2BC3 E8				inx
  5663 2BC4 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
  5664 2BC9 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
  5665 2BCE E8				inx
  5666 2BCF A9 07 95 94			mva #$07 :STACKORIGIN,x
  5667 2BD3 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  5668
  5669 				; optimize OK (helpersGame.pas), line = 36
  5670
  5671 2BD6 AD 3D B9			lda K
  5672 2BD9 18 69 02			add #$02
  5673 2BDC 8D 3D B9			sta K
  5674
  5675 				; optimize OK (helpersGame.pas), line = 37
  5676
  5677 2BDF AD 3B B9			lda M
  5678 2BE2 18 69 4C			add #$4C
  5679 2BE5 8D 3B B9			sta M
  5680 2BE8 AD 3C B9			lda M+1
  5681 2BEB 69 1D			adc #$1D
  5682 2BED 8D 3C B9			sta M+1
  5683 2BF0			l_0E4F
  5684
  5685 				; optimize OK (helpersGame.pas), line = 39
  5686
  5687 2BF0 AC 1A E4			ldy CURRENTPLAYER
  5688 2BF3 B9 40 E0			lda adr.PLOPPORTUNITY,y
  5689 2BF6 29 FD			and #$FD
  5690 2BF8 99 40 E0			sta adr.PLOPPORTUNITY,y
  5691 2BFB			l_0E35
  5692
  5693 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', helpersGame.pas), line = 42
  5694
  5695 2BFB E8				inx
  5696 2BFC AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
  5697 2C01 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
  5698 2C06 E8				inx
  5699 2C07 AD 3D B9 95 94		mva K :STACKORIGIN,x
  5700 2C0C 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  5701
  5702 				; optimize OK (helpersGame.pas), line = 43
  5703
  5704 2C0F AD 3D B9			lda K
  5705 2C12 18 69 01			add #$01
  5706 2C15 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  5707 2C18 A9 11			lda #$11
  5708 2C1A 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  5709 2C1D 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  5710
  5711 				; optimize OK (helpersGame.pas), line = 44
  5712
  5713 2C20 AD 3B B9			lda M
  5714 2C23 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
  5715 2C26 AD 3C B9			lda M+1
  5716 2C29 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
  5717 2C2C 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
  5718
  5719 				; optimize FAIL ('CRT_WRITELN', helpersGame.pas), line = 45
  5720
  5721 2C2F E8				inx
  5722 2C30 A9 9D 95 94			mva #$9D :STACKORIGIN,x
  5723 2C34 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  5724 2C38 20 80 21			jsr CRT_WRITELN
  5725
  5726 				; optimize FAIL ('WAITFORKEY', helpersGame.pas), line = 46
  5727
  5728 2C3B 20 2E 21			jsr WAITFORKEY
  5729
  5730 				; optimize OK (helpersGame.pas), line = 47
  5731
  5732 2C3E AD 3B B9			lda M
  5733 2C41 8D 35 B9			sta ADDMONEY.AMOUNT
  5734 2C44 AD 3C B9			lda M+1
  5735 2C47 8D 36 B9			sta ADDMONEY.AMOUNT+1
  5736 2C4A 20 E3 2A			jsr ADDMONEY
  5737
  5738 				; optimize OK (helpersGame.pas), line = 48
  5739
  5740 2C4D AC 1A E4			ldy CURRENTPLAYER
  5741 2C50 B9 80 E0			lda adr.PLNEWPOINTS,y
  5742 2C53 18 69 04			add #$04
  5743 2C56 99 80 E0			sta adr.PLNEWPOINTS,y
  5744
  5745 				; ------------------------------------------------------------
  5746
  5747 = B939			P	= DATAORIGIN+$14C4
  5748 = B93B			M	= DATAORIGIN+$14C6
  5749 = B93D			K	= DATAORIGIN+$14C8
  5750
  5751 = B939			@VarData	= P
  5752 = 0005			@VarDataSize	= 5
  5753
  5754 2C59			@exit
  5755 					.ifdef @new
  5756 					lda <@VarData
  5757 					sta :ztmp
  5758 					lda >@VarData
  5759 					ldy #@VarDataSize-1
  5760 					jmp @FreeMem
  5761 					els
  5762 2C59 60				rts						; ret
  5763 					eif
  5764 				.endl
  5765
  5766 2C5A			.local	PREPAREFIGHTAGAINSTPOLICE			; PROCEDURE
  5767
  5768 				; optimize OK (helpersGame.pas), line = 58
  5769
  5770 2C5A AD 7A B0			lda adr.FP_GANG+$02
  5771 2C5D 85 8C			sta @move.dst
  5772 2C5F AD 7B B0			lda adr.FP_GANG+1+$02
  5773 2C62 85 8D			sta @move.dst+1
  5774 2C64 AD 4A A4			lda FIGHT_POLICE_STRING_1
  5775 2C67 85 88			sta @move.src
  5776 2C69 AD 4B A4			lda FIGHT_POLICE_STRING_1+1
  5777 2C6C 85 89			sta @move.src+1
  5778 2C6E A0 00			ldy #$00
  5779 2C70 B1 88			lda (@move.src),y
  5780 2C72 18 69 01			add #1
  5781 2C75 85 84			sta @move.cnt
  5782 2C77 90 01			scc
  5783 2C79 C8				iny
  5784 2C7A 84 85			sty @move.cnt+1
  5785 2C7C 20 35 10			jsr @move
  5786
  5787 				; optimize OK (helpersGame.pas), line = 59
  5788
  5789 2C7F A9 01			lda #$01
  5790 2C81 8D 02 EC			sta adr.FP_AI+$01
  5791
  5792 				; optimize OK (helpersGame.pas), line = 60
  5793
  5794 2C84 AC 1A E4			ldy CURRENTPLAYER
  5795 2C87 B9 78 E0			lda adr.PLRANK,y
  5796 2C8A C9 05			cmp #$05
  5797 2C8C 90 25			jcc l_0EC7
  5798
  5799 				; optimize FAIL (2, helpersGame.pas), line = 61
  5800
  5801 2C8E E8				inx
  5802 2C8F A9 01 95 94			mva #$01 :STACKORIGIN,x
  5803 2C93 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  5804 2C97 E8				inx
  5805 2C98 A9 05 95 94			mva #$05 :STACKORIGIN,x
  5806 2C9C B9 78 E0			lda adr.PLRANK,y
  5807 2C9F 4A				lsr @
  5808 2CA0 20 CB 15			jsr SYSTEM.RANDOM_02E9
  5809 2CA3 B5 94			lda :STACKORIGIN,x
  5810 2CA5 18 6D 81 A4			add SYSTEM.RANDOM_02E9.RESULT
  5811 2CA9 B4 93			ldy :STACKORIGIN-1,x
  5812 2CAB 99 03 EC			sta adr.FP_N,y
  5813 2CAE CA				dex
  5814 2CAF CA				dex
  5815 2CB0 4C B8 2C			jmp l_0EE4
  5816 2CB3			l_0EC7
  5817
  5818 				; optimize OK (helpersGame.pas), line = 63
  5819
  5820 2CB3 A9 05			lda #$05
  5821 2CB5 8D 04 EC			sta adr.FP_N+$01
  5822 2CB8			l_0EE4
  5823
  5824 				; optimize OK (helpersGame.pas), line = 64
  5825
  5826 2CB8 A9 00			lda #$00
  5827 2CBA 8D 3E B9			sta K
  5828 2CBD AD 04 EC			lda adr.FP_N+$01
  5829 2CC0 38 E9 01			sub #$01
  5830 2CC3 8D C7 2C			sta @FORTMP_0EF6_0
  5831
  5832 2CC6			l_0EF9
  5833 				; --- ForToDoCondition
  5834 2CC6 A9 00			lda @FORTMP_0EF6_0::#$00
  5835 2CC8 CD 3E B9			cmp K
  5836 2CCB B0 03 4C 97 2D		jcc l_0F07
  5837
  5838 				; optimize FAIL (1, helpersGame.pas), line = 66
  5839
  5840 2CD0 E8				inx
  5841 2CD1 A9 10 95 94			mva #$10 :STACKORIGIN,x
  5842 2CD5 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  5843 2CD9 E8				inx
  5844 2CDA AD 3E B9 95 94		mva K :STACKORIGIN,x
  5845 2CDF A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  5846 2CE3 20 70 0F			jsr addAX_CX
  5847 2CE6 CA				dex
  5848 2CE7 A9 02			lda #$02
  5849 2CE9 20 CB 15			jsr SYSTEM.RANDOM_02E9
  5850 2CEC B4 94			ldy :STACKORIGIN,x
  5851 2CEE AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  5852 2CF1 99 45 ED			sta adr.FP_SEX,y
  5853 2CF4 CA				dex
  5854
  5855 				; optimize OK (helpersGame.pas), line = 67
  5856
  5857 2CF5 AD 3E B9			lda K
  5858 2CF8 0A				asl @
  5859 2CF9 A8				tay
  5860 2CFA B9 9C B0			lda adr.FP_NAME+$20,y
  5861 2CFD 85 8C			sta @move.dst
  5862 2CFF B9 9D B0			lda adr.FP_NAME+1+$20,y
  5863 2D02 85 8D			sta @move.dst+1
  5864 2D04 AD 4C A4			lda FIGHT_POLICE_STRING_2
  5865 2D07 85 88			sta @move.src
  5866 2D09 AD 4D A4			lda FIGHT_POLICE_STRING_2+1
  5867 2D0C 85 89			sta @move.src+1
  5868 2D0E A0 00			ldy #$00
  5869 2D10 B1 88			lda (@move.src),y
  5870 2D12 18 69 01			add #1
  5871 2D15 85 84			sta @move.cnt
  5872 2D17 90 01			scc
  5873 2D19 C8				iny
  5874 2D1A 84 85			sty @move.cnt+1
  5875 2D1C 20 35 10			jsr @move
  5876
  5877 				; optimize OK (helpersGame.pas), line = 68
  5878
  5879 2D1F AC 1A E4			ldy CURRENTPLAYER
  5880 2D22 B9 78 E0			lda adr.PLRANK,y
  5881 2D25 A0 01			ldy #1
  5882 2D27 C9 06			cmp #$06
  5883 2D29 B0 01			bcs @+
  5884 2D2B 88				dey
  5885 				@
  5886 2D2C 98				tya
  5887 2D2D 85 9F			sta :STACKORIGIN+11
  5888 2D2F A9 00			lda #$00
  5889 2D31 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  5890 2D33 A5 9F			lda :STACKORIGIN+11
  5891 2D35 0A				asl @
  5892 2D36 26 AF			rol :STACKORIGIN+STACKWIDTH+11
  5893 2D38 18 69 05			add #$05
  5894 2D3B AC 3E B9			ldy K
  5895 2D3E 99 55 EC			sta adr.FP_WEAPON+$10,y
  5896
  5897 				; optimize FAIL (2, helpersGame.pas), line = 69
  5898
  5899 2D41 E8				inx
  5900 2D42 A9 10 95 94			mva #$10 :STACKORIGIN,x
  5901 2D46 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  5902 2D4A E8				inx
  5903 2D4B AD 3E B9 95 94		mva K :STACKORIGIN,x
  5904 2D50 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  5905 2D54 20 70 0F			jsr addAX_CX
  5906 2D57 A9 12 95 94			mva #$12 :STACKORIGIN,x
  5907 2D5B E8				inx
  5908 2D5C A9 02 95 94			mva #$02 :STACKORIGIN,x
  5909 2D60 E8				inx
  5910 2D61 AC 1A E4			ldy CURRENTPLAYER
  5911 2D64 B9 78 E0			lda adr.PLRANK,y
  5912 2D67 95 94			sta :STACKORIGIN,x
  5913 2D69 20 E7 11			jsr imulBYTE
  5914 2D6C A5 84			lda :eax
  5915 2D6E 95 93			sta :STACKORIGIN-1,x
  5916 2D70 A5 85			lda :eax+1
  5917 2D72 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
  5918 2D74 CA				dex
  5919 2D75 A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
  5920 2D79 20 5D 0F			jsr addAL_CL
  5921 2D7C CA				dex
  5922 2D7D A9 0A			lda #$0A
  5923 2D7F 20 CB 15			jsr SYSTEM.RANDOM_02E9
  5924 2D82 B5 94			lda :STACKORIGIN,x
  5925 2D84 38 ED 81 A4			sub SYSTEM.RANDOM_02E9.RESULT
  5926 2D88 B4 93			ldy :STACKORIGIN-1,x
  5927 2D8A 99 85 EC			sta adr.FP_ENERGY,y
  5928 2D8D CA				dex
  5929 2D8E CA				dex
  5930
  5931 				; --- ForToDoEpilog
  5932 2D8F EE 3E B9			inc K
  5933 2D92 F0 03 4C C6 2C		jne l_0EF9
  5934 2D97			l_0F07
  5935
  5936 				; ------------------------------------------------------------
  5937
  5938 = B93E			K	= DATAORIGIN+$14C9
  5939
  5940 = B93E			@VarData	= K
  5941 = 0001			@VarDataSize	= 1
  5942
  5943 2D97			@exit
  5944 					.ifdef @new
  5945 					lda <@VarData
  5946 					sta :ztmp
  5947 					lda >@VarData
  5948 					ldy #@VarDataSize-1
  5949 					jmp @FreeMem
  5950 					els
  5951 2D97 60				rts						; ret
  5952 					eif
  5953 				.endl
  5954
  5955 2D98			.local	PAYMONEY					; FUNCTION
  5956
  5957 				; optimize OK (helpersGame.pas), line = 94
  5958
  5959 2D98 AD 1A E4			lda CURRENTPLAYER
  5960 2D9B 0A				asl @
  5961 2D9C 0A				asl @
  5962 2D9D A8				tay
  5963 2D9E B9 10 E0			lda adr.PLMONEY,y
  5964 2DA1 85 9D			sta :STACKORIGIN+9
  5965 2DA3 B9 11 E0			lda adr.PLMONEY+1,y
  5966 2DA6 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  5967 2DA8 B9 12 E0			lda adr.PLMONEY+2,y
  5968 2DAB 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  5969 2DAD B9 13 E0			lda adr.PLMONEY+3,y
  5970 2DB0 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  5971 2DB2 AD 40 B9			lda PRICE
  5972 2DB5 85 9E			sta :STACKORIGIN+10
  5973 2DB7 A0 00			ldy #$00
  5974 2DB9 AD 41 B9			lda PRICE+1
  5975 2DBC 10 01			spl
  5976 2DBE 88				dey
  5977 2DBF 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5978 2DC1 84 BE			sty :STACKORIGIN+STACKWIDTH*2+10
  5979 2DC3 84 CE			sty :STACKORIGIN+STACKWIDTH*3+10
  5980 2DC5				.LOCAL
  5981 2DC5 A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  5982 2DC7 38 E5 CE			sub :STACKORIGIN+STACKWIDTH*3+10
  5983 2DCA D0 1C			bne L4
  5984 2DCC A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  5985 2DCE C5 BE			cmp :STACKORIGIN+STACKWIDTH*2+10
  5986 2DD0 D0 0A			bne L1
  5987 2DD2 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  5988 2DD4 C5 AE			cmp :STACKORIGIN+STACKWIDTH+10
  5989 2DD6 D0 04			bne L1
  5990 2DD8 A5 9D			lda :STACKORIGIN+9
  5991 2DDA C5 9E			cmp :STACKORIGIN+10
  5992 2DDC F0 10		L1	beq L5
  5993 2DDE B0 04			bcs L3
  5994 2DE0 A9 FF			lda #$FF
  5995 2DE2 D0 0A			bne L5
  5996 2DE4 A9 01		L3	lda #$01
  5997 2DE6 D0 06			bne L5
  5998 2DE8 50 04		L4	bvc L5
  5999 2DEA 49 FF			eor #$FF
  6000 2DEC 09 01			ora #$01
  6001 2DEE			L5
  6002 					.ENDL
  6003 2DEE 10 1C			jpl l_0F77
  6004
  6005 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpersGame.pas), line = 96
  6006
  6007 2DF0 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  6008
  6009 				; optimize FAIL ('CRT_WRITELN', helpersGame.pas), line = 97
  6010
  6011 2DF3 E8				inx
  6012 2DF4 AD 4E A4 95 94		mva NOT_ENOUGH_MONEY_STRING :STACKORIGIN,x
  6013 2DF9 AD 4F A4 95 A4		mva NOT_ENOUGH_MONEY_STRING+1 :STACKORIGIN+STACKWIDTH,x
  6014 2DFE 20 80 21			jsr CRT_WRITELN
  6015
  6016 				; optimize FAIL ('B_CRT.CRT_READKEY', helpersGame.pas), line = 98
  6017
  6018 2E01 20 42 1D			jsr B_CRT.CRT_READKEY
  6019
  6020 				; optimize OK (helpersGame.pas), line = 99
  6021
  6022 2E04 A9 00			lda #$00
  6023 2E06 8D 42 B9			sta RESULT
  6024 2E09 4C 20 2E			jmp @exit
  6025 2E0C			l_0F77
  6026
  6027 				; optimize OK (helpersGame.pas), line = 102
  6028
  6029 2E0C AD 40 B9			lda PRICE
  6030 2E0F 8D 37 B9			sta SUBMONEY.AMOUNT
  6031 2E12 AD 41 B9			lda PRICE+1
  6032 2E15 8D 38 B9			sta SUBMONEY.AMOUNT+1
  6033 2E18 20 1D 2B			jsr SUBMONEY
  6034
  6035 				; optimize OK (helpersGame.pas), line = 103
  6036
  6037 2E1B A9 01			lda #$01
  6038 2E1D 8D 42 B9			sta RESULT
  6039 2E20			@exit
  6040
  6041 				; ------------------------------------------------------------
  6042
  6043 = B940			PRICE	= DATAORIGIN+$14CB
  6044 = B942			RESULT	= DATAORIGIN+$14CD
  6045
  6046 = B940			@VarData	= PRICE
  6047 = 0002			@VarDataSize	= 2
  6048
  6049 2E20 60				rts						; ret
  6050 				.endl
  6051
  6052 2E21			.local	SELECTGANGSTER					; PROCEDURE
  6053
  6054 				; optimize OK (helpersGame.pas), line = 111
  6055
  6056 2E21 AC 1A E4			ldy CURRENTPLAYER
  6057 2E24 B9 41 E4			lda adr.PLNGANGSTERS,y
  6058 2E27 C9 01			cmp #$01
  6059 2E29 D0 0C			jne l_0FA3
  6060
  6061 				; optimize OK (helpersGame.pas), line = 112
  6062
  6063 2E2B AD 1A E4			lda CURRENTPLAYER
  6064 2E2E 0A				asl @
  6065 2E2F 0A				asl @
  6066 2E30 0A				asl @
  6067 2E31 8D 18 E4			sta CURRENTGANGSTER
  6068 2E34 4C 81 2F			jmp @exit
  6069 2E37			l_0FA3
  6070
  6071 				; optimize OK (helpersGame.pas), line = 116
  6072
  6073 2E37 A9 00			lda #$00
  6074 2E39 8D 43 B9			sta J
  6075
  6076 				; optimize FAIL ('B_CRT.CRT_WHEREY', helpersGame.pas), line = 117
  6077
  6078 2E3C 20 F2 1B			jsr B_CRT.CRT_WHEREY
  6079 2E3F AD C3 AA			lda B_CRT.CRT_WHEREY.RESULT
  6080 2E42 38 E9 01			sub #$01
  6081 2E45 8D 46 B9			sta Y
  6082
  6083 				; optimize OK (helpersGame.pas), line = 118
  6084
  6085 2E48 A9 00			lda #$00
  6086 2E4A 8D 44 B9			sta K
  6087
  6088 2E4D			l_0FC5
  6089 				; --- ForToDoCondition
  6090 2E4D AC 44 B9			ldy K
  6091 2E50 C0 20			cpy #$20
  6092 2E52 90 03 4C 3C 2F		jcs l_0FD3
  6093
  6094 				; optimize OK (helpersGame.pas), line = 120
  6095
  6096 2E57 B9 21 E4			lda adr.PLGANGSTERS,y
  6097 2E5A CD 1A E4			cmp CURRENTPLAYER
  6098 2E5D F0 03 4C 34 2F		jne l_0FEA
  6099
  6100 				; optimize OK (helpersGame.pas), line = 122
  6101
  6102 2E62 A9 00			lda #$00
  6103 2E64 8D 45 B9			sta X
  6104
  6105 				; optimize OK (helpersGame.pas), line = 123
  6106
  6107 2E67 AD 43 B9			lda J
  6108 2E6A 29 01			and #$01
  6109 2E6C C9 01			cmp #$01
  6110 2E6E D0 08			jne l_1005
  6111
  6112 				; optimize OK (helpersGame.pas), line = 124
  6113
  6114 2E70 A9 14			lda #$14
  6115 2E72 8D 45 B9			sta X
  6116 2E75 4C 81 2E			jmp l_1013
  6117 2E78			l_1005
  6118
  6119 				; optimize OK (helpersGame.pas), line = 126
  6120
  6121 2E78 AD 46 B9			lda Y
  6122 2E7B 18 69 03			add #$03
  6123 2E7E 8D 46 B9			sta Y
  6124 2E81			l_1013
  6125
  6126 				; optimize OK (helpersGame.pas), line = 127
  6127
  6128 2E81 AD 45 B9			lda X
  6129 2E84 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  6130 2E87 AD 46 B9			lda Y
  6131 2E8A 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  6132 2E8D 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  6133
  6134 				; optimize OK (helpersGame.pas), line = 128
  6135
  6136 2E90 AD 43 B9			lda J
  6137 2E93 18 69 01			add #$01
  6138 2E96 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
  6139 2E99 A9 00			lda #$00
  6140 2E9B 69 00			adc #$00
  6141 2E9D 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
  6142 2EA0 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
  6143
  6144 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 129
  6145
  6146 2EA3 E8				inx
  6147 2EA4 A9 A1 95 94			mva #$A1 :STACKORIGIN,x
  6148 2EA8 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6149 2EAC 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6150
  6151 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 130
  6152
  6153 2EAF E8				inx
  6154 2EB0 AD 44 B9			lda K
  6155 2EB3 0A				asl @
  6156 2EB4 A8				tay
  6157 2EB5 B9 E0 B0			lda adr.GANGSTERNAMES,y
  6158 2EB8 95 94			sta :STACKORIGIN,x
  6159 2EBA B9 E1 B0			lda adr.GANGSTERNAMES+1,y
  6160 2EBD 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  6161 2EBF 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6162
  6163 				; optimize OK (helpersGame.pas), line = 131
  6164
  6165 2EC2 AD 46 B9			lda Y
  6166 2EC5 18 69 01			add #$01
  6167 2EC8 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  6168 2ECB AD 45 B9			lda X
  6169 2ECE 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  6170 2ED1 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  6171
  6172 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 132
  6173
  6174 2ED4 E8				inx
  6175 2ED5 A9 A6 95 94			mva #$A6 :STACKORIGIN,x
  6176 2ED9 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6177 2EDD 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6178
  6179 				; optimize OK (helpersGame.pas), line = 133
  6180
  6181 2EE0 AC 44 B9			ldy K
  6182 2EE3 B9 B8 E3			lda adr.GANGSTERHEALTH,y
  6183 2EE6 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
  6184
  6185 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 134
  6186
  6187 2EE9 E8				inx
  6188 2EEA A9 AA 95 94			mva #$AA :STACKORIGIN,x
  6189 2EEE A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6190 2EF2 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6191
  6192 				; optimize OK (helpersGame.pas), line = 135
  6193
  6194 2EF5 AC 44 B9			ldy K
  6195 2EF8 B9 98 E3			lda adr.GANGSTERBRUT,y
  6196 2EFB 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
  6197
  6198 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 136
  6199
  6200 2EFE E8				inx
  6201 2EFF A9 AF 95 94			mva #$AF :STACKORIGIN,x
  6202 2F03 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6203 2F07 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6204
  6205 				; optimize OK (helpersGame.pas), line = 137
  6206
  6207 2F0A AC 44 B9			ldy K
  6208 2F0D B9 78 E3			lda adr.GANGSTERINT,y
  6209 2F10 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
  6210
  6211 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 138
  6212
  6213 2F13 E8				inx
  6214 2F14 A9 B4 95 94			mva #$B4 :STACKORIGIN,x
  6215 2F18 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6216 2F1C 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6217
  6218 				; optimize OK (helpersGame.pas), line = 139
  6219
  6220 2F1F AC 44 B9			ldy K
  6221 2F22 B9 58 E3			lda adr.GANGSTERSTR,y
  6222 2F25 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
  6223
  6224 				; optimize OK (helpersGame.pas), line = 140
  6225
  6226 2F28 AC 43 B9			ldy J
  6227 2F2B AD 44 B9			lda K
  6228 2F2E 99 47 B9			sta adr.MAP,y
  6229
  6230 				; optimize OK (helpersGame.pas), line = 141
  6231
  6232 2F31 EE 43 B9			inc J
  6233 2F34			l_0FEA
  6234
  6235 				; --- ForToDoEpilog
  6236 2F34 EE 44 B9			inc K
  6237 2F37 F0 03 4C 4D 2E		jne l_0FC5
  6238 2F3C			l_0FD3
  6239
  6240 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpersGame.pas), line = 144
  6241
  6242 2F3C 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  6243
  6244 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpersGame.pas), line = 145
  6245
  6246 2F3F 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  6247
  6248 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersGame.pas), line = 146
  6249
  6250 2F42 E8				inx
  6251 2F43 AD 50 A4 95 94		mva YOUR_CHOICE_STRING :STACKORIGIN,x
  6252 2F48 AD 51 A4 95 A4		mva YOUR_CHOICE_STRING+1 :STACKORIGIN+STACKWIDTH,x
  6253 2F4D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6254
  6255 				; optimize OK (helpersGame.pas), line = 147
  6256
  6257 2F50 A9 01			lda #$01
  6258 2F52 8D 91 B6			sta READVALUE.MINVALUE
  6259 2F55 A9 00			lda #$00
  6260 2F57 8D 92 B6			sta READVALUE.MINVALUE+1
  6261 2F5A AD 43 B9			lda J
  6262 2F5D 8D 93 B6			sta READVALUE.MAXVALUE
  6263 2F60 A9 00			lda #$00
  6264 2F62 8D 94 B6			sta READVALUE.MAXVALUE+1
  6265 2F65 20 EE 21			jsr READVALUE
  6266 2F68 AD 95 B6			lda READVALUE.RESULT
  6267 2F6B 8D 45 B9			sta X
  6268
  6269 				; optimize OK (helpersGame.pas), line = 148
  6270
  6271 2F6E D0 05			jne l_109C
  6272 2F70 A9 63			lda #$63
  6273 2F72 4C 7B 2F			jmp l_10AA
  6274 2F75			l_109C
  6275
  6276 				; optimize OK (helpersGame.pas), line = 149
  6277
  6278 2F75 AC 45 B9			ldy X
  6279 2F78 B9 46 B9			lda adr.MAP-$01,y
  6280 2F7B			l_10AA
  6281 2F7B 8D 18 E4			sta CURRENTGANGSTER
  6282
  6283 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpersGame.pas), line = 150
  6284
  6285 2F7E 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  6286
  6287 				; ------------------------------------------------------------
  6288
  6289 = B943			J	= DATAORIGIN+$14CE
  6290 = B944			K	= DATAORIGIN+$14CF
  6291 = B945			X	= DATAORIGIN+$14D0
  6292 = B946			Y	= DATAORIGIN+$14D1
  6293 = B947			adr.MAP	= [DATAORIGIN+$14D2] .array [9]
  6294 2F81			.var MAP	= adr.MAP .word
  6295
  6296 = B943			@VarData	= J
  6297 = 000D			@VarDataSize	= 13
  6298
  6299 2F81			@exit
  6300 					.ifdef @new
  6301 					lda <@VarData
  6302 					sta :ztmp
  6303 					lda >@VarData
  6304 					ldy #@VarDataSize-1
  6305 					jmp @FreeMem
  6306 					els
  6307 2F81 60				rts						; ret
  6308 					eif
  6309 = 2F82 47 B9		MAP
  6309 				.endl
  6310
  6311 2F84			.local	SAVEGAME					; PROCEDURE
  6312
  6313 				; optimize FAIL ('ENABLECONSOLE', helpersGame.pas), line = 175
  6314
  6315 2F84 20 97 25			jsr ENABLECONSOLE
  6316
  6317 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', helpersGame.pas), line = 176
  6318
  6319 2F87 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
  6320
  6321 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', helpersGame.pas), line = 177
  6322
  6323 2F8A E8				inx
  6324 2F8B A9 B9 95 94			mva #$B9 :STACKORIGIN,x
  6325 2F8F A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6326 2F93 E8				inx
  6327 2F94 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6328 2F98 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  6329
  6330 				; optimize OK (helpersGame.pas), line = 178
  6331
  6332 2F9B AD 00 A3			lda SAVEFNAME
  6333 2F9E 8D A7 A5			sta XBIOS.XBIOSOPENFILE.FILENAME
  6334 2FA1 AD 01 A3			lda SAVEFNAME+1
  6335 2FA4 8D A8 A5			sta XBIOS.XBIOSOPENFILE.FILENAME+1
  6336 2FA7 20 9B 16			jsr XBIOS.XBIOSOPENFILE
  6337
  6338 				; optimize OK (helpersGame.pas), line = 179
  6339
  6340 2FAA A9 00			lda #$00
  6341 2FAC 8D AE A5			sta XBIOS.XBIOSSETLENGTH.LEN
  6342 2FAF A9 10			lda #$10
  6343 2FB1 8D AF A5			sta XBIOS.XBIOSSETLENGTH.LEN+1
  6344 2FB4 20 36 17			jsr XBIOS.XBIOSSETLENGTH
  6345
  6346 				; optimize OK (helpersGame.pas), line = 180
  6347
  6348 2FB7 A9 00			lda #$00
  6349 2FB9 8D AB A5			sta XBIOS.XBIOSWRITEDATA.SRC
  6350 2FBC A9 E0			lda #$E0
  6351 2FBE 8D AC A5			sta XBIOS.XBIOSWRITEDATA.SRC+1
  6352 2FC1 20 DF 16			jsr XBIOS.XBIOSWRITEDATA
  6353
  6354 				; optimize FAIL ('XBIOS.XBIOSFLUSHBUFFER', helpersGame.pas), line = 186
  6355
  6356 2FC4 20 1C 17			jsr XBIOS.XBIOSFLUSHBUFFER
  6357
  6358 				; optimize FAIL ('WAITFORKEY', helpersGame.pas), line = 187
  6359
  6360 2FC7 20 2E 21			jsr WAITFORKEY
  6361
  6362 				; optimize FAIL ('ENABLEMAPCONSOLE', helpersGame.pas), line = 188
  6363
  6364 2FCA 20 DA 25			jsr ENABLEMAPCONSOLE
  6365 2FCD			@exit
  6366 					.ifdef @new
  6367 					lda <@VarData
  6368 					sta :ztmp
  6369 					lda >@VarData
  6370 					ldy #@VarDataSize-1
  6371 					jmp @FreeMem
  6372 					els
  6373 2FCD 60				rts						; ret
  6374 					eif
  6375 				.endl
  6376
  6377 2FCE			.local	LOADGAME					; PROCEDURE
  6378
  6379 				; optimize FAIL ('ENABLECONSOLE', helpersGame.pas), line = 195
  6380
  6381 2FCE 20 97 25			jsr ENABLECONSOLE
  6382
  6383 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', helpersGame.pas), line = 196
  6384
  6385 2FD1 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
  6386
  6387 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', helpersGame.pas), line = 197
  6388
  6389 2FD4 E8				inx
  6390 2FD5 A9 C4 95 94			mva #$C4 :STACKORIGIN,x
  6391 2FD9 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6392 2FDD E8				inx
  6393 2FDE A9 01 95 94			mva #$01 :STACKORIGIN,x
  6394 2FE2 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  6395
  6396 				; optimize OK (helpersGame.pas), line = 198
  6397
  6398 2FE5 AD 00 A3			lda SAVEFNAME
  6399 2FE8 8D A7 A5			sta XBIOS.XBIOSOPENFILE.FILENAME
  6400 2FEB AD 01 A3			lda SAVEFNAME+1
  6401 2FEE 8D A8 A5			sta XBIOS.XBIOSOPENFILE.FILENAME+1
  6402 2FF1 20 9B 16			jsr XBIOS.XBIOSOPENFILE
  6403
  6404 				; optimize OK (helpersGame.pas), line = 201
  6405
  6406 2FF4 A9 63			lda #$63
  6407 2FF6 8D 50 B9			sta TMP
  6408
  6409 				; optimize OK (helpersGame.pas), line = 202
  6410
  6411 2FF9 A9 01			lda #$01
  6412 2FFB 8D AE A5			sta XBIOS.XBIOSSETLENGTH.LEN
  6413 2FFE A9 00			lda #$00
  6414 3000 8D AF A5			sta XBIOS.XBIOSSETLENGTH.LEN+1
  6415 3003 20 36 17			jsr XBIOS.XBIOSSETLENGTH
  6416
  6417 				; optimize OK (helpersGame.pas), line = 203
  6418
  6419 3006 A9 50			lda <TMP
  6420 3008 8D A9 A5			sta XBIOS.XBIOSLOADDATA.DEST
  6421 300B A9 B9			lda >TMP
  6422 300D 8D AA A5			sta XBIOS.XBIOSLOADDATA.DEST+1
  6423 3010 20 BF 16			jsr XBIOS.XBIOSLOADDATA
  6424
  6425 				; optimize OK (helpersGame.pas), line = 204
  6426
  6427 3013 AD 50 B9			lda TMP
  6428 3016 C9 05			cmp #$05
  6429 3018 B0 04			jcs l_10FDx
  6430 301A C9 00			cmp #$00
  6431 301C D0 1A			jne l_10FD
  6432 301E			l_10FDx
  6433
  6434 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', helpersGame.pas), line = 205
  6435
  6436 301E E8				inx
  6437 301F A9 D0 95 94			mva #$D0 :STACKORIGIN,x
  6438 3023 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  6439 3027 E8				inx
  6440 3028 A9 03 95 94			mva #$03 :STACKORIGIN,x
  6441 302C 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
  6442
  6443 				; optimize FAIL ('WAITFORKEY', helpersGame.pas), line = 206
  6444
  6445 302F 20 2E 21			jsr WAITFORKEY
  6446
  6447 				; optimize FAIL ('ENABLEMAPCONSOLE', helpersGame.pas), line = 207
  6448
  6449 3032 20 DA 25			jsr ENABLEMAPCONSOLE
  6450 3035 4C 70 30			jmp @exit
  6451 3038			l_10FD
  6452
  6453 				; optimize OK (helpersGame.pas), line = 216
  6454
  6455 3038 AD 00 A3			lda SAVEFNAME
  6456 303B 8D A7 A5			sta XBIOS.XBIOSOPENFILE.FILENAME
  6457 303E AD 01 A3			lda SAVEFNAME+1
  6458 3041 8D A8 A5			sta XBIOS.XBIOSOPENFILE.FILENAME+1
  6459 3044 20 9B 16			jsr XBIOS.XBIOSOPENFILE
  6460
  6461 				; optimize OK (helpersGame.pas), line = 217
  6462
  6463 3047 A9 00			lda #$00
  6464 3049 8D AE A5			sta XBIOS.XBIOSSETLENGTH.LEN
  6465 304C A9 10			lda #$10
  6466 304E 8D AF A5			sta XBIOS.XBIOSSETLENGTH.LEN+1
  6467 3051 20 36 17			jsr XBIOS.XBIOSSETLENGTH
  6468
  6469 				; optimize OK (helpersGame.pas), line = 218
  6470
  6471 3054 A9 00			lda #$00
  6472 3056 8D A9 A5			sta XBIOS.XBIOSLOADDATA.DEST
  6473 3059 A9 E0			lda #$E0
  6474 305B 8D AA A5			sta XBIOS.XBIOSLOADDATA.DEST+1
  6475 305E 20 BF 16			jsr XBIOS.XBIOSLOADDATA
  6476
  6477 				; optimize FAIL ('XBIOS.XBIOSFLUSHBUFFER', helpersGame.pas), line = 223
  6478
  6479 3061 20 1C 17			jsr XBIOS.XBIOSFLUSHBUFFER
  6480
  6481 				; optimize FAIL ('WAITFORKEY', helpersGame.pas), line = 224
  6482
  6483 3064 20 2E 21			jsr WAITFORKEY
  6484
  6485 				; optimize FAIL ('PLACECURRENTPLAYER', helpersGame.pas), line = 225
  6486
  6487 3067 20 A9 2A			jsr PLACECURRENTPLAYER
  6488
  6489 				; optimize FAIL ('LOADMAP', helpersGame.pas), line = 226
  6490
  6491 306A 20 2A 89			jsr LOADMAP
  6492
  6493 				; optimize FAIL ('ENABLEMAPCONSOLE', helpersGame.pas), line = 227
  6494
  6495 306D 20 DA 25			jsr ENABLEMAPCONSOLE
  6496
  6497 				; ------------------------------------------------------------
  6498
  6499 = B950			TMP	= DATAORIGIN+$14DB
  6500
  6501 = B950			@VarData	= TMP
  6502 = 0001			@VarDataSize	= 1
  6503
  6504 3070			@exit
  6505 					.ifdef @new
  6506 					lda <@VarData
  6507 					sta :ztmp
  6508 					lda >@VarData
  6509 					ldy #@VarDataSize-1
  6510 					jmp @FreeMem
  6511 					els
  6512 3070 60				rts						; ret
  6513 					eif
  6514 				.endl
  6515
  6516 3071			.local	GOTOCOURT					; FUNCTION
  6517
  6518 				; optimize OK (sprites.pas), line = 18
  6519
  6520 3071 A9 04			lda #$04
  6521 3073 20 CB 15			jsr SYSTEM.RANDOM_02E9
  6522 3076 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  6523 3079 8D 55 B9			sta R
  6524
  6525 				; optimize OK (sprites.pas), line = 19
  6526
  6527 307C 8D 5B B9			sta @CASETMP_000A
  6528 307F C9 00			cmp #$00
  6529 3081 D0 10			jne l_1125
  6530 				@
  6531
  6532 				; optimize OK (sprites.pas), line = 21
  6533
  6534 3083 A9 0F			lda #$0F
  6535 3085 8D 56 B9			sta I
  6536 3088 A9 02			lda #$02
  6537 308A 8D 57 B9			sta J
  6538 308D 8D 58 B9			sta K
  6539 3090 4C D2 30			jmp a_000A
  6540 3093			l_1125
  6541 3093 C9 01			cmp #$01
  6542 3095 D0 12			jne l_113A
  6543
  6544 				; optimize OK (sprites.pas), line = 24
  6545
  6546 3097 A9 10			lda #$10
  6547 3099 8D 56 B9			sta I
  6548 309C A9 02			lda #$02
  6549 309E 8D 57 B9			sta J
  6550 30A1 A9 05			lda #$05
  6551 30A3 8D 58 B9			sta K
  6552 30A6 4C D2 30			jmp a_000A
  6553 30A9			l_113A
  6554 30A9 C9 02			cmp #$02
  6555 30AB D0 12			jne l_114F
  6556
  6557 				; optimize OK (sprites.pas), line = 27
  6558
  6559 30AD A9 02			lda #$02
  6560 30AF 8D 56 B9			sta I
  6561 30B2 A9 0A			lda #$0A
  6562 30B4 8D 57 B9			sta J
  6563 30B7 A9 09			lda #$09
  6564 30B9 8D 58 B9			sta K
  6565 30BC 4C D2 30			jmp a_000A
  6566 30BF			l_114F
  6567 30BF C9 03			cmp #$03
  6568 30C1 D0 0F			jne l_1164
  6569
  6570 				; optimize OK (sprites.pas), line = 30
  6571
  6572 30C3 A9 0D			lda #$0D
  6573 30C5 8D 56 B9			sta I
  6574 30C8 A9 0A			lda #$0A
  6575 30CA 8D 57 B9			sta J
  6576 30CD A9 04			lda #$04
  6577 30CF 8D 58 B9			sta K
  6578 30D2			l_1164
  6579 30D2			a_000A
  6580
  6581 				; optimize FAIL ('BLACKCONSOLE', sprites.pas), line = 33
  6582
  6583 30D2 20 72 25			jsr BLACKCONSOLE
  6584
  6585 				; optimize OK (sprites.pas), line = 35
  6586
  6587 30D5 AC 1A E4			ldy CURRENTPLAYER
  6588 30D8 AD 56 B9			lda I
  6589 30DB 99 34 E0			sta adr.PLMAPPOSX,y
  6590
  6591 				; optimize OK (sprites.pas), line = 36
  6592
  6593 30DE AD 57 B9			lda J
  6594 30E1 99 38 E0			sta adr.PLMAPPOSY,y
  6595
  6596 				; optimize OK (sprites.pas), line = 37
  6597
  6598 30E4 AD 58 B9			lda K
  6599 30E7 99 3C E0			sta adr.PLCURRENTMAP,y
  6600
  6601 				; optimize FAIL ('PLACECURRENTPLAYER', sprites.pas), line = 38
  6602
  6603 30EA 20 A9 2A			jsr PLACECURRENTPLAYER
  6604
  6605 				; optimize OK (sprites.pas), line = 39
  6606
  6607 30ED AD BA EA			lda MAPPOS_X
  6608 30F0 8D BC EA			sta OLDMAPPOS_X
  6609
  6610 				; optimize OK (sprites.pas), line = 40
  6611
  6612 30F3 AD BB EA			lda MAPPOS_Y
  6613 30F6 8D BD EA			sta OLDMAPPOS_Y
  6614
  6615 				; optimize FAIL ('PRELOADMAP', sprites.pas), line = 41
  6616
  6617 30F9 20 F4 88			jsr PRELOADMAP
  6618
  6619 				; optimize OK (sprites.pas), line = 43
  6620
  6621 30FC A9 19			lda #$19
  6622 30FE 20 B3 26			jsr LOADLOCATION
  6623
  6624 				; optimize FAIL ('ENABLECONSOLE', sprites.pas), line = 44
  6625
  6626 3101 20 97 25			jsr ENABLECONSOLE
  6627
  6628 				; optimize OK (sprites.pas), line = 45
  6629
  6630 3104 AC 1A E4			ldy CURRENTPLAYER
  6631 3107 B9 80 E0			lda adr.PLNEWPOINTS,y
  6632 310A 18 69 02			add #$02
  6633 310D 99 80 E0			sta adr.PLNEWPOINTS,y
  6634
  6635 				; optimize OK (sprites.pas), line = 46
  6636
  6637 3110 B9 78 E0			lda adr.PLRANK,y
  6638 3113 4A				lsr @
  6639 3114 18 69 01			add #$01
  6640 3117 8D 54 B9			sta PRISONTIME
  6641
  6642 				; optimize FAIL ('SHOWLOCATIONHEADER', sprites.pas), line = 48
  6643
  6644 311A 20 1D 26			jsr SHOWLOCATIONHEADER
  6645
  6646 				; optimize OK (sprites.pas), line = 50
  6647
  6648 311D AC 1A E4			ldy CURRENTPLAYER
  6649 3120 B9 78 E0			lda adr.PLRANK,y
  6650 3123 C9 05			cmp #$05
  6651 3125 B0 03 4C 26 32		jcc l_11DC
  6652
  6653 				; optimize FAIL ('CRT_WRITELN2', sprites.pas), line = 52
  6654
  6655 312A E8				inx
  6656 312B AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
  6657 3130 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
  6658 3135 20 4C 21			jsr CRT_WRITELN2
  6659
  6660 				; optimize FAIL ('GETYESNO', sprites.pas), line = 53
  6661
  6662 3138 20 DA 21			jsr GETYESNO
  6663 313B AD 90 B6			lda GETYESNO.RESULT
  6664 313E 8D 55 B9			sta R
  6665
  6666 				; optimize OK (sprites.pas), line = 54
  6667
  6668 3141 C9 01			cmp #$01
  6669 3143 F0 03 4C 26 32		jne l_11F6
  6670
  6671 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', sprites.pas), line = 56
  6672
  6673 3148 E8				inx
  6674 3149 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
  6675 314E AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
  6676 3153 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6677
  6678 				; optimize OK (sprites.pas), line = 57
  6679
  6680 3156 A9 00			lda #$00
  6681 3158 8D 91 B6			sta READVALUE.MINVALUE
  6682 315B 8D 92 B6			sta READVALUE.MINVALUE+1
  6683 315E A9 10			lda #$10
  6684 3160 8D 93 B6			sta READVALUE.MAXVALUE
  6685 3163 A9 27			lda #$27
  6686 3165 8D 94 B6			sta READVALUE.MAXVALUE+1
  6687 3168 20 EE 21			jsr READVALUE
  6688 316B AD 95 B6			lda READVALUE.RESULT
  6689 316E 8D 52 B9			sta LAWYER
  6690 3171 AD 96 B6			lda READVALUE.RESULT+1
  6691 3174 8D 53 B9			sta LAWYER+1
  6692
  6693 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', sprites.pas), line = 58
  6694
  6695 3177 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  6696
  6697 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', sprites.pas), line = 59
  6698
  6699 317A 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  6700
  6701 				; optimize OK (sprites.pas), line = 60
  6702
  6703 317D AD 52 B9			lda LAWYER
  6704 3180 8D 40 B9			sta PAYMONEY.PRICE
  6705 3183 AD 53 B9			lda LAWYER+1
  6706 3186 8D 41 B9			sta PAYMONEY.PRICE+1
  6707 3189 20 98 2D			jsr PAYMONEY
  6708 318C AD 42 B9			lda PAYMONEY.RESULT
  6709 318F 8D 59 B9			sta T
  6710
  6711 				; optimize OK (sprites.pas), line = 61
  6712
  6713 3192 C9 01			cmp #$01
  6714 3194 F0 03 4C 26 32		jne l_121A
  6715
  6716 				; optimize OK (sprites.pas), line = 64
  6717
  6718 3199 AD 53 B9			lda LAWYER+1
  6719 319C 4A				lsr @
  6720 319D 4A				lsr @
  6721 319E 18 69 01			add #$01
  6722 31A1 8D 5A B9			sta CHANGE
  6723
  6724 				; optimize OK (sprites.pas), line = 65
  6725
  6726 31A4 20 CB 15			jsr SYSTEM.RANDOM_02E9
  6727 31A7 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  6728 31AA 18 69 01			add #$01
  6729 31AD 8D 5A B9			sta CHANGE
  6730
  6731 				; optimize OK (sprites.pas), line = 66
  6732
  6733 31B0 AD 54 B9			lda PRISONTIME
  6734 31B3 38 ED 5A B9			sub CHANGE
  6735 31B7 8D 54 B9			sta PRISONTIME
  6736
  6737 				; optimize OK (sprites.pas), line = 67
  6738
  6739 31BA 10 05			jpl l_1251
  6740
  6741 				; optimize OK (sprites.pas), line = 68
  6742
  6743 31BC A9 00			lda #$00
  6744 31BE 8D 54 B9			sta PRISONTIME
  6745 31C1			l_1251
  6746
  6747 				; optimize OK (sprites.pas), line = 69
  6748
  6749 31C1 AC 1A E4			ldy CURRENTPLAYER
  6750 31C4 AD 54 B9			lda PRISONTIME
  6751 31C7 99 74 E0			sta adr.PLPRISON,y
  6752
  6753 				; optimize OK (sprites.pas), line = 70
  6754
  6755 31CA AD 54 B9			lda PRISONTIME
  6756 31CD D0 19			jne l_1273
  6757
  6758 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 72
  6759
  6760 31CF E8				inx
  6761 31D0 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
  6762 31D5 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
  6763 31DA 20 80 21			jsr CRT_WRITELN
  6764
  6765 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 73
  6766
  6767 31DD 20 2E 21			jsr WAITFORKEY
  6768
  6769 				; optimize OK (sprites.pas), line = 74
  6770
  6771 31E0 A9 01			lda #$01
  6772 31E2 8D 51 B9			sta RESULT
  6773 31E5 4C 7B 32			jmp @exit
  6774 31E8			l_1273
  6775
  6776 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 77
  6777
  6778 31E8 E8				inx
  6779 31E9 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
  6780 31EE AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
  6781 31F3 20 80 21			jsr CRT_WRITELN
  6782
  6783 				; optimize OK (sprites.pas), line = 78
  6784
  6785 31F6 A0 00			ldy #$00
  6786 31F8 AD 54 B9			lda PRISONTIME
  6787 31FB 10 01			spl
  6788 31FD 88				dey
  6789 31FE 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
  6790 3201 8C CA AB			sty B_CRT.CRT_WRITE_056E.NUM+1
  6791 3204 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
  6792 3207 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
  6793 320A 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
  6794
  6795 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 79
  6796
  6797 320D E8				inx
  6798 320E AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
  6799 3213 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
  6800 3218 20 80 21			jsr CRT_WRITELN
  6801
  6802 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 80
  6803
  6804 321B 20 2E 21			jsr WAITFORKEY
  6805
  6806 				; optimize OK (sprites.pas), line = 81
  6807
  6808 321E A9 01			lda #$01
  6809 3220 8D 51 B9			sta RESULT
  6810 3223 4C 7B 32			jmp @exit
  6811 3226			l_121A
  6812 3226			l_11F6
  6813 3226			l_11DC
  6814
  6815 				; optimize OK (sprites.pas), line = 88
  6816
  6817 3226 AC 1A E4			ldy CURRENTPLAYER
  6818 3229 AD 54 B9			lda PRISONTIME
  6819 322C 99 74 E0			sta adr.PLPRISON,y
  6820
  6821 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', sprites.pas), line = 89
  6822
  6823 322F E8				inx
  6824 3230 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
  6825 3235 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
  6826 323A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6827
  6828 				; optimize OK (sprites.pas), line = 90
  6829
  6830 323D A0 00			ldy #$00
  6831 323F AD 54 B9			lda PRISONTIME
  6832 3242 10 01			spl
  6833 3244 88				dey
  6834 3245 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
  6835 3248 8C CA AB			sty B_CRT.CRT_WRITE_056E.NUM+1
  6836 324B 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
  6837 324E 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
  6838 3251 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
  6839
  6840 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', sprites.pas), line = 91
  6841
  6842 3254 E8				inx
  6843 3255 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
  6844 325A AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
  6845 325F 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6846
  6847 				; optimize OK (sprites.pas), line = 92
  6848
  6849 3262 AC 1A E4			ldy CURRENTPLAYER
  6850 3265 A9 00			lda #$00
  6851 3267 99 60 E0			sta adr.PLJOB,y
  6852
  6853 				; optimize OK (sprites.pas), line = 93
  6854
  6855 326A B9 80 E0			lda adr.PLNEWPOINTS,y
  6856 326D 38 E9 06			sub #$06
  6857 3270 99 80 E0			sta adr.PLNEWPOINTS,y
  6858
  6859 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 94
  6860
  6861 3273 20 2E 21			jsr WAITFORKEY
  6862
  6863 				; optimize OK (sprites.pas), line = 95
  6864
  6865 3276 A9 01			lda #$01
  6866 3278 8D 51 B9			sta RESULT
  6867 327B			@exit
  6868
  6869 				; ------------------------------------------------------------
  6870
  6871 = B951			RESULT	= DATAORIGIN+$14DC
  6872 = B952			LAWYER	= DATAORIGIN+$14DD
  6873 = B954			PRISONTIME	= DATAORIGIN+$14DF
  6874 = B955			R	= DATAORIGIN+$14E0
  6875 = B956			I	= DATAORIGIN+$14E1
  6876 = B957			J	= DATAORIGIN+$14E2
  6877 = B958			K	= DATAORIGIN+$14E3
  6878 = B959			T	= DATAORIGIN+$14E4
  6879 = B95A			CHANGE	= DATAORIGIN+$14E5
  6880 = B95B			@CASETMP_000A	= DATAORIGIN+$14E6
  6881
  6882 = B952			@VarData	= LAWYER
  6883 = 000A			@VarDataSize	= 10
  6884
  6885 327B 60				rts						; ret
  6886 				.endl
  6887
  6888 327C			.local	GOTCAUGHT					; FUNCTION
  6889
  6890 				; optimize OK (sprites.pas), line = 108
  6891
  6892 327C A9 1A			lda #$1A
  6893 327E 20 B3 26			jsr LOADLOCATION
  6894
  6895 				; optimize FAIL ('ENABLECONSOLE', sprites.pas), line = 109
  6896
  6897 3281 20 97 25			jsr ENABLECONSOLE
  6898
  6899 				; optimize FAIL ('SHOWLOCATIONHEADER', sprites.pas), line = 111
  6900
  6901 3284 20 1D 26			jsr SHOWLOCATIONHEADER
  6902
  6903 				; optimize FAIL (1, sprites.pas), line = 114
  6904
  6905 3287 E8				inx
  6906 3288 AC 1A E4			ldy CURRENTPLAYER
  6907 328B B9 5C E0			lda adr.PLBRIBE,y
  6908 328E 95 94			sta :STACKORIGIN,x
  6909 3290 E8				inx
  6910 3291 A0 01			ldy #1
  6911 3293 B5 93			lda :STACKORIGIN-1,x
  6912 3295 D0 01			bne @+
  6913 3297 88				dey
  6914 				@
  6915 3298 CA				dex
  6916 3299 94 94			sty :STACKORIGIN,x
  6917 329B A9 02			lda #$02
  6918 329D 20 CB 15			jsr SYSTEM.RANDOM_02E9
  6919 32A0 CA				dex
  6920 32A1 A0 01			ldy #1
  6921 32A3 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  6922 32A6 C9 01			cmp #$01
  6923 32A8 F0 01			beq @+
  6924 32AA 88				dey
  6925 				@
  6926 32AB 98				tya
  6927 32AC 35 95			and :STACKORIGIN+1,x
  6928 32AE F0 27			jeq l_12EA
  6929
  6930 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 116
  6931
  6932 32B0 E8				inx
  6933 32B1 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
  6934 32B6 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
  6935 32BB 20 80 21			jsr CRT_WRITELN
  6936
  6937 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 117
  6938
  6939 32BE E8				inx
  6940 32BF AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
  6941 32C4 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
  6942 32C9 20 80 21			jsr CRT_WRITELN
  6943
  6944 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 118
  6945
  6946 32CC 20 2E 21			jsr WAITFORKEY
  6947
  6948 				; optimize OK (sprites.pas), line = 119
  6949
  6950 32CF A9 00			lda #$00
  6951 32D1 8D 5C B9			sta RESULT
  6952 32D4 4C B8 34			jmp @exit
  6953 32D7			l_12EA
  6954
  6955 				; optimize FAIL ('CRT_WRITELN2', sprites.pas), line = 123
  6956
  6957 32D7 E8				inx
  6958 32D8 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
  6959 32DD AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
  6960 32E2 20 4C 21			jsr CRT_WRITELN2
  6961
  6962 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 124
  6963
  6964 32E5 E8				inx
  6965 32E6 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
  6966 32EB AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
  6967 32F0 20 80 21			jsr CRT_WRITELN
  6968
  6969 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 125
  6970
  6971 32F3 E8				inx
  6972 32F4 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
  6973 32F9 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
  6974 32FE 20 80 21			jsr CRT_WRITELN
  6975
  6976 				; optimize FAIL ('CRT_WRITELN2', sprites.pas), line = 126
  6977
  6978 3301 E8				inx
  6979 3302 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
  6980 3307 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
  6981 330C 20 4C 21			jsr CRT_WRITELN2
  6982
  6983 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', sprites.pas), line = 128
  6984
  6985 330F E8				inx
  6986 3310 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
  6987 3315 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
  6988 331A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  6989
  6990 				; optimize OK (sprites.pas), line = 129
  6991
  6992 331D A9 01			lda #$01
  6993 331F 8D 9B B7			sta READVALUENOZERO.MINVALUE
  6994 3322 A9 00			lda #$00
  6995 3324 8D 9C B7			sta READVALUENOZERO.MINVALUE+1
  6996 3327 A9 03			lda #$03
  6997 3329 8D 9D B7			sta READVALUENOZERO.MAXVALUE
  6998 332C A9 00			lda #$00
  6999 332E 8D 9E B7			sta READVALUENOZERO.MAXVALUE+1
  7000 3331 20 E7 22			jsr READVALUENOZERO
  7001 3334 AD 9F B7			lda READVALUENOZERO.RESULT
  7002 3337 8D 5D B9			sta A
  7003
  7004 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', sprites.pas), line = 130
  7005
  7006 333A 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  7007
  7008 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', sprites.pas), line = 131
  7009
  7010 333D 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  7011
  7012 				; optimize OK (sprites.pas), line = 132
  7013
  7014 3340 AD 5D B9			lda A
  7015 3343 C9 01			cmp #$01
  7016 3345 F0 03 4C 20 34		jne l_1321
  7017
  7018 				; optimize OK (sprites.pas), line = 134
  7019
  7020 334A AC 1A E4			ldy CURRENTPLAYER
  7021 334D B9 78 E0			lda adr.PLRANK,y
  7022 3350 85 84			sta :eax
  7023 3352 A9 00			lda #$00
  7024 3354 85 85			sta :eax+1
  7025 3356 A9 F4			lda #$F4
  7026 3358 85 8C			sta :ecx
  7027 335A A9 01			lda #$01
  7028 335C 85 8D			sta :ecx+1
  7029 					.ifdef fmulinit
  7030 					fmulu_16
  7031 					els
  7032 335E 20 63 12			imulCX_AL
  7033 					eif
  7034 3361 A9 F4			lda #$F4
  7035 3363 18 65 84			add :eax
  7036 3366 8D 5F B9			sta PRICE
  7037 3369 A9 01			lda #$01
  7038 336B 65 85			adc :eax+1
  7039 336D 8D 60 B9			sta PRICE+1
  7040
  7041 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', sprites.pas), line = 135
  7042
  7043 3370 E8				inx
  7044 3371 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
  7045 3376 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
  7046 337B 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  7047
  7048 				; optimize OK (sprites.pas), line = 136
  7049
  7050 337E AD 5F B9			lda PRICE
  7051 3381 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
  7052 3384 AD 60 B9			lda PRICE+1
  7053 3387 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
  7054 338A 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
  7055
  7056 				; optimize FAIL ('CRT_WRITELN2', sprites.pas), line = 137
  7057
  7058 338D E8				inx
  7059 338E AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
  7060 3393 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
  7061 3398 20 4C 21			jsr CRT_WRITELN2
  7062
  7063 				; optimize FAIL ('GETYESNO', sprites.pas), line = 138
  7064
  7065 339B 20 DA 21			jsr GETYESNO
  7066 339E AD 90 B6			lda GETYESNO.RESULT
  7067 33A1 8D 5E B9			sta R
  7068
  7069 				; optimize OK (sprites.pas), line = 139
  7070
  7071 33A4 C9 01			cmp #$01
  7072 33A6 D0 63			jne l_1352
  7073
  7074 				; optimize OK (sprites.pas), line = 141
  7075
  7076 33A8 AD 5F B9			lda PRICE
  7077 33AB 8D 40 B9			sta PAYMONEY.PRICE
  7078 33AE AD 60 B9			lda PRICE+1
  7079 33B1 8D 41 B9			sta PAYMONEY.PRICE+1
  7080 33B4 20 98 2D			jsr PAYMONEY
  7081 33B7 AD 42 B9			lda PAYMONEY.RESULT
  7082 33BA D0 0C			jne l_1365
  7083
  7084 				; optimize FAIL ('GOTOCOURT', sprites.pas), line = 144
  7085
  7086 33BC 20 71 30			jsr GOTOCOURT
  7087 33BF AD 51 B9			lda GOTOCOURT.RESULT
  7088 33C2 8D 5C B9			sta RESULT
  7089 33C5 4C B8 34			jmp @exit
  7090 33C8			l_1365
  7091
  7092 				; optimize OK (sprites.pas), line = 149
  7093
  7094 33C8 A9 05			lda #$05
  7095 33CA 20 CB 15			jsr SYSTEM.RANDOM_02E9
  7096 33CD AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  7097 33D0 D0 1D			jne l_1384
  7098
  7099 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 151
  7100
  7101 33D2 E8				inx
  7102 33D3 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
  7103 33D8 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
  7104 33DD 20 80 21			jsr CRT_WRITELN
  7105
  7106 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 152
  7107
  7108 33E0 20 2E 21			jsr WAITFORKEY
  7109
  7110 				; optimize FAIL ('GOTOCOURT', sprites.pas), line = 153
  7111
  7112 33E3 20 71 30			jsr GOTOCOURT
  7113 33E6 AD 51 B9			lda GOTOCOURT.RESULT
  7114 33E9 8D 5C B9			sta RESULT
  7115 33EC 4C B8 34			jmp @exit
  7116 33EF			l_1384
  7117
  7118 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 158
  7119
  7120 33EF E8				inx
  7121 33F0 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
  7122 33F5 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
  7123 33FA 20 80 21			jsr CRT_WRITELN
  7124
  7125 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 159
  7126
  7127 33FD 20 2E 21			jsr WAITFORKEY
  7128
  7129 				; optimize OK (sprites.pas), line = 160
  7130
  7131 3400 A9 00			lda #$00
  7132 3402 8D 5C B9			sta RESULT
  7133 3405 4C B8 34			jmp @exit
  7134 3408			l_1373
  7135 3408 4C 20 34			jmp l_13A0
  7136 340B			l_1352
  7137
  7138 				; optimize OK (sprites.pas), line = 166
  7139
  7140 340B AC 1A E4			ldy CURRENTPLAYER
  7141 340E B9 80 E0			lda adr.PLNEWPOINTS,y
  7142 3411 18 69 02			add #$02
  7143 3414 99 80 E0			sta adr.PLNEWPOINTS,y
  7144
  7145 				; optimize FAIL ('GOTOCOURT', sprites.pas), line = 168
  7146
  7147 3417 20 71 30			jsr GOTOCOURT
  7148 341A AD 51 B9			lda GOTOCOURT.RESULT
  7149 341D 8D 5C B9			sta RESULT
  7150 3420			l_13A0
  7151 3420			l_1321
  7152
  7153 				; optimize OK (sprites.pas), line = 172
  7154
  7155 3420 AD 5D B9			lda A
  7156 3423 C9 02			cmp #$02
  7157 3425 F0 03 4C A8 34		jne l_13C8
  7158
  7159 				; optimize OK (sprites.pas), line = 175
  7160
  7161 342A A9 50			lda #$50
  7162 342C 20 CB 15			jsr SYSTEM.RANDOM_02E9
  7163 342F E8				inx
  7164 3430 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
  7165 3435 E8				inx
  7166 3436 AC 1A E4			ldy CURRENTPLAYER
  7167 3439 B9 2C E0			lda adr.PLCAR,y
  7168 343C A8				tay
  7169 343D B9 0C E7			lda adr.CARRANGE,y
  7170 3440 A0 01			ldy #1
  7171 3442 D5 93			cmp :STACKORIGIN-1,x
  7172 3444 90 01			bcc @+
  7173 3446 88				dey
  7174 				@
  7175 3447 CA				dex
  7176 3448 CA				dex
  7177 3449 98				tya
  7178 344A F0 37			jeq l_13E2
  7179
  7180 				; optimize OK (sprites.pas), line = 177
  7181
  7182 344C AC 1A E4			ldy CURRENTPLAYER
  7183 344F B9 80 E0			lda adr.PLNEWPOINTS,y
  7184 3452 38 E9 05			sub #$05
  7185 3455 99 80 E0			sta adr.PLNEWPOINTS,y
  7186
  7187 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 179
  7188
  7189 3458 E8				inx
  7190 3459 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
  7191 345E AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
  7192 3463 20 80 21			jsr CRT_WRITELN
  7193
  7194 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 180
  7195
  7196 3466 E8				inx
  7197 3467 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
  7198 346C AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
  7199 3471 20 80 21			jsr CRT_WRITELN
  7200
  7201 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 181
  7202
  7203 3474 20 2E 21			jsr WAITFORKEY
  7204
  7205 				; optimize FAIL ('GOTOCOURT', sprites.pas), line = 182
  7206
  7207 3477 20 71 30			jsr GOTOCOURT
  7208 347A AD 51 B9			lda GOTOCOURT.RESULT
  7209 347D 8D 5C B9			sta RESULT
  7210 3480 4C B8 34			jmp @exit
  7211 3483			l_13E2
  7212
  7213 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 185
  7214
  7215 3483 E8				inx
  7216 3484 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
  7217 3489 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
  7218 348E 20 80 21			jsr CRT_WRITELN
  7219
  7220 				; optimize OK (sprites.pas), line = 186
  7221
  7222 3491 AC 1A E4			ldy CURRENTPLAYER
  7223 3494 B9 80 E0			lda adr.PLNEWPOINTS,y
  7224 3497 18 69 02			add #$02
  7225 349A 99 80 E0			sta adr.PLNEWPOINTS,y
  7226
  7227 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 188
  7228
  7229 349D 20 2E 21			jsr WAITFORKEY
  7230
  7231 				; optimize OK (sprites.pas), line = 189
  7232
  7233 34A0 A9 00			lda #$00
  7234 34A2 8D 5C B9			sta RESULT
  7235 34A5 4C B8 34			jmp @exit
  7236 34A8			l_13C8
  7237
  7238 				; optimize OK (sprites.pas), line = 193
  7239
  7240 34A8 AD 5D B9			lda A
  7241 34AB C9 03			cmp #$03
  7242 34AD D0 09			jne l_142C
  7243
  7244 				; optimize FAIL ('GOTOCOURT', sprites.pas), line = 194
  7245
  7246 34AF 20 71 30			jsr GOTOCOURT
  7247 34B2 AD 51 B9			lda GOTOCOURT.RESULT
  7248 34B5 8D 5C B9			sta RESULT
  7249 34B8			l_142C
  7250 34B8			@exit
  7251
  7252 				; ------------------------------------------------------------
  7253
  7254 = B95C			RESULT	= DATAORIGIN+$14E7
  7255 = B95D			A	= DATAORIGIN+$14E8
  7256 = B95E			R	= DATAORIGIN+$14E9
  7257 = B95F			PRICE	= DATAORIGIN+$14EA
  7258
  7259 = B95D			@VarData	= A
  7260 = 0004			@VarDataSize	= 4
  7261
  7262 34B8 60				rts						; ret
  7263 				.endl
  7264
  7265 34B9			.local	ROADBLOCK					; FUNCTION
  7266
  7267 				; optimize OK (sprites.pas), line = 200
  7268
  7269 34B9 A9 00			lda #$00
  7270 34BB 8D 61 B9			sta RESULT
  7271
  7272 				; optimize OK (sprites.pas), line = 202
  7273
  7274 34BE AC 1A E4			ldy CURRENTPLAYER
  7275 34C1 B9 78 E0			lda adr.PLRANK,y
  7276 34C4 C9 04			cmp #$04
  7277 34C6 B0 03			jcs l_1450
  7278 34C8 4C 87 35			jmp @exit
  7279 34CB			l_1450
  7280
  7281 				; optimize OK (sprites.pas), line = 203
  7282
  7283 34CB A9 C0			lda #$C0
  7284 34CD 20 CB 15			jsr SYSTEM.RANDOM_02E9
  7285 34D0 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  7286 34D3 F0 03			jeq l_1464
  7287 34D5 4C 87 35			jmp @exit
  7288 34D8			l_1464
  7289
  7290 				; optimize OK (sprites.pas), line = 205
  7291
  7292 34D8 A9 1B			lda #$1B
  7293 34DA 20 B3 26			jsr LOADLOCATION
  7294
  7295 				; optimize FAIL ('ENABLECONSOLE', sprites.pas), line = 206
  7296
  7297 34DD 20 97 25			jsr ENABLECONSOLE
  7298
  7299 				; optimize FAIL ('SHOWLOCATIONHEADER', sprites.pas), line = 207
  7300
  7301 34E0 20 1D 26			jsr SHOWLOCATIONHEADER
  7302
  7303 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 209
  7304
  7305 34E3 E8				inx
  7306 34E4 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
  7307 34E9 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
  7308 34EE 20 80 21			jsr CRT_WRITELN
  7309
  7310 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', sprites.pas), line = 210
  7311
  7312 34F1 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
  7313
  7314 				; optimize OK (sprites.pas), line = 211
  7315
  7316 34F4 A9 B4			lda #$B4
  7317 34F6 20 60 25			jsr WAITFRAMES
  7318
  7319 				; optimize OK (sprites.pas), line = 212
  7320
  7321 34F9 A9 00			lda #$00
  7322 34FB 8D 61 B9			sta RESULT
  7323
  7324 				; optimize OK (sprites.pas), line = 213
  7325
  7326 34FE A9 02			lda #$02
  7327 3500 20 CB 15			jsr SYSTEM.RANDOM_02E9
  7328 3503 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  7329 3506 D0 69			jne l_1486
  7330
  7331 				; optimize OK (sprites.pas), line = 215
  7332
  7333 3508 A9 01			lda #$01
  7334 350A 8D 61 B9			sta RESULT
  7335
  7336 				; optimize OK (sprites.pas), line = 216
  7337
  7338 350D AC 1A E4			ldy CURRENTPLAYER
  7339 3510 B9 20 E0			lda adr.PLFAKEMONEY,y
  7340 3513 F0 11			jeq l_14A0
  7341
  7342 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 217
  7343
  7344 3515 E8				inx
  7345 3516 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
  7346 351B AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
  7347 3520 20 80 21			jsr CRT_WRITELN
  7348 3523 4C 71 35			jmp l_14AD
  7349 3526			l_14A0
  7350
  7351 				; optimize OK (sprites.pas), line = 218
  7352
  7353 3526 AC 1A E4			ldy CURRENTPLAYER
  7354 3529 B9 24 E0			lda adr.PLALCOHOL,y
  7355 352C F0 27			jeq l_14C2
  7356
  7357 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 220
  7358
  7359 352E E8				inx
  7360 352F AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
  7361 3534 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
  7362 3539 20 80 21			jsr CRT_WRITELN
  7363
  7364 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 221
  7365
  7366 353C E8				inx
  7367 353D AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
  7368 3542 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
  7369 3547 20 80 21			jsr CRT_WRITELN
  7370
  7371 				; optimize OK (sprites.pas), line = 222
  7372
  7373 354A AC 1A E4			ldy CURRENTPLAYER
  7374 354D A9 00			lda #$00
  7375 354F 99 24 E0			sta adr.PLALCOHOL,y
  7376 3552 4C 71 35			jmp l_14D9
  7377 3555			l_14C2
  7378
  7379 				; optimize OK (sprites.pas), line = 224
  7380
  7381 3555 AC 1A E4			ldy CURRENTPLAYER
  7382 3558 B9 28 E0			lda adr.PLFORGEDID,y
  7383 355B D0 11			jne l_14EE
  7384
  7385 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 225
  7386
  7387 355D E8				inx
  7388 355E AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
  7389 3563 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
  7390 3568 20 80 21			jsr CRT_WRITELN
  7391 356B 4C 71 35			jmp l_14FB
  7392 356E			l_14EE
  7393
  7394 				; optimize OK (sprites.pas), line = 227
  7395
  7396 356E 8D 61 B9			sta RESULT
  7397 3571			l_14FB
  7398 3571			l_14D9
  7399 3571			l_14AD
  7400 3571			l_1486
  7401
  7402 				; optimize OK (sprites.pas), line = 230
  7403
  7404 3571 AD 61 B9			lda RESULT
  7405 3574 D0 0E			jne l_1513
  7406
  7407 				; optimize FAIL ('CRT_WRITELN', sprites.pas), line = 231
  7408
  7409 3576 E8				inx
  7410 3577 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
  7411 357C AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
  7412 3581 20 80 21			jsr CRT_WRITELN
  7413 3584			l_1513
  7414
  7415 				; optimize FAIL ('WAITFORKEY', sprites.pas), line = 232
  7416
  7417 3584 20 2E 21			jsr WAITFORKEY
  7418 3587			@exit
  7419
  7420 				; ------------------------------------------------------------
  7421
  7422 = B961			RESULT	= DATAORIGIN+$14EC
  7423 3587 60				rts						; ret
  7424 				.endl
  7425
  7426 3588			.local	PAINTPLAYER					; PROCEDURE
  7427 3588 8D 62 B9			sta CLEAR
  7428
  7429 				; optimize OK (sprites.pas), line = 245
  7430
  7431 358B A9 00			lda #$00
  7432 358D 8D 64 B9			sta PLAYEROFS
  7433
  7434 				; optimize OK (sprites.pas), line = 246
  7435
  7436 3590 AD 1A E4			lda CURRENTPLAYER
  7437 3593 85 9D			sta :STACKORIGIN+9
  7438 3595 A9 00			lda #$00
  7439 3597 06 9D			asl :STACKORIGIN+9
  7440 3599 2A				rol @
  7441 359A 06 9D			asl :STACKORIGIN+9
  7442 359C 2A				rol @
  7443 359D 06 9D			asl :STACKORIGIN+9
  7444 359F 2A				rol @
  7445 35A0 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  7446 35A2 A5 9D			lda :STACKORIGIN+9
  7447 35A4 18 69 00			add #$00
  7448 35A7 A8				tay
  7449 35A8 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  7450 35AA 69 00			adc #$00
  7451 35AC 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  7452 35AE B9 F8 E3			lda adr.GANGSTERSEX,y
  7453 35B1 C9 01			cmp #$01
  7454 35B3 D0 05			jne l_153B
  7455 35B5 A9 30			lda #$30
  7456 35B7 8D 64 B9			sta PLAYEROFS
  7457 35BA			l_153B
  7458
  7459 				; optimize OK (sprites.pas), line = 247
  7460
  7461 35BA A9 0C			lda #$0C
  7462 35BC 8D 63 B9			sta PLAYERHEIGHT
  7463
  7464 				; optimize OK (sprites.pas), line = 249
  7465
  7466 35BF AD B9 EA			lda PLAYERPOS_Y
  7467 35C2 85 8C			sta SYSTEM.MOVE_02BE.DEST
  7468 35C4 A9 DC			lda #$DC
  7469 35C6 85 8D			sta SYSTEM.MOVE_02BE.DEST+1
  7470 35C8 AD 64 B9			lda PLAYEROFS
  7471 35CB 85 88			sta SYSTEM.MOVE_02BE.SOURCE
  7472 35CD A9 D8			lda #$D8
  7473 35CF 85 89			sta SYSTEM.MOVE_02BE.SOURCE+1
  7474 35D1 AD 63 B9			lda PLAYERHEIGHT
  7475 35D4 85 84			sta SYSTEM.MOVE_02BE.COUNT
  7476 35D6 A9 00			lda #$00
  7477 35D8 85 85			sta SYSTEM.MOVE_02BE.COUNT+1
  7478 35DA				.LOCAL +MAIN.SYSTEM.MOVE_02BE
  7479 35DA				m@INLINE
Macro: MAIN.SYSTEM.MOVE_02BE.M@INLINE [Source: main.a65]
     4 35DA 20 35 10			jsr @move
Source: main.a65
  7480 					.ENDL
  7481
  7482 				; optimize OK (sprites.pas), line = 250
  7483
  7484 35DD AD B9 EA			lda PLAYERPOS_Y
  7485 35E0 85 8C			sta SYSTEM.MOVE_02BE.DEST
  7486 35E2 A9 DD			lda #$DD
  7487 35E4 85 8D			sta SYSTEM.MOVE_02BE.DEST+1
  7488 35E6 AD 63 B9			lda PLAYERHEIGHT
  7489 35E9 18 6D 64 B9			add PLAYEROFS
  7490 35ED 85 88			sta SYSTEM.MOVE_02BE.SOURCE
  7491 35EF A9 D8			lda #$D8
  7492 35F1 69 00			adc #$00
  7493 35F3 85 89			sta SYSTEM.MOVE_02BE.SOURCE+1
  7494 35F5 AD 63 B9			lda PLAYERHEIGHT
  7495 35F8 85 84			sta SYSTEM.MOVE_02BE.COUNT
  7496 35FA A9 00			lda #$00
  7497 35FC 85 85			sta SYSTEM.MOVE_02BE.COUNT+1
  7498 35FE				.LOCAL +MAIN.SYSTEM.MOVE_02BE
  7499 35FE				m@INLINE
Macro: MAIN.SYSTEM.MOVE_02BE.M@INLINE [Source: main.a65]
     4 35FE 20 35 10			jsr @move
Source: main.a65
  7500 					.ENDL
  7501
  7502 				; optimize OK (sprites.pas), line = 251
  7503
  7504 3601 AD B9 EA			lda PLAYERPOS_Y
  7505 3604 85 8C			sta SYSTEM.MOVE_02BE.DEST
  7506 3606 A9 DE			lda #$DE
  7507 3608 85 8D			sta SYSTEM.MOVE_02BE.DEST+1
  7508 360A A9 00			lda #$00
  7509 360C 85 B0			sta :STACKORIGIN+STACKWIDTH+12
  7510 360E AD 63 B9			lda PLAYERHEIGHT
  7511 3611 0A				asl @
  7512 3612 26 B0			rol :STACKORIGIN+STACKWIDTH+12
  7513 3614 18 6D 64 B9			add PLAYEROFS
  7514 3618 85 88			sta SYSTEM.MOVE_02BE.SOURCE
  7515 361A A9 D8			lda #$D8
  7516 361C 65 B0			adc :STACKORIGIN+STACKWIDTH+12
  7517 361E 85 89			sta SYSTEM.MOVE_02BE.SOURCE+1
  7518 3620 AD 63 B9			lda PLAYERHEIGHT
  7519 3623 85 84			sta SYSTEM.MOVE_02BE.COUNT
  7520 3625 A9 00			lda #$00
  7521 3627 85 85			sta SYSTEM.MOVE_02BE.COUNT+1
  7522 3629				.LOCAL +MAIN.SYSTEM.MOVE_02BE
  7523 3629				m@INLINE
Macro: MAIN.SYSTEM.MOVE_02BE.M@INLINE [Source: main.a65]
     4 3629 20 35 10			jsr @move
Source: main.a65
  7524 					.ENDL
  7525
  7526 				; optimize OK (sprites.pas), line = 252
  7527
  7528 362C AD B9 EA			lda PLAYERPOS_Y
  7529 362F 85 8C			sta SYSTEM.MOVE_02BE.DEST
  7530 3631 A9 DF			lda #$DF
  7531 3633 85 8D			sta SYSTEM.MOVE_02BE.DEST+1
  7532 3635 A9 00			lda #$00
  7533 3637 85 B0			sta :STACKORIGIN+STACKWIDTH+12
  7534 3639 AD 63 B9			lda PLAYERHEIGHT
  7535 363C 0A				asl @
  7536 363D 26 B0			rol :STACKORIGIN+STACKWIDTH+12
  7537 363F 18 6D 63 B9			add PLAYERHEIGHT
  7538 3643 85 A0			sta :STACKORIGIN+12
  7539 3645 A5 B0			lda :STACKORIGIN+STACKWIDTH+12
  7540 3647 69 00			adc #$00
  7541 3649 85 B0			sta :STACKORIGIN+STACKWIDTH+12
  7542 364B AD 64 B9			lda PLAYEROFS
  7543 364E 18 65 A0			add :STACKORIGIN+12
  7544 3651 85 88			sta SYSTEM.MOVE_02BE.SOURCE
  7545 3653 A9 D8			lda #$D8
  7546 3655 65 B0			adc :STACKORIGIN+STACKWIDTH+12
  7547 3657 85 89			sta SYSTEM.MOVE_02BE.SOURCE+1
  7548 3659 AD 63 B9			lda PLAYERHEIGHT
  7549 365C 85 84			sta SYSTEM.MOVE_02BE.COUNT
  7550 365E A9 00			lda #$00
  7551 3660 85 85			sta SYSTEM.MOVE_02BE.COUNT+1
  7552 3662				.LOCAL +MAIN.SYSTEM.MOVE_02BE
  7553 3662				m@INLINE
Macro: MAIN.SYSTEM.MOVE_02BE.M@INLINE [Source: main.a65]
     4 3662 20 35 10			jsr @move
Source: main.a65
  7554 					.ENDL
  7555
  7556 				; optimize OK (sprites.pas), line = 253
  7557
  7558 3665 AD 62 B9			lda CLEAR
  7559 3668 C9 01			cmp #$01
  7560 366A F0 03 4C 11 37		jne l_15CA
  7561
  7562 				; optimize OK (sprites.pas), line = 255
  7563
  7564 366F AC B9 EA			ldy PLAYERPOS_Y
  7565 3672 88				dey
  7566 3673 8C 64 B9			sty PLAYEROFS
  7567
  7568 				; optimize OK (sprites.pas), line = 256
  7569
  7570 3676 AD 64 B9			lda PLAYEROFS
  7571 3679 85 82			sta :bp2
  7572 367B A9 DC			lda #$DC
  7573 367D 85 83			sta :bp2+1
  7574 367F A9 00			lda #$00
  7575 3681 A0 00			ldy #$00
  7576 3683 91 82 88 10 FB		sta:rpl (:bp2),y-
  7577
  7578 				; optimize OK (sprites.pas), line = 257
  7579
  7580 3688 AD 64 B9			lda PLAYEROFS
  7581 368B 85 82			sta :bp2
  7582 368D A9 DD			lda #$DD
  7583 368F 85 83			sta :bp2+1
  7584 3691 A9 00			lda #$00
  7585 3693 A0 00			ldy #$00
  7586 3695 91 82 88 10 FB		sta:rpl (:bp2),y-
  7587
  7588 				; optimize OK (sprites.pas), line = 258
  7589
  7590 369A AD 64 B9			lda PLAYEROFS
  7591 369D 85 82			sta :bp2
  7592 369F A9 DE			lda #$DE
  7593 36A1 85 83			sta :bp2+1
  7594 36A3 A9 00			lda #$00
  7595 36A5 A0 00			ldy #$00
  7596 36A7 91 82 88 10 FB		sta:rpl (:bp2),y-
  7597
  7598 				; optimize OK (sprites.pas), line = 259
  7599
  7600 36AC AD 64 B9			lda PLAYEROFS
  7601 36AF 85 82			sta :bp2
  7602 36B1 A9 DF			lda #$DF
  7603 36B3 85 83			sta :bp2+1
  7604 36B5 A9 00			lda #$00
  7605 36B7 A0 00			ldy #$00
  7606 36B9 91 82 88 10 FB		sta:rpl (:bp2),y-
  7607
  7608 				; optimize OK (sprites.pas), line = 261
  7609
  7610 36BE AD B9 EA			lda PLAYERPOS_Y
  7611 36C1 18 6D 63 B9			add PLAYERHEIGHT
  7612 36C5 8D 64 B9			sta PLAYEROFS
  7613
  7614 				; optimize OK (sprites.pas), line = 262
  7615
  7616 36C8 85 88			sta SYSTEM.FILLCHAR_02BB.A
  7617 36CA A9 DC			lda #$DC
  7618 36CC 85 89			sta SYSTEM.FILLCHAR_02BB.A+1
  7619 36CE A9 01			lda #$01
  7620 36D0 85 8C			sta SYSTEM.FILLCHAR_02BB.COUNT
  7621 36D2 A9 00			lda #$00
  7622 36D4 85 8D			sta SYSTEM.FILLCHAR_02BB.COUNT+1
  7623 36D6 85 84			sta SYSTEM.FILLCHAR_02BB.VALUE
  7624 36D8				.LOCAL +MAIN.SYSTEM.FILLCHAR_02BB
  7625 36D8				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_02BB.M@INLINE [Source: main.a65]
     4 36D8 20 8A 10			jsr @fill
Source: main.a65
  7626 					.ENDL
  7627
  7628 				; optimize OK (sprites.pas), line = 263
  7629
  7630 36DB AD 64 B9			lda PLAYEROFS
  7631 36DE 85 82			sta :bp2
  7632 36E0 A9 DD			lda #$DD
  7633 36E2 85 83			sta :bp2+1
  7634 36E4 A9 00			lda #$00
  7635 36E6 A0 00			ldy #$00
  7636 36E8 91 82 88 10 FB		sta:rpl (:bp2),y-
  7637
  7638 				; optimize OK (sprites.pas), line = 264
  7639
  7640 36ED AD 64 B9			lda PLAYEROFS
  7641 36F0 85 82			sta :bp2
  7642 36F2 A9 DE			lda #$DE
  7643 36F4 85 83			sta :bp2+1
  7644 36F6 A9 00			lda #$00
  7645 36F8 A0 00			ldy #$00
  7646 36FA 91 82 88 10 FB		sta:rpl (:bp2),y-
  7647
  7648 				; optimize OK (sprites.pas), line = 265
  7649
  7650 36FF AD 64 B9			lda PLAYEROFS
  7651 3702 85 82			sta :bp2
  7652 3704 A9 DF			lda #$DF
  7653 3706 85 83			sta :bp2+1
  7654 3708 A9 00			lda #$00
  7655 370A A0 00			ldy #$00
  7656 370C 91 82 88 10 FB		sta:rpl (:bp2),y-
  7657 3711			l_15CA
  7658
  7659 				; ------------------------------------------------------------
  7660
  7661 = B962			CLEAR	= DATAORIGIN+$14ED
  7662 = B963			PLAYERHEIGHT	= DATAORIGIN+$14EE
  7663 = B964			PLAYEROFS	= DATAORIGIN+$14EF
  7664
  7665 = B962			@VarData	= CLEAR
  7666 = 0003			@VarDataSize	= 3
  7667
  7668 3711			@exit
  7669 					.ifdef @new
  7670 					lda <@VarData
  7671 					sta :ztmp
  7672 					lda >@VarData
  7673 					ldy #@VarDataSize-1
  7674 					jmp @FreeMem
  7675 					els
  7676 3711 60				rts						; ret
  7677 					eif
  7678 				.endl
  7679
  7680 3712			.local	MOVECURRENTPLAYER				; FUNCTION
  7681 3712 8D 65 B9			sta CH
  7682
  7683 				; optimize OK (sprites.pas), line = 281
  7684
  7685 3715 A9 10			lda #$10
  7686 3717 8D 66 B9			sta RESULT
  7687
  7688 				; optimize OK (sprites.pas), line = 283
  7689
  7690 371A A9 00			lda #$00
  7691 371C 8D 68 B9			sta DIR_X
  7692
  7693 				; optimize OK (sprites.pas), line = 284
  7694
  7695 371F 8D 69 B9			sta DIR_Y
  7696
  7697 				; optimize OK (sprites.pas), line = 285
  7698
  7699 3722 AD 65 B9			lda CH
  7700 3725 8D 6E B9			sta @CASETMP_000B
  7701 3728 C9 02			cmp #$02
  7702 372A D0 08			jne l_166E
  7703 				@
  7704
  7705 				; optimize OK (sprites.pas), line = 286
  7706
  7707 372C A9 FF			lda #$FF
  7708 372E 8D 68 B9			sta DIR_X
  7709 3731 4C 60 37			jmp a_000B
  7710 3734			l_166E
  7711 3734 C9 73			cmp #$73
  7712 3736 D0 08			jne l_167B
  7713
  7714 				; optimize OK (sprites.pas), line = 287
  7715
  7716 3738 A9 01			lda #$01
  7717 373A 8D 68 B9			sta DIR_X
  7718 373D 4C 60 37			jmp a_000B
  7719 3740			l_167B
  7720 3740 C9 60			cmp #$60
  7721 3742 D0 08			jne l_1688
  7722
  7723 				; optimize OK (sprites.pas), line = 288
  7724
  7725 3744 A9 FF			lda #$FF
  7726 3746 8D 69 B9			sta DIR_Y
  7727 3749 4C 60 37			jmp a_000B
  7728 374C			l_1688
  7729 374C C9 26			cmp #$26
  7730 374E D0 08			jne l_1695
  7731
  7732 				; optimize OK (sprites.pas), line = 289
  7733
  7734 3750 A9 01			lda #$01
  7735 3752 8D 69 B9			sta DIR_Y
  7736 3755 4C 60 37			jmp a_000B
  7737 3758			l_1695
  7738
  7739 				; optimize OK (sprites.pas), line = 292
  7740
  7741 3758 A9 01			lda #$01
  7742 375A 20 60 25			jsr WAITFRAMES
  7743 375D 4C B3 39			jmp @exit
  7744 3760			a_000B
  7745
  7746 				; optimize OK (sprites.pas), line = 299
  7747
  7748 3760 A9 00			lda #$00
  7749 3762 8D 6B B9			sta LEAVEMAP
  7750
  7751 				; optimize OK (sprites.pas), line = 300
  7752
  7753 3765 AD BA EA			lda MAPPOS_X
  7754 3768 C9 13			cmp #$13
  7755 376A D0 0C			jne l_16C5
  7756 376C AD 68 B9			lda DIR_X
  7757 376F C9 01			cmp #$01
  7758 3771 D0 05			jne l_16C5
  7759 3773 A9 01			lda #$01
  7760 3775 8D 6B B9			sta LEAVEMAP
  7761 3778			l_16C5
  7762
  7763 				; optimize OK (sprites.pas), line = 301
  7764
  7765 3778 AD BA EA			lda MAPPOS_X
  7766 377B D0 0C			jne l_16EA
  7767 377D AD 68 B9			lda DIR_X
  7768 3780 C9 FF			cmp #$FF
  7769 3782 D0 05			jne l_16EA
  7770 3784 A9 01			lda #$01
  7771 3786 8D 6B B9			sta LEAVEMAP
  7772 3789			l_16EA
  7773
  7774 				; optimize OK (sprites.pas), line = 302
  7775
  7776 3789 AD BB EA			lda MAPPOS_Y
  7777 378C C9 11			cmp #$11
  7778 378E D0 0C			jne l_170F
  7779 3790 AD 69 B9			lda DIR_Y
  7780 3793 C9 01			cmp #$01
  7781 3795 D0 05			jne l_170F
  7782 3797 A9 01			lda #$01
  7783 3799 8D 6B B9			sta LEAVEMAP
  7784 379C			l_170F
  7785
  7786 				; optimize OK (sprites.pas), line = 303
  7787
  7788 379C AD BB EA			lda MAPPOS_Y
  7789 379F D0 0C			jne l_1734
  7790 37A1 AD 69 B9			lda DIR_Y
  7791 37A4 C9 FF			cmp #$FF
  7792 37A6 D0 05			jne l_1734
  7793 37A8 A9 01			lda #$01
  7794 37AA 8D 6B B9			sta LEAVEMAP
  7795 37AD			l_1734
  7796
  7797 				; optimize OK (sprites.pas), line = 304
  7798
  7799 37AD AD 6B B9			lda LEAVEMAP
  7800 37B0 F0 03 4C DC 38		jne l_174D
  7801
  7802 				; optimize OK (sprites.pas), line = 306
  7803
  7804 37B5 AD BB EA			lda MAPPOS_Y
  7805 37B8 18 69 01			add #$01
  7806 37BB 85 9E			sta :STACKORIGIN+10
  7807 37BD A9 00			lda #$00
  7808 37BF 69 00			adc #$00
  7809 37C1 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  7810 37C3 A0 00			ldy #$00
  7811 37C5 AD 69 B9			lda DIR_Y
  7812 37C8 10 01			spl
  7813 37CA 88				dey
  7814 37CB 18 65 9E			add :STACKORIGIN+10
  7815 37CE 85 84			sta :eax
  7816 37D0 98				tya
  7817 37D1 65 AE			adc :STACKORIGIN+STACKWIDTH+10
  7818 37D3 85 85			sta :eax+1
  7819 37D5 A9 28			lda #$28
  7820 37D7 85 8C			sta :ecx
  7821 37D9 A9 00			lda #$00
  7822 37DB 85 8D			sta :ecx+1
  7823 					.ifdef fmulinit
  7824 					fmulu_16
  7825 					els
  7826 37DD 20 23 12			imulCX
  7827 					eif
  7828 37E0 A5 84			lda :eax
  7829 37E2 85 9D			sta :STACKORIGIN+9
  7830 37E4 A9 F8			lda #$F8
  7831 37E6 18 65 85			add :eax+1
  7832 37E9 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  7833 37EB AD BA EA			lda MAPPOS_X
  7834 37EE 85 9E			sta :STACKORIGIN+10
  7835 37F0 A9 00			lda #$00
  7836 37F2 06 9E			asl :STACKORIGIN+10
  7837 37F4 2A				rol @
  7838 37F5 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  7839 37F7 A5 9D			lda :STACKORIGIN+9
  7840 37F9 18 65 9E			add :STACKORIGIN+10
  7841 37FC 85 9D			sta :STACKORIGIN+9
  7842 37FE A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  7843 3800 65 AE			adc :STACKORIGIN+STACKWIDTH+10
  7844 3802 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  7845 3804 A0 00			ldy #$00
  7846 3806 AD 68 B9			lda DIR_X
  7847 3809 10 01			spl
  7848 380B 88				dey
  7849 380C 84 AE			sty :STACKORIGIN+STACKWIDTH+10
  7850 380E 0A				asl @
  7851 380F 26 AE			rol :STACKORIGIN+STACKWIDTH+10
  7852 3811 18 65 9D			add :STACKORIGIN+9
  7853 3814 A8				tay
  7854 3815 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  7855 3817 65 AE			adc :STACKORIGIN+STACKWIDTH+10
  7856 3819 85 81			sta :bp+1
  7857 381B B1 80			lda (:bp),y
  7858 381D 8D 6A B9			sta LENCID
  7859
  7860 				; optimize OK (sprites.pas), line = 309
  7861
  7862 3820 8D 6F B9			sta @CASETMP_000C
  7863 3823 C9 41			cmp #$41
  7864 3825 D0 08			jne l_1786
  7865 				@
  7866
  7867 				; optimize OK (sprites.pas), line = 310
  7868
  7869 3827 A9 0D			lda #$0D
  7870 3829 8D 6C B9			sta CURLOC
  7871 382C 4C DC 38			jmp a_000C
  7872 382F			l_1786
  7873 382F C9 42			cmp #$42
  7874 3831 D0 08			jne l_1793
  7875
  7876 				; optimize OK (sprites.pas), line = 311
  7877
  7878 3833 A9 06			lda #$06
  7879 3835 8D 6C B9			sta CURLOC
  7880 3838 4C DC 38			jmp a_000C
  7881 383B			l_1793
  7882 383B C9 43			cmp #$43
  7883 383D D0 08			jne l_17A0
  7884
  7885 				; optimize OK (sprites.pas), line = 312
  7886
  7887 383F A9 02			lda #$02
  7888 3841 8D 6C B9			sta CURLOC
  7889 3844 4C DC 38			jmp a_000C
  7890 3847			l_17A0
  7891 3847 C9 44			cmp #$44
  7892 3849 D0 08			jne l_17AD
  7893
  7894 				; optimize OK (sprites.pas), line = 313
  7895
  7896 384B A9 04			lda #$04
  7897 384D 8D 6C B9			sta CURLOC
  7898 3850 4C DC 38			jmp a_000C
  7899 3853			l_17AD
  7900 3853 C9 45			cmp #$45
  7901 3855 D0 08			jne l_17BA
  7902
  7903 				; optimize OK (sprites.pas), line = 314
  7904
  7905 3857 A9 07			lda #$07
  7906 3859 8D 6C B9			sta CURLOC
  7907 385C 4C DC 38			jmp a_000C
  7908 385F			l_17BA
  7909 385F C9 46			cmp #$46
  7910 3861 D0 08			jne l_17C7
  7911
  7912 				; optimize OK (sprites.pas), line = 315
  7913
  7914 3863 A9 0C			lda #$0C
  7915 3865 8D 6C B9			sta CURLOC
  7916 3868 4C DC 38			jmp a_000C
  7917 386B			l_17C7
  7918 386B C9 47			cmp #$47
  7919 386D D0 08			jne l_17D4
  7920
  7921 				; optimize OK (sprites.pas), line = 316
  7922
  7923 386F A9 01			lda #$01
  7924 3871 8D 6C B9			sta CURLOC
  7925 3874 4C DC 38			jmp a_000C
  7926 3877			l_17D4
  7927 3877 C9 48			cmp #$48
  7928 3879 D0 08			jne l_17E1
  7929
  7930 				; optimize OK (sprites.pas), line = 317
  7931
  7932 387B A9 0B			lda #$0B
  7933 387D 8D 6C B9			sta CURLOC
  7934 3880 4C DC 38			jmp a_000C
  7935 3883			l_17E1
  7936 3883 C9 49			cmp #$49
  7937 3885 D0 08			jne l_17EE
  7938
  7939 				; optimize OK (sprites.pas), line = 318
  7940
  7941 3887 A9 0A			lda #$0A
  7942 3889 8D 6C B9			sta CURLOC
  7943 388C 4C DC 38			jmp a_000C
  7944 388F			l_17EE
  7945 388F C9 4A			cmp #$4A
  7946 3891 D0 08			jne l_17FB
  7947
  7948 				; optimize OK (sprites.pas), line = 319
  7949
  7950 3893 A9 05			lda #$05
  7951 3895 8D 6C B9			sta CURLOC
  7952 3898 4C DC 38			jmp a_000C
  7953 389B			l_17FB
  7954 389B C9 4B			cmp #$4B
  7955 389D D0 08			jne l_1808
  7956
  7957 				; optimize OK (sprites.pas), line = 320
  7958
  7959 389F A9 09			lda #$09
  7960 38A1 8D 6C B9			sta CURLOC
  7961 38A4 4C DC 38			jmp a_000C
  7962 38A7			l_1808
  7963 38A7 C9 4C			cmp #$4C
  7964 38A9 D0 08			jne l_1815
  7965
  7966 				; optimize OK (sprites.pas), line = 321
  7967
  7968 38AB A9 17			lda #$17
  7969 38AD 8D 6C B9			sta CURLOC
  7970 38B0 4C DC 38			jmp a_000C
  7971 38B3			l_1815
  7972 38B3 C9 4D			cmp #$4D
  7973 38B5 D0 08			jne l_1822
  7974
  7975 				; optimize OK (sprites.pas), line = 322
  7976
  7977 38B7 A9 03			lda #$03
  7978 38B9 8D 6C B9			sta CURLOC
  7979 38BC 4C DC 38			jmp a_000C
  7980 38BF			l_1822
  7981 38BF C9 4E			cmp #$4E
  7982 38C1 D0 08			jne l_182F
  7983
  7984 				; optimize OK (sprites.pas), line = 323
  7985
  7986 38C3 A9 18			lda #$18
  7987 38C5 8D 6C B9			sta CURLOC
  7988 38C8 4C DC 38			jmp a_000C
  7989 38CB			l_182F
  7990 38CB C9 2E			cmp #$2E
  7991 38CD D0 08			jne l_183C
  7992
  7993 				; optimize OK (sprites.pas), line = 324
  7994
  7995 38CF A9 10			lda #$10
  7996 38D1 8D 6C B9			sta CURLOC
  7997 38D4 4C DC 38			jmp a_000C
  7998 38D7			l_183C
  7999
  8000 				; optimize OK (sprites.pas), line = 326
  8001
  8002 38D7 A9 0F			lda #$0F
  8003 38D9 8D 6C B9			sta CURLOC
  8004 38DC			a_000C
  8005 38DC			l_174D
  8006
  8007 				; optimize OK (sprites.pas), line = 330
  8008
  8009 38DC AD 6C B9			lda CURLOC
  8010 38DF C9 0F			cmp #$0F
  8011 38E1 D0 08			jne l_186B
  8012
  8013 				; optimize OK (sprites.pas), line = 332
  8014
  8015 38E3 A9 10			lda #$10
  8016 38E5 8D 66 B9			sta RESULT
  8017 38E8 4C B3 39			jmp @exit
  8018 38EB			l_186B
  8019
  8020 				; optimize OK (sprites.pas), line = 336
  8021
  8022 38EB AC 1A E4			ldy CURRENTPLAYER
  8023 38EE B9 30 E0			lda adr.PLSTEPS,y
  8024 38F1 38 E9 01			sub #$01
  8025 38F4 99 30 E0			sta adr.PLSTEPS,y
  8026
  8027 				; optimize OK (sprites.pas), line = 337
  8028
  8029 38F7 AD BA EA			lda MAPPOS_X
  8030 38FA 8D BC EA			sta OLDMAPPOS_X
  8031
  8032 				; optimize OK (sprites.pas), line = 338
  8033
  8034 38FD AD BB EA			lda MAPPOS_Y
  8035 3900 8D BD EA			sta OLDMAPPOS_Y
  8036
  8037 				; optimize OK (sprites.pas), line = 339
  8038
  8039 3903 AD B8 EA			lda PLAYERPOS_X
  8040 3906 8D BE EA			sta OLDPLAYERPOS_X
  8041
  8042 				; optimize OK (sprites.pas), line = 340
  8043
  8044 3909 AD B9 EA			lda PLAYERPOS_Y
  8045 390C 8D BF EA			sta OLDPLAYERPOS_Y
  8046
  8047 				; optimize OK (sprites.pas), line = 341
  8048
  8049 390F AD BA EA			lda MAPPOS_X
  8050 3912 18 6D 68 B9			add DIR_X
  8051 3916 8D BA EA			sta MAPPOS_X
  8052
  8053 				; optimize OK (sprites.pas), line = 342
  8054
  8055 3919 AD BB EA			lda MAPPOS_Y
  8056 391C 18 6D 69 B9			add DIR_Y
  8057 3920 8D BB EA			sta MAPPOS_Y
  8058
  8059 				; optimize OK (sprites.pas), line = 345
  8060
  8061 3923 AD 69 B9			lda DIR_Y
  8062 3926 F0 25			jeq l_18C4
  8063
  8064 				; optimize OK (sprites.pas), line = 347
  8065
  8066 3928 A9 00			lda #$00
  8067 392A 8D 67 B9			sta J
  8068
  8069 392D			l_18CE
  8070 				; --- ForToDoCondition
  8071 392D AD 67 B9			lda J
  8072 3930 C9 08			cmp #$08
  8073 3932 B0 19			jcs l_18DC
  8074
  8075 				; optimize OK (sprites.pas), line = 350
  8076
  8077 3934 AD B9 EA			lda PLAYERPOS_Y
  8078 3937 18 6D 69 B9			add DIR_Y
  8079 393B 8D B9 EA			sta PLAYERPOS_Y
  8080
  8081 				; optimize OK (sprites.pas), line = 351
  8082
  8083 393E A9 01			lda #$01
  8084 3940 20 88 35			jsr PAINTPLAYER
  8085
  8086 				; optimize OK (sprites.pas), line = 352
  8087
  8088 3943 A9 01			lda #$01
  8089 3945 20 60 25			jsr WAITFRAMES
  8090
  8091 				; --- ForToDoEpilog
  8092 3948 EE 67 B9			inc J
  8093 394B D0 E0			jne l_18CE
  8094 394D			l_18DC
  8095 394D			l_18C4
  8096
  8097 				; optimize OK (sprites.pas), line = 356
  8098
  8099 394D AD 68 B9			lda DIR_X
  8100 3950 F0 25			jeq l_1905
  8101
  8102 				; optimize OK (sprites.pas), line = 358
  8103
  8104 3952 A9 00			lda #$00
  8105 3954 8D 67 B9			sta J
  8106
  8107 3957			l_190F
  8108 				; --- ForToDoCondition
  8109 3957 AD 67 B9			lda J
  8110 395A C9 08			cmp #$08
  8111 395C B0 19			jcs l_191D
  8112
  8113 				; optimize OK (sprites.pas), line = 360
  8114
  8115 395E AD B8 EA			lda PLAYERPOS_X
  8116 3961 18 6D 68 B9			add DIR_X
  8117 3965 8D B8 EA			sta PLAYERPOS_X
  8118
  8119 				; optimize OK (sprites.pas), line = 361
  8120
  8121 3968 A9 00			lda #$00
  8122 396A 20 88 35			jsr PAINTPLAYER
  8123
  8124 				; optimize OK (sprites.pas), line = 362
  8125
  8126 396D A9 01			lda #$01
  8127 396F 20 60 25			jsr WAITFRAMES
  8128
  8129 				; --- ForToDoEpilog
  8130 3972 EE 67 B9			inc J
  8131 3975 D0 E0			jne l_190F
  8132 3977			l_191D
  8133 3977			l_1905
  8134
  8135 				; optimize OK (sprites.pas), line = 367
  8136
  8137 3977 AD 6C B9			lda CURLOC
  8138 397A C9 10			cmp #$10
  8139 397C D0 2F			jne l_1946
  8140
  8141 				; optimize FAIL ('ROADBLOCK', sprites.pas), line = 370
  8142
  8143 397E 20 B9 34			jsr ROADBLOCK
  8144 3981 AD 61 B9			lda ROADBLOCK.RESULT
  8145 3984 8D 67 B9			sta J
  8146
  8147 				; optimize OK (sprites.pas), line = 371
  8148
  8149 3987 F0 21			jeq l_195D
  8150
  8151 				; optimize FAIL ('GOTCAUGHT', sprites.pas), line = 374
  8152
  8153 3989 20 7C 32			jsr GOTCAUGHT
  8154 398C AD 5C B9			lda GOTCAUGHT.RESULT
  8155 398F 8D 6D B9			sta R
  8156
  8157 				; optimize OK (sprites.pas), line = 375
  8158
  8159 3992 D0 0B			jne l_1974
  8160
  8161 				; optimize OK (sprites.pas), line = 377
  8162
  8163 3994 A9 10			lda #$10
  8164 3996 8D 66 B9			sta RESULT
  8165
  8166 				; optimize FAIL ('ENABLEMAPCONSOLE', sprites.pas), line = 378
  8167
  8168 3999 20 DA 25			jsr ENABLEMAPCONSOLE
  8169 399C 4C A7 39			jmp l_1983
  8170 399F			l_1974
  8171
  8172 				; optimize OK (sprites.pas), line = 383
  8173
  8174 399F A9 11			lda #$11
  8175 39A1 8D 66 B9			sta RESULT
  8176 39A4 4C B3 39			jmp @exit
  8177 39A7			l_1983
  8178 39A7 4C AD 39			jmp l_1990
  8179 39AA			l_195D
  8180
  8181 				; optimize FAIL ('ENABLEMAPCONSOLE', sprites.pas), line = 389
  8182
  8183 39AA 20 DA 25			jsr ENABLEMAPCONSOLE
  8184 39AD			l_1990
  8185 39AD			l_1946
  8186
  8187 				; optimize OK (sprites.pas), line = 392
  8188
  8189 39AD AD 6C B9			lda CURLOC
  8190 39B0 8D 66 B9			sta RESULT
  8191 39B3			@exit
  8192
  8193 				; ------------------------------------------------------------
  8194
  8195 = B965			CH	= DATAORIGIN+$14F0
  8196 = B966			RESULT	= DATAORIGIN+$14F1
  8197 = B967			J	= DATAORIGIN+$14F2
  8198 = B968			DIR_X	= DATAORIGIN+$14F3
  8199 = B969			DIR_Y	= DATAORIGIN+$14F4
  8200 = B96A			LENCID	= DATAORIGIN+$14F5
  8201 = B96B			LEAVEMAP	= DATAORIGIN+$14F6
  8202 = B96C			CURLOC	= DATAORIGIN+$14F7
  8203 = B96D			R	= DATAORIGIN+$14F8
  8204 = B96E			@CASETMP_000B	= DATAORIGIN+$14F9
  8205 = B96F			@CASETMP_000C	= DATAORIGIN+$14FA
  8206
  8207 = B965			@VarData	= CH
  8208 = 000A			@VarDataSize	= 10
  8209
  8210 39B3 60				rts						; ret
  8211 				.endl
  8212
  8213 39B4			.local	CLEARSPRITES					; PROCEDURE
  8214
  8215 				; optimize OK (sprites.pas), line = 398
  8216
  8217 39B4 A9 00			lda #$00
  8218 39B6				m@fill $DB00 10
Macro: M@FILL [Source: macros.asm]
     1 39B6 A0 7F			ldy #$7f
     2 39B8 99 00 DB 99 80 DB + lp	:+10 sta $DB00+#*$80,y
     3 39D6 88				dey
     4 39D7 10 DF			bpl lp
Source: main.a65
  8219 39D9			@exit
  8220 					.ifdef @new
  8221 					lda <@VarData
  8222 					sta :ztmp
  8223 					lda >@VarData
  8224 					ldy #@VarDataSize-1
  8225 					jmp @FreeMem
  8226 					els
  8227 39D9 60				rts						; ret
  8228 					eif
  8229 				.endl
  8230
  8231 39DA			.local	ENABLESPRITES					; PROCEDURE
  8232
  8233 				; optimize FAIL ('CLEARSPRITES', sprites.pas), line = 405
  8234
  8235 39DA 20 B4 39			jsr CLEARSPRITES
  8236
  8237 				; -------------------  ASM Block 00000163  -------------------
  8238
  8239 				;
  8240 				        // we need to put it into registers directly,  because we do not have
  8241 				        // the OS activated, so we have no routine that copies shadow to registers.
  8242 39DD A9 3E		        lda #$3e        // single line, both players & missiles
  8243 39DF 8D 2F 02		        sta SDMCTL      // shadow of DMACTL
  8244 39E2 8D 00 D4		        sta DMACTL
  8245 39E5 A9 01		        lda #1          // players in front of playfields
  8246 39E7 8D 6F 02		        sta $26f        // shadow of PRIOR WHY GPRIOR DOES NOT EXIST?
  8247 39EA 8D 1B D0		        sta $D01B
  8248 39ED A9 03		        lda #3          // turn on missiles & players
  8249 39EF 8D 1D D0		        sta GRACTL      // no shadow for this one
  8250 39F2 A9 D8		        lda #>PMG_BASE_ADR      // high byte of player storage
  8251 39F4 8D 07 D4		        sta PMBASE      // missiles = $7b00, player0 = $7c00
  8252
  8253 39F7 A9 00		        lda #$00     // eyes and tie
  8254 39F9 8D 12 D0		        sta PCOLR0
  8255 39FC A9 14		        lda #$14   // face/beard
  8256 39FE 8D 13 D0		        sta PCOLR1
  8257 3A01 A9 74		        lda #$74        // main player color
  8258 3A03 8D 14 D0		        sta PCOLR2
  8259 3A06 A9 0E		        lda #$0e   //face and shirt
  8260 3A08 8D 15 D0		        sta PCOLR3
  8261 				    
  8262 3A0B			@exit
  8263 					.ifdef @new
  8264 					lda <@VarData
  8265 					sta :ztmp
  8266 					lda >@VarData
  8267 					ldy #@VarDataSize-1
  8268 					jmp @FreeMem
  8269 					els
  8270 3A0B 60				rts						; ret
  8271 					eif
  8272 				.endl
  8273
  8274 3A0C			.local	FIGHT_PUTPLAYER					; PROCEDURE
  8275
  8276 				; optimize OK (fight_utils.pas), line = 8
  8277
  8278 3A0C AD 72 B9			lda S
  8279 3A0F 0A				asl @
  8280 3A10 0A				asl @
  8281 3A11 0A				asl @
  8282 3A12 0A				asl @
  8283 3A13 0A				asl @
  8284 3A14 0A				asl @
  8285 3A15 0A				asl @
  8286 3A16 85 9D			sta :STACKORIGIN+9
  8287 3A18 AD 73 B9			lda D
  8288 3A1B 0A				asl @
  8289 3A1C 18 65 9D			add :STACKORIGIN+9
  8290 3A1F 8D 72 B9			sta S
  8291
  8292 				; optimize OK (fight_utils.pas), line = 9
  8293
  8294 3A22 AD 74 B9			lda X
  8295 3A25 C9 01			cmp #$01
  8296 3A27 D0 09			jne l_19D0
  8297
  8298 				; optimize OK (fight_utils.pas), line = 10
  8299
  8300 3A29 AD 72 B9			lda S
  8301 3A2C 18 69 04			add #$04
  8302 3A2F 8D 72 B9			sta S
  8303 3A32			l_19D0
  8304
  8305 				; optimize OK (fight_utils.pas), line = 11
  8306
  8307 3A32 AD 72 B9			lda S
  8308 3A35 18 69 02			add #$02
  8309 3A38 85 9D			sta :STACKORIGIN+9
  8310 3A3A A9 F4			lda #$F4
  8311 3A3C 18 6D 71 B9			add P+1
  8312 3A40 85 81			sta :bp+1
  8313 3A42 AC 70 B9			ldy P
  8314 3A45 A5 9D			lda :STACKORIGIN+9
  8315 3A47 91 80			sta (:bp),y
  8316
  8317 				; optimize OK (fight_utils.pas), line = 12
  8318
  8319 3A49 AD 72 B9			lda S
  8320 3A4C 18 69 03			add #$03
  8321 3A4F 85 9D			sta :STACKORIGIN+9
  8322 3A51 A9 01			lda #$01
  8323 3A53 18 6D 70 B9			add P
  8324 3A57 A8				tay
  8325 3A58 A9 F4			lda #$F4
  8326 3A5A 6D 71 B9			adc P+1
  8327 3A5D 85 81			sta :bp+1
  8328 3A5F A5 9D			lda :STACKORIGIN+9
  8329 3A61 91 80			sta (:bp),y
  8330
  8331 				; optimize OK (fight_utils.pas), line = 13
  8332
  8333 3A63 AD 72 B9			lda S
  8334 3A66 18 69 0A			add #$0A
  8335 3A69 85 9D			sta :STACKORIGIN+9
  8336 3A6B A9 28			lda #$28
  8337 3A6D 18 6D 70 B9			add P
  8338 3A71 A8				tay
  8339 3A72 A9 F4			lda #$F4
  8340 3A74 6D 71 B9			adc P+1
  8341 3A77 85 81			sta :bp+1
  8342 3A79 A5 9D			lda :STACKORIGIN+9
  8343 3A7B 91 80			sta (:bp),y
  8344
  8345 				; optimize OK (fight_utils.pas), line = 14
  8346
  8347 3A7D AD 72 B9			lda S
  8348 3A80 18 69 0B			add #$0B
  8349 3A83 85 9D			sta :STACKORIGIN+9
  8350 3A85 A9 29			lda #$29
  8351 3A87 18 6D 70 B9			add P
  8352 3A8B A8				tay
  8353 3A8C A9 F4			lda #$F4
  8354 3A8E 6D 71 B9			adc P+1
  8355 3A91 85 81			sta :bp+1
  8356 3A93 A5 9D			lda :STACKORIGIN+9
  8357 3A95 91 80			sta (:bp),y
  8358
  8359 				; ------------------------------------------------------------
  8360
  8361 = B970			P	= DATAORIGIN+$14FB
  8362 = B972			S	= DATAORIGIN+$14FD
  8363 = B973			D	= DATAORIGIN+$14FE
  8364 = B974			X	= DATAORIGIN+$14FF
  8365
  8366 = B970			@VarData	= P
  8367 = 0005			@VarDataSize	= 5
  8368
  8369 3A97			@exit
  8370 					.ifdef @new
  8371 					lda <@VarData
  8372 					sta :ztmp
  8373 					lda >@VarData
  8374 					ldy #@VarDataSize-1
  8375 					jmp @FreeMem
  8376 					els
  8377 3A97 60				rts						; ret
  8378 					eif
  8379 				.endl
  8380
  8381 3A98			.local	FIGHT_DRAWCURRENTPLAYER				; PROCEDURE
  8382
  8383 				; optimize OK (fight_utils.pas), line = 23
  8384
  8385 3A98 AD E6 EE			lda FP_CURRENTSITE
  8386 3A9B 0A				asl @
  8387 3A9C 0A				asl @
  8388 3A9D 0A				asl @
  8389 3A9E 0A				asl @
  8390 3A9F 0A				asl @
  8391 3AA0 0A				asl @
  8392 3AA1 0A				asl @
  8393 3AA2 85 9D			sta :STACKORIGIN+9
  8394 3AA4 AD E6 EE			lda FP_CURRENTSITE
  8395 3AA7 0A				asl @
  8396 3AA8 18 65 9D			add :STACKORIGIN+9
  8397 3AAB 8D 77 B9			sta S
  8398
  8399 				; optimize OK (fight_utils.pas), line = 24
  8400
  8401 3AAE AC E5 EE			ldy FP_CURRENTPLAYER
  8402 3AB1 B9 45 ED			lda adr.FP_SEX,y
  8403 3AB4 C9 01			cmp #$01
  8404 3AB6 D0 09			jne l_1A4E
  8405
  8406 				; optimize OK (fight_utils.pas), line = 25
  8407
  8408 3AB8 AD 77 B9			lda S
  8409 3ABB 18 69 04			add #$04
  8410 3ABE 8D 77 B9			sta S
  8411 3AC1			l_1A4E
  8412
  8413 				; optimize OK (fight_utils.pas), line = 26
  8414
  8415 3AC1 AD E5 EE			lda FP_CURRENTPLAYER
  8416 3AC4 0A				asl @
  8417 3AC5 A8				tay
  8418 3AC6 B9 05 EC			lda adr.FP_POSW,y
  8419 3AC9 8D 75 B9			sta P
  8420 3ACC B9 06 EC			lda adr.FP_POSW+1,y
  8421 3ACF 8D 76 B9			sta P+1
  8422
  8423 				; optimize OK (fight_utils.pas), line = 27
  8424
  8425 3AD2 AD 77 B9			lda S
  8426 3AD5 18 69 02			add #$02
  8427 3AD8 85 9D			sta :STACKORIGIN+9
  8428 3ADA A9 F4			lda #$F4
  8429 3ADC 18 6D 76 B9			add P+1
  8430 3AE0 85 81			sta :bp+1
  8431 3AE2 AC 75 B9			ldy P
  8432 3AE5 A5 9D			lda :STACKORIGIN+9
  8433 3AE7 91 80			sta (:bp),y
  8434
  8435 				; optimize OK (fight_utils.pas), line = 28
  8436
  8437 3AE9 AD 77 B9			lda S
  8438 3AEC 18 69 03			add #$03
  8439 3AEF 85 9D			sta :STACKORIGIN+9
  8440 3AF1 A9 01			lda #$01
  8441 3AF3 18 6D 75 B9			add P
  8442 3AF7 A8				tay
  8443 3AF8 A9 F4			lda #$F4
  8444 3AFA 6D 76 B9			adc P+1
  8445 3AFD 85 81			sta :bp+1
  8446 3AFF A5 9D			lda :STACKORIGIN+9
  8447 3B01 91 80			sta (:bp),y
  8448
  8449 				; optimize OK (fight_utils.pas), line = 29
  8450
  8451 3B03 AD 77 B9			lda S
  8452 3B06 18 69 0A			add #$0A
  8453 3B09 85 9D			sta :STACKORIGIN+9
  8454 3B0B A9 28			lda #$28
  8455 3B0D 18 6D 75 B9			add P
  8456 3B11 A8				tay
  8457 3B12 A9 F4			lda #$F4
  8458 3B14 6D 76 B9			adc P+1
  8459 3B17 85 81			sta :bp+1
  8460 3B19 A5 9D			lda :STACKORIGIN+9
  8461 3B1B 91 80			sta (:bp),y
  8462
  8463 				; optimize OK (fight_utils.pas), line = 30
  8464
  8465 3B1D AD 77 B9			lda S
  8466 3B20 18 69 0B			add #$0B
  8467 3B23 85 9D			sta :STACKORIGIN+9
  8468 3B25 A9 29			lda #$29
  8469 3B27 18 6D 75 B9			add P
  8470 3B2B A8				tay
  8471 3B2C A9 F4			lda #$F4
  8472 3B2E 6D 76 B9			adc P+1
  8473 3B31 85 81			sta :bp+1
  8474 3B33 A5 9D			lda :STACKORIGIN+9
  8475 3B35 91 80			sta (:bp),y
  8476
  8477 				; ------------------------------------------------------------
  8478
  8479 = B975			P	= DATAORIGIN+$1500
  8480 = B977			S	= DATAORIGIN+$1502
  8481
  8482 = B975			@VarData	= P
  8483 = 0003			@VarDataSize	= 3
  8484
  8485 3B37			@exit
  8486 					.ifdef @new
  8487 					lda <@VarData
  8488 					sta :ztmp
  8489 					lda >@VarData
  8490 					ldy #@VarDataSize-1
  8491 					jmp @FreeMem
  8492 					els
  8493 3B37 60				rts						; ret
  8494 					eif
  8495 				.endl
  8496
  8497 3B38			.local	FIGHT_CLEARPLAYER				; PROCEDURE
  8498
  8499 				; optimize OK (fight_utils.pas), line = 36
  8500
  8501 3B38 A9 F4			lda #$F4
  8502 3B3A 18 6D 79 B9			add P+1
  8503 3B3E 85 81			sta :bp+1
  8504 3B40 AC 78 B9			ldy P
  8505 3B43 A9 00			lda #$00
  8506 3B45 91 80			sta (:bp),y
  8507
  8508 				; optimize OK (fight_utils.pas), line = 37
  8509
  8510 3B47 A9 01			lda #$01
  8511 3B49 18 6D 78 B9			add P
  8512 3B4D A8				tay
  8513 3B4E A9 F4			lda #$F4
  8514 3B50 6D 79 B9			adc P+1
  8515 3B53 85 81			sta :bp+1
  8516 3B55 A9 00			lda #$00
  8517 3B57 91 80			sta (:bp),y
  8518
  8519 				; optimize OK (fight_utils.pas), line = 38
  8520
  8521 3B59 A9 28			lda #$28
  8522 3B5B 18 6D 78 B9			add P
  8523 3B5F A8				tay
  8524 3B60 A9 F4			lda #$F4
  8525 3B62 6D 79 B9			adc P+1
  8526 3B65 85 81			sta :bp+1
  8527 3B67 A9 00			lda #$00
  8528 3B69 91 80			sta (:bp),y
  8529
  8530 				; optimize OK (fight_utils.pas), line = 39
  8531
  8532 3B6B A9 29			lda #$29
  8533 3B6D 18 6D 78 B9			add P
  8534 3B71 A8				tay
  8535 3B72 A9 F4			lda #$F4
  8536 3B74 6D 79 B9			adc P+1
  8537 3B77 85 81			sta :bp+1
  8538 3B79 A9 00			lda #$00
  8539 3B7B 91 80			sta (:bp),y
  8540
  8541 				; ------------------------------------------------------------
  8542
  8543 = B978			P	= DATAORIGIN+$1503
  8544
  8545 = B978			@VarData	= P
  8546 = 0002			@VarDataSize	= 2
  8547
  8548 3B7D			@exit
  8549 					.ifdef @new
  8550 					lda <@VarData
  8551 					sta :ztmp
  8552 					lda >@VarData
  8553 					ldy #@VarDataSize-1
  8554 					jmp @FreeMem
  8555 					els
  8556 3B7D 60				rts						; ret
  8557 					eif
  8558 				.endl
  8559
  8560 3B7E			.local	FIGHT_CLEARCURRENTPLAYER			; PROCEDURE
  8561
  8562 				; optimize OK (fight_utils.pas), line = 46
  8563
  8564 3B7E AD E5 EE			lda FP_CURRENTPLAYER
  8565 3B81 0A				asl @
  8566 3B82 A8				tay
  8567 3B83 B9 05 EC			lda adr.FP_POSW,y
  8568 3B86 8D 7A B9			sta P
  8569 3B89 B9 06 EC			lda adr.FP_POSW+1,y
  8570 3B8C 8D 7B B9			sta P+1
  8571
  8572 				; optimize OK (fight_utils.pas), line = 47
  8573
  8574 3B8F A9 F4			lda #$F4
  8575 3B91 18 6D 7B B9			add P+1
  8576 3B95 85 81			sta :bp+1
  8577 3B97 AC 7A B9			ldy P
  8578 3B9A A9 00			lda #$00
  8579 3B9C 91 80			sta (:bp),y
  8580
  8581 				; optimize OK (fight_utils.pas), line = 48
  8582
  8583 3B9E A9 01			lda #$01
  8584 3BA0 18 6D 7A B9			add P
  8585 3BA4 A8				tay
  8586 3BA5 A9 F4			lda #$F4
  8587 3BA7 6D 7B B9			adc P+1
  8588 3BAA 85 81			sta :bp+1
  8589 3BAC A9 00			lda #$00
  8590 3BAE 91 80			sta (:bp),y
  8591
  8592 				; optimize OK (fight_utils.pas), line = 49
  8593
  8594 3BB0 A9 28			lda #$28
  8595 3BB2 18 6D 7A B9			add P
  8596 3BB6 A8				tay
  8597 3BB7 A9 F4			lda #$F4
  8598 3BB9 6D 7B B9			adc P+1
  8599 3BBC 85 81			sta :bp+1
  8600 3BBE A9 00			lda #$00
  8601 3BC0 91 80			sta (:bp),y
  8602
  8603 				; optimize OK (fight_utils.pas), line = 50
  8604
  8605 3BC2 A9 29			lda #$29
  8606 3BC4 18 6D 7A B9			add P
  8607 3BC8 A8				tay
  8608 3BC9 A9 F4			lda #$F4
  8609 3BCB 6D 7B B9			adc P+1
  8610 3BCE 85 81			sta :bp+1
  8611 3BD0 A9 00			lda #$00
  8612 3BD2 91 80			sta (:bp),y
  8613
  8614 				; ------------------------------------------------------------
  8615
  8616 = B97A			P	= DATAORIGIN+$1505
  8617
  8618 = B97A			@VarData	= P
  8619 = 0002			@VarDataSize	= 2
  8620
  8621 3BD4			@exit
  8622 					.ifdef @new
  8623 					lda <@VarData
  8624 					sta :ztmp
  8625 					lda >@VarData
  8626 					ldy #@VarDataSize-1
  8627 					jmp @FreeMem
  8628 					els
  8629 3BD4 60				rts						; ret
  8630 					eif
  8631 				.endl
  8632
  8633 3BD5			.local	FIGHT_DRAWPLAYERS				; PROCEDURE
  8634
  8635 				; optimize OK (fight_utils.pas), line = 59
  8636
  8637 3BD5 A9 00			lda #$00
  8638 3BD7 8D 7D B9			sta S
  8639
  8640 3BDA			l_1B1C
  8641 				; --- ForToDoCondition
  8642 3BDA AD 7D B9			lda S
  8643 3BDD C9 02			cmp #$02
  8644 3BDF B0 59			jcs l_1B2A
  8645
  8646 				; optimize OK (fight_utils.pas), line = 60
  8647
  8648 3BE1 A9 00			lda #$00
  8649 3BE3 8D 7C B9			sta I
  8650 3BE6 AC 7D B9			ldy S
  8651 3BE9 B9 03 EC			lda adr.FP_N,y
  8652 3BEC 38 E9 01			sub #$01
  8653 3BEF 8D F3 3B			sta @FORTMP_1B39_0
  8654
  8655 3BF2			l_1B3C
  8656 				; --- ForToDoCondition
  8657 3BF2 A9 00			lda @FORTMP_1B39_0::#$00
  8658 3BF4 CD 7C B9			cmp I
  8659 3BF7 90 3C			jcc l_1B4A
  8660
  8661 				; optimize OK (fight_utils.pas), line = 62
  8662
  8663 3BF9 AD 7D B9			lda S
  8664 3BFC 0A				asl @
  8665 3BFD 0A				asl @
  8666 3BFE 0A				asl @
  8667 3BFF 0A				asl @
  8668 3C00 18 6D 7C B9			add I
  8669 3C04 8D 7E B9			sta Q
  8670
  8671 				; optimize OK (fight_utils.pas), line = 63
  8672
  8673 3C07 A8				tay
  8674 3C08 B9 85 EC			lda adr.FP_ENERGY,y
  8675 3C0B F0 23			jeq l_1B6F
  8676
  8677 				; optimize OK (fight_utils.pas), line = 65
  8678
  8679 3C0D B9 45 ED			lda adr.FP_SEX,y
  8680 3C10 8D 74 B9			sta FIGHT_PUTPLAYER.X
  8681 3C13 AD 7E B9			lda Q
  8682 3C16 0A				asl @
  8683 3C17 A8				tay
  8684 3C18 B9 05 EC			lda adr.FP_POSW,y
  8685 3C1B 8D 70 B9			sta FIGHT_PUTPLAYER.P
  8686 3C1E B9 06 EC			lda adr.FP_POSW+1,y
  8687 3C21 8D 71 B9			sta FIGHT_PUTPLAYER.P+1
  8688 3C24 AD 7D B9			lda S
  8689 3C27 8D 72 B9			sta FIGHT_PUTPLAYER.S
  8690 3C2A 8D 73 B9			sta FIGHT_PUTPLAYER.D
  8691 3C2D 20 0C 3A			jsr FIGHT_PUTPLAYER
  8692 3C30			l_1B6F
  8693
  8694 				; --- ForToDoEpilog
  8695 3C30 EE 7C B9			inc I
  8696 3C33 D0 BD			jne l_1B3C
  8697 3C35			l_1B4A
  8698
  8699 				; --- ForToDoEpilog
  8700 3C35 EE 7D B9			inc S
  8701 3C38 D0 A0			jne l_1B1C
  8702 3C3A			l_1B2A
  8703
  8704 				; ------------------------------------------------------------
  8705
  8706 = B97C			I	= DATAORIGIN+$1507
  8707 = B97D			S	= DATAORIGIN+$1508
  8708 = B97E			Q	= DATAORIGIN+$1509
  8709
  8710 = B97C			@VarData	= I
  8711 = 0003			@VarDataSize	= 3
  8712
  8713 3C3A			@exit
  8714 					.ifdef @new
  8715 					lda <@VarData
  8716 					sta :ztmp
  8717 					lda >@VarData
  8718 					ldy #@VarDataSize-1
  8719 					jmp @FreeMem
  8720 					els
  8721 3C3A 60				rts						; ret
  8722 					eif
  8723 				.endl
  8724
  8725 3C3B			.local	CHECKHIT					; FUNCTION
  8726
  8727 				; optimize OK (fight_utils.pas), line = 77
  8728
  8729 3C3B A9 00			lda #$00
  8730 3C3D 8D 85 B9			sta S
  8731
  8732 3C40			l_1B9B
  8733 				; --- ForToDoCondition
  8734 3C40 AD 85 B9			lda S
  8735 3C43 C9 02			cmp #$02
  8736 3C45 90 03 4C 1D 3D		jcs l_1BA9
  8737
  8738 				; optimize OK (fight_utils.pas), line = 78
  8739
  8740 3C4A A9 00			lda #$00
  8741 3C4C 8D 86 B9			sta I
  8742 3C4F AC 85 B9			ldy S
  8743 3C52 B9 03 EC			lda adr.FP_N,y
  8744 3C55 38 E9 01			sub #$01
  8745 3C58 8D 5C 3C			sta @FORTMP_1BB8_0
  8746
  8747 3C5B			l_1BBB
  8748 				; --- ForToDoCondition
  8749 3C5B A9 00			lda @FORTMP_1BB8_0::#$00
  8750 3C5D CD 86 B9			cmp I
  8751 3C60 B0 03 4C 15 3D		jcc l_1BC9
  8752
  8753 				; optimize OK (fight_utils.pas), line = 81
  8754
  8755 3C65 AD 85 B9			lda S
  8756 3C68 0A				asl @
  8757 3C69 0A				asl @
  8758 3C6A 0A				asl @
  8759 3C6B 0A				asl @
  8760 3C6C 18 6D 86 B9			add I
  8761 3C70 A8				tay
  8762 3C71 B9 85 EC			lda adr.FP_ENERGY,y
  8763 3C74 D0 03			jne l_1BE8
  8764 3C76 4C 0D 3D			jmp c_1BBB					; continue
  8765 3C79			l_1BE8
  8766
  8767 				; optimize OK (fight_utils.pas), line = 83
  8768
  8769 3C79 AD 85 B9			lda S
  8770 3C7C 0A				asl @
  8771 3C7D 0A				asl @
  8772 3C7E 0A				asl @
  8773 3C7F 0A				asl @
  8774 3C80 18 6D 86 B9			add I
  8775 3C84 0A				asl @
  8776 3C85 A8				tay
  8777 3C86 B9 05 EC			lda adr.FP_POSW,y
  8778 3C89 8D 83 B9			sta Z
  8779 3C8C A9 F4			lda #$F4
  8780 3C8E 18 79 06 EC			add adr.FP_POSW+1,y
  8781 3C92 8D 84 B9			sta Z+1
  8782
  8783 				; optimize OK (fight_utils.pas), line = 84
  8784
  8785 3C95 AD 85 B9			lda S
  8786 3C98 0A				asl @
  8787 3C99 0A				asl @
  8788 3C9A 0A				asl @
  8789 3C9B 0A				asl @
  8790 3C9C 18 6D 86 B9			add I
  8791 3CA0 8D 82 B9			sta RESULT
  8792
  8793 				; optimize OK (fight_utils.pas), line = 85
  8794
  8795 3CA3 AD 81 B9			lda K+1
  8796 3CA6 CD 84 B9			cmp Z+1
  8797 3CA9 D0 06			bne @+
  8798 3CAB AD 80 B9			lda K
  8799 3CAE CD 83 B9			cmp Z
  8800 				@
  8801 3CB1 D0 03			jne l_1C23
  8802 3CB3 4C 22 3D			jmp @exit
  8803 3CB6			l_1C23
  8804
  8805 				; optimize OK (fight_utils.pas), line = 86
  8806
  8807 3CB6 EE 83 B9			inc Z
  8808 3CB9 D0 03			sne
  8809 3CBB EE 84 B9			inc Z+1
  8810
  8811 				; optimize OK (fight_utils.pas), line = 87
  8812
  8813 3CBE AD 81 B9			lda K+1
  8814 3CC1 CD 84 B9			cmp Z+1
  8815 3CC4 D0 06			bne @+
  8816 3CC6 AD 80 B9			lda K
  8817 3CC9 CD 83 B9			cmp Z
  8818 				@
  8819 3CCC D0 03			jne l_1C41
  8820 3CCE 4C 22 3D			jmp @exit
  8821 3CD1			l_1C41
  8822
  8823 				; optimize OK (fight_utils.pas), line = 88
  8824
  8825 3CD1 AD 83 B9			lda Z
  8826 3CD4 18 69 27			add #$27
  8827 3CD7 8D 83 B9			sta Z
  8828 3CDA 90 03			scc
  8829 3CDC EE 84 B9			inc Z+1
  8830
  8831 				; optimize OK (fight_utils.pas), line = 89
  8832
  8833 3CDF AD 81 B9			lda K+1
  8834 3CE2 CD 84 B9			cmp Z+1
  8835 3CE5 D0 06			bne @+
  8836 3CE7 AD 80 B9			lda K
  8837 3CEA CD 83 B9			cmp Z
  8838 				@
  8839 3CED D0 03			jne l_1C5F
  8840 3CEF 4C 22 3D			jmp @exit
  8841 3CF2			l_1C5F
  8842
  8843 				; optimize OK (fight_utils.pas), line = 90
  8844
  8845 3CF2 EE 83 B9			inc Z
  8846 3CF5 D0 03			sne
  8847 3CF7 EE 84 B9			inc Z+1
  8848
  8849 				; optimize OK (fight_utils.pas), line = 91
  8850
  8851 3CFA AD 81 B9			lda K+1
  8852 3CFD CD 84 B9			cmp Z+1
  8853 3D00 D0 06			bne @+
  8854 3D02 AD 80 B9			lda K
  8855 3D05 CD 83 B9			cmp Z
  8856 				@
  8857 3D08 D0 03			jne l_1C7D
  8858 3D0A 4C 22 3D			jmp @exit
  8859 3D0D			l_1C7D
  8860
  8861 				; --- ForToDoEpilog
  8862 3D0D			c_1BBB
  8863 3D0D EE 86 B9			inc I
  8864 3D10 F0 03 4C 5B 3C		jne l_1BBB
  8865 3D15			l_1BC9
  8866
  8867 				; --- ForToDoEpilog
  8868 3D15 EE 85 B9			inc S
  8869 3D18 F0 03 4C 40 3C		jne l_1B9B
  8870 3D1D			l_1BA9
  8871
  8872 				; optimize OK (fight_utils.pas), line = 98
  8873
  8874 3D1D A9 80			lda #$80
  8875 3D1F 8D 82 B9			sta RESULT
  8876 3D22			@exit
  8877
  8878 				; ------------------------------------------------------------
  8879
  8880 = B980			K	= DATAORIGIN+$150B
  8881 = B982			RESULT	= DATAORIGIN+$150D
  8882 = B983			Z	= DATAORIGIN+$150E
  8883 = B985			S	= DATAORIGIN+$1510
  8884 = B986			I	= DATAORIGIN+$1511
  8885
  8886 = B980			@VarData	= K
  8887 = 0006			@VarDataSize	= 6
  8888
  8889 3D22 60				rts						; ret
  8890 				.endl
  8891
  8892 3D23			.local	FIGHT_SETSHOOTSTART				; PROCEDURE
  8893
  8894 				; optimize OK (fight_utils.pas), line = 105
  8895
  8896 3D23 AD E9 EE			lda SHOOT_DIFF
  8897 3D26 8D 88 B9			sta @CASETMP_000D
  8898 3D29 C9 FF			cmp #$FF
  8899 3D2B D0 0D			jne l_1C9D
  8900 				@
  8901
  8902 				; optimize OK (fight_utils.pas), line = 106
  8903
  8904 3D2D A9 28			lda #$28
  8905 3D2F 8D EA EE			sta SHOOT_START
  8906 3D32 A9 00			lda #$00
  8907 3D34 8D EB EE			sta SHOOT_START+1
  8908 3D37 4C 68 3D			jmp a_000D
  8909 3D3A			l_1C9D
  8910 3D3A C9 01			cmp #$01
  8911 3D3C D0 0D			jne l_1CAA
  8912
  8913 				; optimize OK (fight_utils.pas), line = 107
  8914
  8915 3D3E A9 29			lda #$29
  8916 3D40 8D EA EE			sta SHOOT_START
  8917 3D43 A9 00			lda #$00
  8918 3D45 8D EB EE			sta SHOOT_START+1
  8919 3D48 4C 68 3D			jmp a_000D
  8920 3D4B			l_1CAA
  8921 3D4B C9 D8			cmp #$D8
  8922 3D4D D0 0B			jne l_1CB7
  8923
  8924 				; optimize OK (fight_utils.pas), line = 108
  8925
  8926 3D4F A9 00			lda #$00
  8927 3D51 8D EA EE			sta SHOOT_START
  8928 3D54 8D EB EE			sta SHOOT_START+1
  8929 3D57 4C 68 3D			jmp a_000D
  8930 3D5A			l_1CB7
  8931 3D5A C9 28			cmp #$28
  8932 3D5C D0 0A			jne l_1CC4
  8933
  8934 				; optimize OK (fight_utils.pas), line = 109
  8935
  8936 3D5E A9 28			lda #$28
  8937 3D60 8D EA EE			sta SHOOT_START
  8938 3D63 A9 00			lda #$00
  8939 3D65 8D EB EE			sta SHOOT_START+1
  8940 3D68			l_1CC4
  8941 3D68			a_000D
  8942
  8943 				; ------------------------------------------------------------
  8944
  8945 = B988			@CASETMP_000D	= DATAORIGIN+$1513
  8946
  8947 = B988			@VarData	= @CASETMP_000D
  8948 = 0001			@VarDataSize	= 1
  8949
  8950 3D68			@exit
  8951 					.ifdef @new
  8952 					lda <@VarData
  8953 					sta :ztmp
  8954 					lda >@VarData
  8955 					ldy #@VarDataSize-1
  8956 					jmp @FreeMem
  8957 					els
  8958 3D68 60				rts						; ret
  8959 					eif
  8960 				.endl
  8961
  8962 3D69			.local	FIGHT_SHOOT					; FUNCTION
  8963
  8964 				; optimize FAIL ('FIGHT_SETSHOOTSTART', fight_utils.pas), line = 123
  8965
  8966 3D69 20 23 3D			jsr FIGHT_SETSHOOTSTART
  8967
  8968 				; optimize OK (fight_utils.pas), line = 124
  8969
  8970 3D6C AD E5 EE			lda FP_CURRENTPLAYER
  8971 3D6F 0A				asl @
  8972 3D70 A8				tay
  8973 3D71 B9 05 EC			lda adr.FP_POSW,y
  8974 3D74 8D EF EE			sta F_CURPOS
  8975 3D77 A9 F4			lda #$F4
  8976 3D79 18 79 06 EC			add adr.FP_POSW+1,y
  8977 3D7D 8D F0 EE			sta F_CURPOS+1
  8978
  8979 				; optimize OK (fight_utils.pas), line = 125
  8980
  8981 3D80 AC E5 EE			ldy FP_CURRENTPLAYER
  8982 3D83 B9 45 EC			lda adr.FP_WEAPON,y
  8983 3D86 8D 8C B9			sta E
  8984
  8985 				; optimize OK (fight_utils.pas), line = 126
  8986
  8987 3D89 A8				tay
  8988 3D8A B9 24 E7			lda adr.WEAPONREACH,y
  8989 3D8D 8D 8D B9			sta R
  8990
  8991 				; optimize OK (fight_utils.pas), line = 127
  8992
  8993 3D90 A9 00			lda #$00
  8994 3D92 8D 92 B9			sta HITPLAYER
  8995
  8996 				; optimize OK (fight_utils.pas), line = 128
  8997
  8998 3D95 8D 8E B9			sta V
  8999
  9000 3D98			l_1D00
  9001 				; --- ForToDoCondition
  9002 3D98 AD 8E B9			lda V
  9003 3D9B C9 29			cmp #$29
  9004 3D9D 90 03 4C AA 3F		jcs l_1D0E
  9005
  9006 				; optimize OK (fight_utils.pas), line = 131
  9007
  9008 3DA2 CD 8D B9			cmp R
  9009 3DA5 D0 03			jne l_1D22
  9010 3DA7 4C D0 3F			jmp @exit
  9011 3DAA			l_1D22
  9012
  9013 				; optimize OK (fight_utils.pas), line = 134
  9014
  9015 3DAA AD EF EE			lda F_CURPOS
  9016 3DAD 18 6D EA EE			add SHOOT_START
  9017 3DB1 85 9D			sta :STACKORIGIN+9
  9018 3DB3 AD F0 EE			lda F_CURPOS+1
  9019 3DB6 6D EB EE			adc SHOOT_START+1
  9020 3DB9 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  9021 3DBB A0 00			ldy #$00
  9022 3DBD AD E9 EE			lda SHOOT_DIFF
  9023 3DC0 10 01			spl
  9024 3DC2 88				dey
  9025 3DC3 18 65 9D			add :STACKORIGIN+9
  9026 3DC6 8D 8A B9			sta K
  9027 3DC9 98				tya
  9028 3DCA 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  9029 3DCC 8D 8B B9			sta K+1
  9030
  9031 				; optimize OK (fight_utils.pas), line = 135
  9032
  9033 3DCF 85 81			sta :bp+1
  9034 3DD1 AC 8A B9			ldy K
  9035 3DD4 B1 80			lda (:bp),y
  9036 3DD6 8D 8F B9			sta W
  9037
  9038 				; optimize OK (fight_utils.pas), line = 136
  9039
  9040 3DD9 AD E9 EE			lda SHOOT_DIFF
  9041 3DDC C9 01			cmp #$01
  9042 3DDE F0 04			jeq l_1D59x
  9043 3DE0 C9 FF			cmp #$FF
  9044 3DE2 D0 0D			jne l_1D59
  9045 3DE4			l_1D59x
  9046
  9047 				; optimize OK (fight_utils.pas), line = 137
  9048
  9049 3DE4 AC 8B B9			ldy K+1
  9050 3DE7 84 81			sty :bp+1
  9051 3DE9 AC 8A B9			ldy K
  9052 3DEC A9 12			lda #$12
  9053 3DEE 4C FB 3D			jmp l_1D67
  9054 3DF1			l_1D59
  9055
  9056 				; optimize OK (fight_utils.pas), line = 139
  9057
  9058 3DF1 AC 8B B9			ldy K+1
  9059 3DF4 84 81			sty :bp+1
  9060 3DF6 AC 8A B9			ldy K
  9061 3DF9 A9 13			lda #$13
  9062 3DFB			l_1D67
  9063 3DFB 91 80			sta (:bp),y
  9064
  9065 				; optimize OK (fight_utils.pas), line = 140
  9066
  9067 3DFD A9 03			lda #$03
  9068 3DFF 20 60 25			jsr WAITFRAMES
  9069
  9070 				; optimize OK (fight_utils.pas), line = 141
  9071
  9072 3E02 AD EF EE			lda F_CURPOS
  9073 3E05 18 6D EA EE			add SHOOT_START
  9074 3E09 85 9E			sta :STACKORIGIN+10
  9075 3E0B AD F0 EE			lda F_CURPOS+1
  9076 3E0E 6D EB EE			adc SHOOT_START+1
  9077 3E11 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  9078 3E13 A0 00			ldy #$00
  9079 3E15 AD E9 EE			lda SHOOT_DIFF
  9080 3E18 10 01			spl
  9081 3E1A 88				dey
  9082 3E1B 84 AF			sty :STACKORIGIN+STACKWIDTH+11
  9083 3E1D 18 65 9E			add :STACKORIGIN+10
  9084 3E20 A8				tay
  9085 3E21 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  9086 3E23 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  9087 3E25 85 81			sta :bp+1
  9088 3E27 AD 8F B9			lda W
  9089 3E2A 91 80			sta (:bp),y
  9090
  9091 				; optimize OK (fight_utils.pas), line = 143
  9092
  9093 3E2C AD 8F B9			lda W
  9094 3E2F D0 19			jne l_1D90
  9095
  9096 				; optimize OK (fight_utils.pas), line = 145
  9097
  9098 3E31 A0 00			ldy #$00
  9099 3E33 AD E9 EE			lda SHOOT_DIFF
  9100 3E36 10 01			spl
  9101 3E38 88				dey
  9102 3E39 18 6D EA EE			add SHOOT_START
  9103 3E3D 8D EA EE			sta SHOOT_START
  9104 3E40 98				tya
  9105 3E41 6D EB EE			adc SHOOT_START+1
  9106 3E44 8D EB EE			sta SHOOT_START+1
  9107 3E47 4C A2 3F			jmp c_1D00					; continue
  9108 3E4A			l_1D90
  9109
  9110 				; optimize OK (fight_utils.pas), line = 148
  9111
  9112 3E4A AD 8F B9			lda W
  9113 3E4D C9 01			cmp #$01
  9114 3E4F D0 03			jne l_1DB0
  9115 3E51 4C AA 3F			jmp b_1D00					; break
  9116 3E54			l_1DB0
  9117
  9118 				; optimize OK (fight_utils.pas), line = 151
  9119
  9120 3E54 AD 8A B9			lda K
  9121 3E57 8D 80 B9			sta CHECKHIT.K
  9122 3E5A AD 8B B9			lda K+1
  9123 3E5D 8D 81 B9			sta CHECKHIT.K+1
  9124 3E60 20 3B 3C			jsr CHECKHIT
  9125 3E63 AD 82 B9			lda CHECKHIT.RESULT
  9126 3E66 8D 90 B9			sta T
  9127
  9128 				; optimize OK (fight_utils.pas), line = 152
  9129
  9130 3E69 10 03 4C A2 3F		jmi l_1DCB
  9131
  9132 				; optimize OK (fight_utils.pas), line = 154
  9133
  9134 3E6E A9 05			lda #$05
  9135 3E70 20 60 25			jsr WAITFRAMES
  9136
  9137 				; optimize OK (fight_utils.pas), line = 158
  9138
  9139 3E73 A9 08			lda #$08
  9140 3E75 20 CB 15			jsr SYSTEM.RANDOM_02E9
  9141 3E78 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  9142 3E7B 8D 93 B9			sta T1
  9143
  9144 				; optimize OK (fight_utils.pas), line = 159
  9145
  9146 3E7E AC 8C B9			ldy E
  9147 3E81 B9 2D E7			lda adr.WEAPONPRECISION,y
  9148 3E84 0A				asl @
  9149 3E85 8D 94 B9			sta T2
  9150
  9151 				; optimize OK (fight_utils.pas), line = 160
  9152
  9153 3E88 A9 0C			lda #$0C
  9154 3E8A 20 CB 15			jsr SYSTEM.RANDOM_02E9
  9155 3E8D AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
  9156 3E90 8D 95 B9			sta T3
  9157
  9158 				; optimize OK (fight_utils.pas), line = 161
  9159
  9160 3E93 AC E5 EE			ldy FP_CURRENTPLAYER
  9161 3E96 B9 C5 EC			lda adr.FP_STRENGTH,y
  9162 3E99 4A				lsr @
  9163 3E9A 4A				lsr @
  9164 3E9B 4A				lsr @
  9165 3E9C 18 69 01			add #$01
  9166 3E9F 8D 96 B9			sta T4
  9167
  9168 				; optimize OK (fight_utils.pas), line = 162
  9169
  9170 3EA2 AD 94 B9			lda T2
  9171 3EA5 CD 93 B9			cmp T1
  9172 3EA8 B0 0B			jcs l_1E18
  9173 3EAA AD 96 B9			lda T4
  9174 3EAD CD 95 B9			cmp T3
  9175 3EB0 B0 03			jcs l_1E18
  9176 3EB2 4C AA 3F			jmp b_1D00					; break
  9177 3EB5			l_1E18
  9178
  9179 				; optimize OK (fight_utils.pas), line = 164
  9180
  9181 3EB5 AC 8C B9			ldy E
  9182 3EB8 B9 36 E7			lda adr.WEAPONEFFECT,y
  9183 3EBB 85 9D			sta :STACKORIGIN+9
  9184 3EBD AC E5 EE			ldy FP_CURRENTPLAYER
  9185 3EC0 B9 05 ED			lda adr.FP_BRUTALITY,y
  9186 3EC3 4A				lsr @
  9187 3EC4 4A				lsr @
  9188 3EC5 4A				lsr @
  9189 3EC6 18 65 9D			add :STACKORIGIN+9
  9190 3EC9 8D 91 B9			sta HIT
  9191
  9192 				; optimize OK (fight_utils.pas), line = 165
  9193
  9194 3ECC D0 03			jne l_1E43
  9195 3ECE 4C AA 3F			jmp b_1D00					; break
  9196 3ED1			l_1E43
  9197
  9198 				; optimize OK (fight_utils.pas), line = 167
  9199
  9200 3ED1 A9 00			lda #$00
  9201 3ED3 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  9202 3ED6 A9 14			lda #$14
  9203 3ED8 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  9204 3EDB 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  9205
  9206 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 168
  9207
  9208 3EDE E8				inx
  9209 3EDF AD 2A A4 95 94		mva FIGHT_STRING_1 :STACKORIGIN,x
  9210 3EE4 AD 2B A4 95 A4		mva FIGHT_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
  9211 3EE9 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9212
  9213 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 169
  9214
  9215 3EEC E8				inx
  9216 3EED AD 90 B9			lda T
  9217 3EF0 0A				asl @
  9218 3EF1 A8				tay
  9219 3EF2 B9 7C B0			lda adr.FP_NAME,y
  9220 3EF5 95 94			sta :STACKORIGIN,x
  9221 3EF7 B9 7D B0			lda adr.FP_NAME+1,y
  9222 3EFA 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  9223 3EFC 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9224
  9225 				; optimize OK (fight_utils.pas), line = 170
  9226
  9227 3EFF A9 00			lda #$00
  9228 3F01 20 88 1C			jsr B_CRT.CRT_WRITE_054D
  9229
  9230 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 171
  9231
  9232 3F04 E8				inx
  9233 3F05 AD 2C A4 95 94		mva FIGHT_STRING_2 :STACKORIGIN,x
  9234 3F0A AD 2D A4 95 A4		mva FIGHT_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
  9235 3F0F 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9236
  9237 				; optimize OK (fight_utils.pas), line = 176
  9238
  9239 3F12 A9 05			lda #$05
  9240 3F14 20 60 25			jsr WAITFRAMES
  9241
  9242 				; optimize OK (fight_utils.pas), line = 177
  9243
  9244 3F17 AC 90 B9			ldy T
  9245 3F1A AD 91 B9			lda HIT
  9246 3F1D D9 85 EC			cmp adr.FP_ENERGY,y
  9247 3F20 90 60			jcc l_1E70
  9248
  9249 				; optimize OK (fight_utils.pas), line = 179
  9250
  9251 3F22 A9 00			lda #$00
  9252 3F24 99 85 EC			sta adr.FP_ENERGY,y
  9253
  9254 				; optimize OK (fight_utils.pas), line = 180
  9255
  9256 3F27 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  9257 3F2A A9 14			lda #$14
  9258 3F2C 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  9259 3F2F 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  9260
  9261 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 181
  9262
  9263 3F32 E8				inx
  9264 3F33 AD 2E A4 95 94		mva FIGHT_STRING_3 :STACKORIGIN,x
  9265 3F38 AD 2F A4 95 A4		mva FIGHT_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
  9266 3F3D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9267
  9268 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 182
  9269
  9270 3F40 E8				inx
  9271 3F41 AD 90 B9			lda T
  9272 3F44 0A				asl @
  9273 3F45 A8				tay
  9274 3F46 B9 7C B0			lda adr.FP_NAME,y
  9275 3F49 95 94			sta :STACKORIGIN,x
  9276 3F4B B9 7D B0			lda adr.FP_NAME+1,y
  9277 3F4E 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  9278 3F50 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9279
  9280 				; optimize OK (fight_utils.pas), line = 183
  9281
  9282 3F53 A9 00			lda #$00
  9283 3F55 20 88 1C			jsr B_CRT.CRT_WRITE_054D
  9284
  9285 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 184
  9286
  9287 3F58 E8				inx
  9288 3F59 AD 30 A4 95 94		mva FIGHT_STRING_4 :STACKORIGIN,x
  9289 3F5E AD 31 A4 95 A4		mva FIGHT_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
  9290 3F63 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9291
  9292 				; optimize OK (fight_utils.pas), line = 185
  9293
  9294 3F66 A9 46			lda #$46
  9295 3F68 20 60 25			jsr WAITFRAMES
  9296
  9297 				; optimize OK (fight_utils.pas), line = 186
  9298
  9299 3F6B AD 90 B9			lda T
  9300 3F6E 0A				asl @
  9301 3F6F A8				tay
  9302 3F70 B9 05 EC			lda adr.FP_POSW,y
  9303 3F73 8D 78 B9			sta FIGHT_CLEARPLAYER.P
  9304 3F76 B9 06 EC			lda adr.FP_POSW+1,y
  9305 3F79 8D 79 B9			sta FIGHT_CLEARPLAYER.P+1
  9306 3F7C 20 38 3B			jsr FIGHT_CLEARPLAYER
  9307 3F7F 4C 8F 3F			jmp l_1E9A
  9308 3F82			l_1E70
  9309
  9310 				; optimize OK (fight_utils.pas), line = 189
  9311
  9312 3F82 AC 90 B9			ldy T
  9313 3F85 B9 85 EC			lda adr.FP_ENERGY,y
  9314 3F88 38 ED 91 B9			sub HIT
  9315 3F8C 99 85 EC			sta adr.FP_ENERGY,y
  9316 3F8F			l_1E9A
  9317
  9318 				; optimize OK (fight_utils.pas), line = 190
  9319
  9320 3F8F AD 90 B9			lda T
  9321 3F92 8D 89 B9			sta RESULT
  9322
  9323 				; optimize OK (fight_utils.pas), line = 192
  9324
  9325 3F95 A9 00			lda #$00
  9326 3F97 A0 27			ldy #$27
  9327 3F99 99 20 F7 88 10 FA		sta:rpl $F720,y-
  9328 3F9F 4C D0 3F			jmp @exit
  9329 3FA2			l_1DCB
  9330
  9331 				; --- ForToDoEpilog
  9332 3FA2			c_1D00
  9333 3FA2 EE 8E B9			inc V
  9334 3FA5 F0 03 4C 98 3D		jne l_1D00
  9335 3FAA			l_1D0E
  9336 3FAA			b_1D00
  9337
  9338 				; optimize OK (fight_utils.pas), line = 197
  9339
  9340 3FAA A9 00			lda #$00
  9341 3FAC 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  9342 3FAF A9 14			lda #$14
  9343 3FB1 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  9344 3FB4 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  9345
  9346 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 198
  9347
  9348 3FB7 E8				inx
  9349 3FB8 AD 32 A4 95 94		mva FIGHT_STRING_5 :STACKORIGIN,x
  9350 3FBD AD 33 A4 95 A4		mva FIGHT_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
  9351 3FC2 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9352
  9353 				; optimize OK (fight_utils.pas), line = 199
  9354
  9355 3FC5 A9 05			lda #$05
  9356 3FC7 20 60 25			jsr WAITFRAMES
  9357
  9358 				; optimize OK (fight_utils.pas), line = 200
  9359
  9360 3FCA AD 92 B9			lda HITPLAYER
  9361 3FCD 8D 89 B9			sta RESULT
  9362 3FD0			@exit
  9363
  9364 				; ------------------------------------------------------------
  9365
  9366 = B989			RESULT	= DATAORIGIN+$1514
  9367 = B98A			K	= DATAORIGIN+$1515
  9368 = B98C			E	= DATAORIGIN+$1517
  9369 = B98D			R	= DATAORIGIN+$1518
  9370 = B98E			V	= DATAORIGIN+$1519
  9371 = B98F			W	= DATAORIGIN+$151A
  9372 = B990			T	= DATAORIGIN+$151B
  9373 = B991			HIT	= DATAORIGIN+$151C
  9374 = B992			HITPLAYER	= DATAORIGIN+$151D
  9375 = B993			T1	= DATAORIGIN+$151E
  9376 = B994			T2	= DATAORIGIN+$151F
  9377 = B995			T3	= DATAORIGIN+$1520
  9378 = B996			T4	= DATAORIGIN+$1521
  9379 = B997			adr.ST	= [DATAORIGIN+$1522] .array [41]
  9380 3FD0			.var ST	= adr.ST .word
  9381
  9382 = B98A			@VarData	= K
  9383 = 0036			@VarDataSize	= 54
  9384
  9385 3FD0 60				rts						; ret
  9386 = 3FD1 97 B9		ST
  9386 				.endl
  9387
  9388 3FD3			.local	FIGHT_CHECKWINNER				; PROCEDURE
  9389
  9390 				; optimize OK (fight_utils.pas), line = 210
  9391
  9392 3FD3 A9 00			lda #$00
  9393 3FD5 8D C0 B9			sta S
  9394
  9395 3FD8			l_1ED8
  9396 				; --- ForToDoCondition
  9397 3FD8 AD C0 B9			lda S
  9398 3FDB C9 02			cmp #$02
  9399 3FDD B0 51			jcs l_1EE6
  9400
  9401 				; optimize OK (fight_utils.pas), line = 212
  9402
  9403 3FDF A9 01			lda #$01
  9404 3FE1 8D C2 B9			sta PARTYDEAD
  9405
  9406 				; optimize OK (fight_utils.pas), line = 213
  9407
  9408 3FE4 A9 00			lda #$00
  9409 3FE6 8D C1 B9			sta I
  9410 3FE9 AC C0 B9			ldy S
  9411 3FEC B9 03 EC			lda adr.FP_N,y
  9412 3FEF 38 E9 01			sub #$01
  9413 3FF2 8D F6 3F			sta @FORTMP_1EF9_0
  9414
  9415 3FF5			l_1EFC
  9416 				; --- ForToDoCondition
  9417 3FF5 A9 00			lda @FORTMP_1EF9_0::#$00
  9418 3FF7 CD C1 B9			cmp I
  9419 3FFA 90 1E			jcc l_1F0A
  9420
  9421 				; optimize OK (fight_utils.pas), line = 215
  9422
  9423 3FFC AD C0 B9			lda S
  9424 3FFF 0A				asl @
  9425 4000 0A				asl @
  9426 4001 0A				asl @
  9427 4002 0A				asl @
  9428 4003 18 6D C1 B9			add I
  9429 4007 A8				tay
  9430 4008 B9 85 EC			lda adr.FP_ENERGY,y
  9431 400B D0 03			jne l_1F29
  9432 400D 4C 15 40			jmp c_1EFC					; continue
  9433 4010			l_1F29
  9434
  9435 				; optimize OK (fight_utils.pas), line = 217
  9436
  9437 4010 A9 00			lda #$00
  9438 4012 8D C2 B9			sta PARTYDEAD
  9439
  9440 				; --- ForToDoEpilog
  9441 4015			c_1EFC
  9442 4015 EE C1 B9			inc I
  9443 4018 D0 DB			jne l_1EFC
  9444 401A			l_1F0A
  9445
  9446 				; optimize OK (fight_utils.pas), line = 219
  9447
  9448 401A AD C2 B9			lda PARTYDEAD
  9449 401D F0 0C			jeq l_1F47
  9450
  9451 				; optimize OK (fight_utils.pas), line = 221
  9452
  9453 401F A9 01			lda #$01
  9454 4021 38 ED C0 B9			sub S
  9455 4025 8D 00 EC			sta FP_WINNER
  9456 4028 4C 30 40			jmp @exit
  9457 402B			l_1F47
  9458
  9459 				; --- ForToDoEpilog
  9460 402B EE C0 B9			inc S
  9461 402E D0 A8			jne l_1ED8
  9462 4030			l_1EE6
  9463
  9464 				; ------------------------------------------------------------
  9465
  9466 = B9C0			S	= DATAORIGIN+$154B
  9467 = B9C1			I	= DATAORIGIN+$154C
  9468 = B9C2			PARTYDEAD	= DATAORIGIN+$154D
  9469
  9470 = B9C0			@VarData	= S
  9471 = 0003			@VarDataSize	= 3
  9472
  9473 4030			@exit
  9474 					.ifdef @new
  9475 					lda <@VarData
  9476 					sta :ztmp
  9477 					lda >@VarData
  9478 					ldy #@VarDataSize-1
  9479 					jmp @FreeMem
  9480 					els
  9481 4030 60				rts						; ret
  9482 					eif
  9483 				.endl
  9484
  9485 4031			.local	FIGHT_DISPLAYSTATS				; PROCEDURE
  9486
  9487 				; optimize OK (fight_utils.pas), line = 231
  9488
  9489 4031 A9 00			lda #$00
  9490 4033 A0 77			ldy #$77
  9491 4035 99 48 F7 88 10 FA		sta:rpl $F748,y-
  9492
  9493 				; optimize OK (fight_utils.pas), line = 232
  9494
  9495 403B AD E6 EE			lda FP_CURRENTSITE
  9496 403E D0 72			jne l_1F73
  9497
  9498 				; optimize OK (fight_utils.pas), line = 234
  9499
  9500 4040 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  9501 4043 A9 15			lda #$15
  9502 4045 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  9503 4048 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  9504
  9505 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 235
  9506
  9507 404B E8				inx
  9508 404C AD E5 EE			lda FP_CURRENTPLAYER
  9509 404F 0A				asl @
  9510 4050 A8				tay
  9511 4051 B9 7C B0			lda adr.FP_NAME,y
  9512 4054 95 94			sta :STACKORIGIN,x
  9513 4056 B9 7D B0			lda adr.FP_NAME+1,y
  9514 4059 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  9515 405B 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9516
  9517 				; optimize OK (fight_utils.pas), line = 236
  9518
  9519 405E A9 00			lda #$00
  9520 4060 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  9521 4063 A9 16			lda #$16
  9522 4065 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  9523 4068 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  9524
  9525 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 237
  9526
  9527 406B E8				inx
  9528 406C A9 A6 95 94			mva #$A6 :STACKORIGIN,x
  9529 4070 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  9530 4074 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9531
  9532 				; optimize OK (fight_utils.pas), line = 238
  9533
  9534 4077 AC E5 EE			ldy FP_CURRENTPLAYER
  9535 407A B9 85 EC			lda adr.FP_ENERGY,y
  9536 407D 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
  9537
  9538 				; optimize OK (fight_utils.pas), line = 239
  9539
  9540 4080 A9 00			lda #$00
  9541 4082 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
  9542 4085 A9 17			lda #$17
  9543 4087 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
  9544 408A 20 C5 1B			jsr B_CRT.CRT_GOTOXY
  9545
  9546 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 240
  9547
  9548 408D E8				inx
  9549 408E A9 E4 95 94			mva #$E4 :STACKORIGIN,x
  9550 4092 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
  9551 4096 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9552
  9553 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight_utils.pas), line = 241
  9554
  9555 4099 E8				inx
  9556 409A AC E5 EE			ldy FP_CURRENTPLAYER
  9557 409D B9 45 EC			lda adr.FP_WEAPON,y
  9558 40A0 0A				asl @
  9559 40A1 A8				tay
  9560 40A2 B9 F6 AF			lda adr.WEAPONNAMES,y
  9561 40A5 95 94			sta :STACKORIGIN,x
  9562 40A7 B9 F7 AF			lda adr.WEAPONNAMES+1,y
  9563 40AA 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  9564 40AC 20 38 1C			jsr B_CRT.CRT_WRITE_053A
  9565 40AF 4C 41 41			jmp l_1FA0
  9566 40B2			l_1F73
  9567
  9568 				; optimize FAIL ('B_CRT.CRT_WRITERIGHTALIGNED_0722', fight_utils.pas), line = 245
  9569
  9570 40B2 E8				inx
  9571 40B3 AD E5 EE			lda FP_CURRENTPLAYER
  9572 40B6 0A				asl @
  9573 40B7 A8				tay
  9574 40B8 B9 7C B0			lda adr.FP_NAME,y
  9575 40BB 95 94			sta :STACKORIGIN,x
  9576 40BD B9 7D B0			lda adr.FP_NAME+1,y
  9577 40C0 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  9578 40C2 E8				inx
  9579 40C3 A9 15 95 94			mva #$15 :STACKORIGIN,x
  9580 40C7 20 1B 1F			jsr B_CRT.CRT_WRITERIGHTALIGNED_0722
  9581
  9582 				; optimize FAIL ('SYSUTILS.INTTOSTR_03E2', fight_utils.pas), line = 246
  9583
  9584 40CA E8				inx
  9585 40CB AC E5 EE			ldy FP_CURRENTPLAYER
  9586 40CE B9 85 EC			lda adr.FP_ENERGY,y
  9587 40D1 95 94			sta :STACKORIGIN,x
  9588 40D3 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  9589 40D7 95 B4			sta :STACKORIGIN+STACKWIDTH*2,x
  9590 40D9 95 C4			sta :STACKORIGIN+STACKWIDTH*3,x
  9591 40DB 20 7D 19			jsr SYSUTILS.INTTOSTR_03E2
  9592 40DE 20 AB 1A			jsr B_CRT.ATASCII2ANTIC_0448
  9593 40E1 A9 A6			lda #$A6
  9594 40E3 8D 86 A4			sta SYSTEM.CONCAT_032C.A
  9595 40E6 A9 0D			lda #$0D
  9596 40E8 8D 87 A4			sta SYSTEM.CONCAT_032C.A+1
  9597 40EB AD 04 1B			lda B_CRT.ATASCII2ANTIC_0448.RESULT
  9598 40EE 8D 88 A4			sta SYSTEM.CONCAT_032C.B
  9599 40F1 AD 05 1B			lda B_CRT.ATASCII2ANTIC_0448.RESULT+1
  9600 40F4 8D 89 A4			sta SYSTEM.CONCAT_032C.B+1
  9601 40F7 20 58 16			jsr SYSTEM.CONCAT_032C
  9602 40FA E8				inx
  9603 40FB AD 89 16 95 94		mva SYSTEM.CONCAT_032C.RESULT :STACKORIGIN,x
  9604 4100 AD 8A 16 95 A4		mva SYSTEM.CONCAT_032C.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  9605 4105 E8				inx
  9606 4106 A9 16 95 94			mva #$16 :STACKORIGIN,x
  9607 410A 20 1B 1F			jsr B_CRT.CRT_WRITERIGHTALIGNED_0722
  9608
  9609 				; optimize OK (fight_utils.pas), line = 247
  9610
  9611 410D AC E5 EE			ldy FP_CURRENTPLAYER
  9612 4110 B9 45 EC			lda adr.FP_WEAPON,y
  9613 4113 0A				asl @
  9614 4114 A8				tay
  9615 4115 B9 F6 AF			lda adr.WEAPONNAMES,y
  9616 4118 8D 88 A4			sta SYSTEM.CONCAT_032C.B
  9617 411B B9 F7 AF			lda adr.WEAPONNAMES+1,y
  9618 411E 8D 89 A4			sta SYSTEM.CONCAT_032C.B+1
  9619 4121 A9 E4			lda #$E4
  9620 4123 8D 86 A4			sta SYSTEM.CONCAT_032C.A
  9621 4126 A9 0D			lda #$0D
  9622 4128 8D 87 A4			sta SYSTEM.CONCAT_032C.A+1
  9623 412B 20 58 16			jsr SYSTEM.CONCAT_032C
  9624 412E E8				inx
  9625 412F AD 89 16 95 94		mva SYSTEM.CONCAT_032C.RESULT :STACKORIGIN,x
  9626 4134 AD 8A 16 95 A4		mva SYSTEM.CONCAT_032C.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  9627 4139 E8				inx
  9628 413A A9 17 95 94			mva #$17 :STACKORIGIN,x
  9629 413E 20 1B 1F			jsr B_CRT.CRT_WRITERIGHTALIGNED_0722
  9630 4141			l_1FA0
  9631 4141			@exit
  9632 					.ifdef @new
  9633 					lda <@VarData
  9634 					sta :ztmp
  9635 					lda >@VarData
  9636 					ldy #@VarDataSize-1
  9637 					jmp @FreeMem
  9638 					els
  9639 4141 60				rts						; ret
  9640 					eif
  9641 				.endl
  9642
  9643 4142			.local	FIGHT_MOVECURRENTPLAYER				; PROCEDURE
  9644
  9645 				; optimize OK (fight_utils.pas), line = 257
  9646
  9647 4142 A9 00			lda #$00
  9648 4144 8D E8 EE			sta FP_VALIDCMD
  9649
  9650 				; optimize OK (fight_utils.pas), line = 258
  9651
  9652 4147 AD E5 EE			lda FP_CURRENTPLAYER
  9653 414A 0A				asl @
  9654 414B A8				tay
  9655 414C B9 05 EC			lda adr.FP_POSW,y
  9656 414F 8D EF EE			sta F_CURPOS
  9657 4152 A9 F4			lda #$F4
  9658 4154 18 79 06 EC			add adr.FP_POSW+1,y
  9659 4158 8D F0 EE			sta F_CURPOS+1
  9660
  9661 				; optimize OK (fight_utils.pas), line = 259
  9662
  9663 415B A9 02			lda #$02
  9664 415D CD E7 EE			cmp FP_CURRENTCOMMAND
  9665 4160 D0 2A			jne l_1FE5
  9666
  9667 				; optimize OK (fight_utils.pas), line = 260
  9668
  9669 4162 AD EF EE			lda F_CURPOS
  9670 4165 38 E9 01			sub #$01
  9671 4168 85 9D			sta :STACKORIGIN+9
  9672 416A AD F0 EE			lda F_CURPOS+1
  9673 416D E9 00			sbc #$00
  9674 416F 85 81			sta :bp+1
  9675 4171 A4 9D			ldy :STACKORIGIN+9
  9676 4173 B1 80			lda (:bp),y
  9677 4175 D0 15			jne l_1FFC
  9678
  9679 				; optimize OK (fight_utils.pas), line = 261
  9680
  9681 4177 AC EF EE 84 82 AC + 	mwy F_CURPOS :bp2
  9682 4181 A0 27			ldy #$27
  9683 4183 B1 82			lda (:bp2),y
  9684 4185 D0 05			jne l_2017
  9685
  9686 				; optimize OK (fight_utils.pas), line = 262
  9687
  9688 4187 A9 FF			lda #$FF
  9689 4189 8D E8 EE			sta FP_VALIDCMD
  9690 418C			l_2017
  9691 418C			l_1FFC
  9692 418C			l_1FE5
  9693
  9694 				; optimize OK (fight_utils.pas), line = 264
  9695
  9696 418C A9 73			lda #$73
  9697 418E CD E7 EE			cmp FP_CURRENTCOMMAND
  9698 4191 D0 1B			jne l_2034
  9699
  9700 				; optimize OK (fight_utils.pas), line = 265
  9701
  9702 4193 AC EF EE 84 82 AC + 	mwy F_CURPOS :bp2
  9703 419D A0 02			ldy #$02
  9704 419F B1 82			lda (:bp2),y
  9705 41A1 D0 0B			jne l_204B
  9706
  9707 				; optimize OK (fight_utils.pas), line = 266
  9708
  9709 41A3 A0 2A			ldy #$2A
  9710 41A5 B1 82			lda (:bp2),y
  9711 41A7 D0 05			jne l_2066
  9712
  9713 				; optimize OK (fight_utils.pas), line = 267
  9714
  9715 41A9 A9 01			lda #$01
  9716 41AB 8D E8 EE			sta FP_VALIDCMD
  9717 41AE			l_2066
  9718 41AE			l_204B
  9719 41AE			l_2034
  9720
  9721 				; optimize OK (fight_utils.pas), line = 269
  9722
  9723 41AE A9 60			lda #$60
  9724 41B0 CD E7 EE			cmp FP_CURRENTCOMMAND
  9725 41B3 D0 2F			jne l_2083
  9726
  9727 				; optimize OK (fight_utils.pas), line = 270
  9728
  9729 41B5 AD EF EE			lda F_CURPOS
  9730 41B8 38 E9 28			sub #$28
  9731 41BB 85 9D			sta :STACKORIGIN+9
  9732 41BD AD F0 EE			lda F_CURPOS+1
  9733 41C0 E9 00			sbc #$00
  9734 41C2 85 81			sta :bp+1
  9735 41C4 A4 9D			ldy :STACKORIGIN+9
  9736 41C6 B1 80			lda (:bp),y
  9737 41C8 D0 1A			jne l_209A
  9738
  9739 				; optimize OK (fight_utils.pas), line = 271
  9740
  9741 41CA AD EF EE			lda F_CURPOS
  9742 41CD 18 69 D9			add #$D9
  9743 41D0 85 9D			sta :STACKORIGIN+9
  9744 41D2 AD F0 EE			lda F_CURPOS+1
  9745 41D5 69 FF			adc #$FF
  9746 41D7 85 81			sta :bp+1
  9747 41D9 A4 9D			ldy :STACKORIGIN+9
  9748 41DB B1 80			lda (:bp),y
  9749 41DD D0 05			jne l_20B5
  9750
  9751 				; optimize OK (fight_utils.pas), line = 272
  9752
  9753 41DF A9 D8			lda #$D8
  9754 41E1 8D E8 EE			sta FP_VALIDCMD
  9755 41E4			l_20B5
  9756 41E4			l_209A
  9757 41E4			l_2083
  9758
  9759 				; optimize OK (fight_utils.pas), line = 274
  9760
  9761 41E4 A9 26			lda #$26
  9762 41E6 CD E7 EE			cmp FP_CURRENTCOMMAND
  9763 41E9 D0 1A			jne l_20D2
  9764
  9765 				; optimize OK (fight_utils.pas), line = 275
  9766
  9767 41EB AC EF EE 84 82 AC + 	mwy F_CURPOS :bp2
  9768 41F5 A0 50			ldy #$50
  9769 41F7 B1 82			lda (:bp2),y
  9770 41F9 D0 0A			jne l_20E9
  9771
  9772 				; optimize OK (fight_utils.pas), line = 276
  9773
  9774 41FB C8				iny
  9775 41FC B1 82			lda (:bp2),y
  9776 41FE D0 05			jne l_2104
  9777
  9778 				; optimize OK (fight_utils.pas), line = 277
  9779
  9780 4200 A9 28			lda #$28
  9781 4202 8D E8 EE			sta FP_VALIDCMD
  9782 4205			l_2104
  9783 4205			l_20E9
  9784 4205			l_20D2
  9785
  9786 				; optimize OK (fight_utils.pas), line = 279
  9787
  9788 4205 AD E8 EE			lda FP_VALIDCMD
  9789 4208 F0 36			jeq l_2121
  9790
  9791 				; optimize FAIL ('FIGHT_CLEARCURRENTPLAYER', fight_utils.pas), line = 281
  9792
  9793 420A 20 7E 3B			jsr FIGHT_CLEARCURRENTPLAYER
  9794
  9795 				; optimize OK (fight_utils.pas), line = 282
  9796
  9797 420D AD E5 EE			lda FP_CURRENTPLAYER
  9798 4210 0A				asl @
  9799 4211 A8				tay
  9800 4212 B9 05 EC			lda adr.FP_POSW,y
  9801 4215 85 9E			sta :STACKORIGIN+10
  9802 4217 B9 06 EC			lda adr.FP_POSW+1,y
  9803 421A 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  9804 421C A0 00			ldy #$00
  9805 421E AD E8 EE			lda FP_VALIDCMD
  9806 4221 10 01			spl
  9807 4223 88				dey
  9808 4224 84 AF			sty :STACKORIGIN+STACKWIDTH+11
  9809 4226 18 65 9E			add :STACKORIGIN+10
  9810 4229 85 9E			sta :STACKORIGIN+10
  9811 422B A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  9812 422D 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  9813 422F 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  9814 4231 AD E5 EE			lda FP_CURRENTPLAYER
  9815 4234 0A				asl @
  9816 4235 A8				tay
  9817 4236 A5 9E			lda :STACKORIGIN+10
  9818 4238 99 05 EC			sta adr.FP_POSW,y
  9819 423B A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  9820 423D 99 06 EC			sta adr.FP_POSW+1,y
  9821 4240			l_2121
  9822 4240			@exit
  9823 					.ifdef @new
  9824 					lda <@VarData
  9825 					sta :ztmp
  9826 					lda >@VarData
  9827 					ldy #@VarDataSize-1
  9828 					jmp @FreeMem
  9829 					els
  9830 4240 60				rts						; ret
  9831 					eif
  9832 				.endl
  9833
  9834 4241			.local	WAITFORKEYRELEASE				; PROCEDURE
  9835
  9836 				; --- RepeatUntilProlog
  9837 4241			l_213B
  9838
  9839 				; optimize FAIL ('CHECKKEYANDSTICK', fight_utils.pas), line = 293
  9840
  9841 4241 20 E0 20			jsr CHECKKEYANDSTICK
  9842 4244 AD 8B B4			lda CHECKKEYANDSTICK.RESULT
  9843 4247 8D C4 B9			sta CH
  9844
  9845 				; optimize OK (fight_utils.pas), line = 294
  9846
  9847 424A C9 0C			cmp #$0C
  9848 424C F0 F3			jeq l_213B
  9849
  9850 				; ------------------------------------------------------------
  9851
  9852 = B9C4			CH	= DATAORIGIN+$154F
  9853
  9854 = B9C4			@VarData	= CH
  9855 = 0001			@VarDataSize	= 1
  9856
  9857 424E			@exit
  9858 					.ifdef @new
  9859 					lda <@VarData
  9860 					sta :ztmp
  9861 					lda >@VarData
  9862 					ldy #@VarDataSize-1
  9863 					jmp @FreeMem
  9864 					els
  9865 424E 60				rts						; ret
  9866 					eif
  9867 				.endl
  9868
  9869 424F			.local	FIGHT_ATTACKCURRENTPLAYER			; PROCEDURE
  9870
  9871 				; optimize OK (fight_utils.pas), line = 303
  9872
  9873 424F AD E7 EE			lda FP_CURRENTCOMMAND
  9874 4252 C9 0C			cmp #$0C
  9875 4254 F0 03 4C F3 42		jne l_2162
  9876
  9877 				; optimize FAIL ('FIGHT_DRAWCURRENTPLAYER', fight_utils.pas), line = 306
  9878
  9879 4259 20 98 3A			jsr FIGHT_DRAWCURRENTPLAYER
  9880
  9881 				; optimize FAIL ('WAITFORKEYRELEASE', fight_utils.pas), line = 307
  9882
  9883 425C 20 41 42			jsr WAITFORKEYRELEASE
  9884
  9885 				; optimize OK (fight_utils.pas), line = 309
  9886
  9887 425F A9 00			lda #$00
  9888 4261 8D C6 B9			sta CURRENTBLINK
  9889
  9890 				; --- RepeatUntilProlog
  9891 4264			l_216A
  9892
  9893 				; optimize FAIL ('B_SYSTEM.WAITFRAME', fight_utils.pas), line = 311
  9894
  9895 4264 20 5B 1A			jsr B_SYSTEM.WAITFRAME
  9896
  9897 				; optimize OK (fight_utils.pas), line = 312
  9898
  9899 4267 AD C6 B9			lda CURRENTBLINK
  9900 426A C9 05			cmp #$05
  9901 426C D0 03			jne l_217D
  9902
  9903 				; optimize FAIL ('FIGHT_CLEARCURRENTPLAYER', fight_utils.pas), line = 313
  9904
  9905 426E 20 7E 3B			jsr FIGHT_CLEARCURRENTPLAYER
  9906 4271			l_217D
  9907
  9908 				; optimize OK (fight_utils.pas), line = 314
  9909
  9910 4271 AD C6 B9			lda CURRENTBLINK
  9911 4274 C9 0A			cmp #$0A
  9912 4276 D0 08			jne l_2193
  9913
  9914 				; optimize OK (fight_utils.pas), line = 316
  9915
  9916 4278 A9 00			lda #$00
  9917 427A 8D C6 B9			sta CURRENTBLINK
  9918
  9919 				; optimize FAIL ('FIGHT_DRAWCURRENTPLAYER', fight_utils.pas), line = 317
  9920
  9921 427D 20 98 3A			jsr FIGHT_DRAWCURRENTPLAYER
  9922 4280			l_2193
  9923
  9924 				; optimize OK (fight_utils.pas), line = 319
  9925
  9926 4280 EE C6 B9			inc CURRENTBLINK
  9927
  9928 				; optimize FAIL ('CHECKKEYANDSTICK', fight_utils.pas), line = 320
  9929
  9930 4283 20 E0 20			jsr CHECKKEYANDSTICK
  9931 4286 AD 8B B4			lda CHECKKEYANDSTICK.RESULT
  9932 4289 8D C5 B9			sta CH
  9933
  9934 				; optimize OK (fight_utils.pas), line = 321
  9935
  9936 428C C9 26			cmp #$26
  9937 428E F0 10			jeq l_216Ax
  9938 4290 C9 60			cmp #$60
  9939 4292 F0 0C			jeq l_216Ax
  9940 4294 C9 73			cmp #$73
  9941 4296 F0 08			jeq l_216Ax
  9942 4298 C9 02			cmp #$02
  9943 429A F0 04			jeq l_216Ax
  9944 429C C9 0C			cmp #$0C
  9945 429E D0 C4			jne l_216A
  9946 42A0			l_216Ax
  9947
  9948 				; optimize FAIL ('FIGHT_DRAWPLAYERS', fight_utils.pas), line = 323
  9949
  9950 42A0 20 D5 3B			jsr FIGHT_DRAWPLAYERS
  9951
  9952 				; optimize OK (fight_utils.pas), line = 324
  9953
  9954 42A3 AD C5 B9			lda CH
  9955 42A6 8D C7 B9			sta @CASETMP_000E
  9956 42A9 C9 02			cmp #$02
  9957 42AB D0 08			jne l_21F2
  9958 				@
  9959
  9960 				; optimize OK (fight_utils.pas), line = 325
  9961
  9962 42AD A9 FF			lda #$FF
  9963 42AF 8D E9 EE			sta SHOOT_DIFF
  9964 42B2 4C E8 42			jmp a_000E
  9965 42B5			l_21F2
  9966 42B5 C9 73			cmp #$73
  9967 42B7 D0 08			jne l_21FF
  9968
  9969 				; optimize OK (fight_utils.pas), line = 326
  9970
  9971 42B9 A9 01			lda #$01
  9972 42BB 8D E9 EE			sta SHOOT_DIFF
  9973 42BE 4C E8 42			jmp a_000E
  9974 42C1			l_21FF
  9975 42C1 C9 60			cmp #$60
  9976 42C3 D0 08			jne l_220C
  9977
  9978 				; optimize OK (fight_utils.pas), line = 327
  9979
  9980 42C5 A9 D8			lda #$D8
  9981 42C7 8D E9 EE			sta SHOOT_DIFF
  9982 42CA 4C E8 42			jmp a_000E
  9983 42CD			l_220C
  9984 42CD C9 26			cmp #$26
  9985 42CF D0 08			jne l_2219
  9986
  9987 				; optimize OK (fight_utils.pas), line = 328
  9988
  9989 42D1 A9 28			lda #$28
  9990 42D3 8D E9 EE			sta SHOOT_DIFF
  9991 42D6 4C E8 42			jmp a_000E
  9992 42D9			l_2219
  9993 42D9 C9 0C			cmp #$0C
  9994 42DB D0 0B			jne l_2226
  9995
  9996 				; optimize FAIL ('WAITFORKEYRELEASE', fight_utils.pas), line = 331
  9997
  9998 42DD 20 41 42			jsr WAITFORKEYRELEASE
  9999
 10000 				; optimize OK (fight_utils.pas), line = 332
 10001
 10002 42E0 A9 00			lda #$00
 10003 42E2 8D E8 EE			sta FP_VALIDCMD
 10004 42E5 4C F8 42			jmp @exit
 10005 42E8			l_2226
 10006 42E8			a_000E
 10007
 10008 				; optimize FAIL ('FIGHT_SHOOT', fight_utils.pas), line = 336
 10009
 10010 42E8 20 69 3D			jsr FIGHT_SHOOT
 10011
 10012 				; optimize OK (fight_utils.pas), line = 337
 10013
 10014 42EB A9 01			lda #$01
 10015 42ED 8D E8 EE			sta FP_VALIDCMD
 10016 42F0 4C F8 42			jmp @exit
 10017 42F3			l_2162
 10018
 10019 				; optimize OK (fight_utils.pas), line = 340
 10020
 10021 42F3 A9 00			lda #$00
 10022 42F5 8D E8 EE			sta FP_VALIDCMD
 10023
 10024 				; ------------------------------------------------------------
 10025
 10026 = B9C5			CH	= DATAORIGIN+$1550
 10027 = B9C6			CURRENTBLINK	= DATAORIGIN+$1551
 10028 = B9C7			@CASETMP_000E	= DATAORIGIN+$1552
 10029
 10030 = B9C5			@VarData	= CH
 10031 = 0003			@VarDataSize	= 3
 10032
 10033 42F8			@exit
 10034 					.ifdef @new
 10035 					lda <@VarData
 10036 					sta :ztmp
 10037 					lda >@VarData
 10038 					ldy #@VarDataSize-1
 10039 					jmp @FreeMem
 10040 					els
 10041 42F8 60				rts						; ret
 10042 					eif
 10043 				.endl
 10044
 10045 42F9			.local	FIGHT_WAITFORCOMMAND				; PROCEDURE
 10046
 10047 				; optimize OK (fight_utils.pas), line = 350
 10048
 10049 42F9 A9 00			lda #$00
 10050 42FB 8D C9 B9			sta CURRENTBLINK
 10051
 10052 				; --- RepeatUntilProlog
 10053 42FE			l_2248
 10054
 10055 				; optimize FAIL ('B_SYSTEM.WAITFRAME', fight_utils.pas), line = 352
 10056
 10057 42FE 20 5B 1A			jsr B_SYSTEM.WAITFRAME
 10058
 10059 				; optimize OK (fight_utils.pas), line = 353
 10060
 10061 4301 AD C9 B9			lda CURRENTBLINK
 10062 4304 C9 1E			cmp #$1E
 10063 4306 D0 03			jne l_225B
 10064
 10065 				; optimize FAIL ('FIGHT_CLEARCURRENTPLAYER', fight_utils.pas), line = 354
 10066
 10067 4308 20 7E 3B			jsr FIGHT_CLEARCURRENTPLAYER
 10068 430B			l_225B
 10069
 10070 				; optimize OK (fight_utils.pas), line = 355
 10071
 10072 430B AD C9 B9			lda CURRENTBLINK
 10073 430E C9 3C			cmp #$3C
 10074 4310 D0 08			jne l_2271
 10075
 10076 				; optimize OK (fight_utils.pas), line = 357
 10077
 10078 4312 A9 00			lda #$00
 10079 4314 8D C9 B9			sta CURRENTBLINK
 10080
 10081 				; optimize FAIL ('FIGHT_DRAWCURRENTPLAYER', fight_utils.pas), line = 358
 10082
 10083 4317 20 98 3A			jsr FIGHT_DRAWCURRENTPLAYER
 10084 431A			l_2271
 10085
 10086 				; optimize OK (fight_utils.pas), line = 360
 10087
 10088 431A EE C9 B9			inc CURRENTBLINK
 10089
 10090 				; optimize FAIL ('CHECKKEYANDSTICK', fight_utils.pas), line = 361
 10091
 10092 431D 20 E0 20			jsr CHECKKEYANDSTICK
 10093 4320 AD 8B B4			lda CHECKKEYANDSTICK.RESULT
 10094 4323 8D C8 B9			sta CH
 10095
 10096 				; optimize OK (fight_utils.pas), line = 362
 10097
 10098 4326 F0 D6			jeq l_2248
 10099
 10100 				; optimize OK (fight_utils.pas), line = 363
 10101
 10102 4328 8D E7 EE			sta FP_CURRENTCOMMAND
 10103
 10104 				; ------------------------------------------------------------
 10105
 10106 = B9C8			CH	= DATAORIGIN+$1553
 10107 = B9C9			CURRENTBLINK	= DATAORIGIN+$1554
 10108
 10109 = B9C8			@VarData	= CH
 10110 = 0002			@VarDataSize	= 2
 10111
 10112 432B			@exit
 10113 					.ifdef @new
 10114 					lda <@VarData
 10115 					sta :ztmp
 10116 					lda >@VarData
 10117 					ldy #@VarDataSize-1
 10118 					jmp @FreeMem
 10119 					els
 10120 432B 60				rts						; ret
 10121 					eif
 10122 				.endl
 10123
 10124 432C			.local	FIGHT_PLAYERMOVE				; PROCEDURE
 10125
 10126 				; --- RepeatUntilProlog
 10127 432C			l_229F
 10128
 10129 				; optimize FAIL ('FIGHT_WAITFORCOMMAND', fight_utils.pas), line = 371
 10130
 10131 432C 20 F9 42			jsr FIGHT_WAITFORCOMMAND
 10132
 10133 				; optimize OK (fight_utils.pas), line = 374
 10134
 10135 432F AD E7 EE			lda FP_CURRENTCOMMAND
 10136 4332 C9 21			cmp #$21
 10137 4334 D0 03			jne l_22B2
 10138 4336 4C 5C 43			jmp @exit
 10139 4339			l_22B2
 10140
 10141 				; optimize OK (fight_utils.pas), line = 377
 10142
 10143 4339 AD E7 EE			lda FP_CURRENTCOMMAND
 10144 433C C9 2F			cmp #$2F
 10145 433E D0 0C			jne l_22C7
 10146
 10147 				; optimize OK (fight_utils.pas), line = 379
 10148
 10149 4340 A9 01			lda #$01
 10150 4342 38 ED E6 EE			sub FP_CURRENTSITE
 10151 4346 8D 00 EC			sta FP_WINNER
 10152 4349 4C 5C 43			jmp @exit
 10153 434C			l_22C7
 10154
 10155 				; optimize FAIL ('FIGHT_MOVECURRENTPLAYER', fight_utils.pas), line = 384
 10156
 10157 434C 20 42 41			jsr FIGHT_MOVECURRENTPLAYER
 10158
 10159 				; optimize OK (fight_utils.pas), line = 386
 10160
 10161 434F AD E8 EE			lda FP_VALIDCMD
 10162 4352 D0 03			jne l_22E7
 10163
 10164 				; optimize FAIL ('FIGHT_ATTACKCURRENTPLAYER', fight_utils.pas), line = 387
 10165
 10166 4354 20 4F 42			jsr FIGHT_ATTACKCURRENTPLAYER
 10167 4357			l_22E7
 10168
 10169 				; optimize OK (fight_utils.pas), line = 388
 10170
 10171 4357 AD E8 EE			lda FP_VALIDCMD
 10172 435A F0 D0			jeq l_229F
 10173 435C			@exit
 10174 					.ifdef @new
 10175 					lda <@VarData
 10176 					sta :ztmp
 10177 					lda >@VarData
 10178 					ldy #@VarDataSize-1
 10179 					jmp @FreeMem
 10180 					els
 10181 435C 60				rts						; ret
 10182 					eif
 10183 				.endl
 10184
 10185 435D			.local	FIGHT_CHECKSHOOT				; FUNCTION
 10186
 10187 				; optimize OK (fight_ai.pas), line = 8
 10188
 10189 435D A9 00			lda #$00
 10190 435F 8D CA B9			sta RESULT
 10191
 10192 				; optimize FAIL ('FIGHT_SETSHOOTSTART', fight_ai.pas), line = 9
 10193
 10194 4362 20 23 3D			jsr FIGHT_SETSHOOTSTART
 10195
 10196 				; optimize OK (fight_ai.pas), line = 10
 10197
 10198 4365 AD E5 EE			lda FP_CURRENTPLAYER
 10199 4368 0A				asl @
 10200 4369 A8				tay
 10201 436A B9 05 EC			lda adr.FP_POSW,y
 10202 436D 8D EF EE			sta F_CURPOS
 10203 4370 A9 F4			lda #$F4
 10204 4372 18 79 06 EC			add adr.FP_POSW+1,y
 10205 4376 8D F0 EE			sta F_CURPOS+1
 10206
 10207 				; optimize OK (fight_ai.pas), line = 11
 10208
 10209 4379 AC E5 EE			ldy FP_CURRENTPLAYER
 10210 437C B9 45 EC			lda adr.FP_WEAPON,y
 10211 437F A8				tay
 10212 4380 B9 24 E7			lda adr.WEAPONREACH,y
 10213 4383 8D CD B9			sta R
 10214
 10215 				; optimize OK (fight_ai.pas), line = 14
 10216
 10217 4386 A9 00			lda #$00
 10218 4388 8D CE B9			sta V
 10219
 10220 438B			l_2322
 10221 				; --- ForToDoCondition
 10222 438B AD CE B9			lda V
 10223 438E C9 29			cmp #$29
 10224 4390 90 03 4C 5B 44		jcs l_2330
 10225
 10226 				; optimize OK (fight_ai.pas), line = 17
 10227
 10228 4395 CD CD B9			cmp R
 10229 4398 D0 03			jne l_2344
 10230 439A 4C 60 44			jmp @exit
 10231 439D			l_2344
 10232
 10233 				; optimize OK (fight_ai.pas), line = 19
 10234
 10235 439D AD EF EE			lda F_CURPOS
 10236 43A0 18 6D EA EE			add SHOOT_START
 10237 43A4 85 9D			sta :STACKORIGIN+9
 10238 43A6 AD F0 EE			lda F_CURPOS+1
 10239 43A9 6D EB EE			adc SHOOT_START+1
 10240 43AC 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 10241 43AE A0 00			ldy #$00
 10242 43B0 AD E9 EE			lda SHOOT_DIFF
 10243 43B3 10 01			spl
 10244 43B5 88				dey
 10245 43B6 18 65 9D			add :STACKORIGIN+9
 10246 43B9 8D CB B9			sta K
 10247 43BC 98				tya
 10248 43BD 65 AD			adc :STACKORIGIN+STACKWIDTH+9
 10249 43BF 8D CC B9			sta K+1
 10250
 10251 				; optimize OK (fight_ai.pas), line = 20
 10252
 10253 43C2 85 81			sta :bp+1
 10254 43C4 AC CB B9			ldy K
 10255 43C7 B1 80			lda (:bp),y
 10256 43C9 8D CF B9			sta W
 10257
 10258 				; optimize OK (fight_ai.pas), line = 21
 10259
 10260 43CC D0 19			jne l_236F
 10261
 10262 				; optimize OK (fight_ai.pas), line = 23
 10263
 10264 43CE A0 00			ldy #$00
 10265 43D0 AD E9 EE			lda SHOOT_DIFF
 10266 43D3 10 01			spl
 10267 43D5 88				dey
 10268 43D6 18 6D EA EE			add SHOOT_START
 10269 43DA 8D EA EE			sta SHOOT_START
 10270 43DD 98				tya
 10271 43DE 6D EB EE			adc SHOOT_START+1
 10272 43E1 8D EB EE			sta SHOOT_START+1
 10273 43E4 4C 53 44			jmp c_2322					; continue
 10274 43E7			l_236F
 10275
 10276 				; optimize OK (fight_ai.pas), line = 26
 10277
 10278 43E7 AD CF B9			lda W
 10279 43EA C9 01			cmp #$01
 10280 43EC D0 03			jne l_238F
 10281 43EE 4C 5B 44			jmp b_2322					; break
 10282 43F1			l_238F
 10283
 10284 				; optimize OK (fight_ai.pas), line = 29
 10285
 10286 43F1 AD CB B9			lda K
 10287 43F4 8D 80 B9			sta CHECKHIT.K
 10288 43F7 AD CC B9			lda K+1
 10289 43FA 8D 81 B9			sta CHECKHIT.K+1
 10290 43FD 20 3B 3C			jsr CHECKHIT
 10291 4400 AD 82 B9			lda CHECKHIT.RESULT
 10292 4403 8D D0 B9			sta T
 10293
 10294 				; optimize OK (fight_ai.pas), line = 30
 10295
 10296 4406 C9 80			cmp #$80
 10297 4408 D0 03			jne l_23AA
 10298 440A 4C 53 44			jmp c_2322					; continue
 10299 440D			l_23AA
 10300
 10301 				; optimize OK (fight_ai.pas), line = 33
 10302
 10303 440D A0 01			ldy #1
 10304 440F AD E6 EE			lda FP_CURRENTSITE
 10305 4412 F0 01			beq @+
 10306 4414 88				dey
 10307 				@
 10308 4415 84 9D			sty :STACKORIGIN+9
 10309 4417 A0 01			ldy #1
 10310 4419 AD D0 B9			lda T
 10311 441C C9 10			cmp #$10
 10312 441E 90 01			bcc @+
 10313 4420 88				dey
 10314 				@
 10315 4421 98				tya
 10316 4422 25 9D			and :STACKORIGIN+9
 10317 4424 85 9D			sta :STACKORIGIN+9
 10318 4426 A0 01			ldy #1
 10319 4428 AD E6 EE			lda FP_CURRENTSITE
 10320 442B C9 01			cmp #$01
 10321 442D F0 01			beq @+
 10322 442F 88				dey
 10323 				@
 10324 4430 84 9E			sty :STACKORIGIN+10
 10325 4432 A0 01			ldy #1
 10326 4434 AD D0 B9			lda T
 10327 4437 C9 10			cmp #$10
 10328 4439 B0 01			bcs @+
 10329 443B 88				dey
 10330 				@
 10331 443C 98				tya
 10332 443D 25 9E			and :STACKORIGIN+10
 10333 443F 05 9D			ora :STACKORIGIN+9
 10334 4441 F0 08			jeq l_23E3
 10335
 10336 				; optimize OK (fight_ai.pas), line = 35
 10337
 10338 4443 A9 00			lda #$00
 10339 4445 8D CA B9			sta RESULT
 10340 4448 4C 60 44			jmp @exit
 10341 444B			l_23E3
 10342
 10343 				; optimize OK (fight_ai.pas), line = 40
 10344
 10345 444B A9 01			lda #$01
 10346 444D 8D CA B9			sta RESULT
 10347 4450 4C 60 44			jmp @exit
 10348
 10349 				; --- ForToDoEpilog
 10350 4453			c_2322
 10351 4453 EE CE B9			inc V
 10352 4456 F0 03 4C 8B 43		jne l_2322
 10353 445B			l_2330
 10354 445B			b_2322
 10355
 10356 				; optimize OK (fight_ai.pas), line = 44
 10357
 10358 445B A9 00			lda #$00
 10359 445D 8D CA B9			sta RESULT
 10360 4460			@exit
 10361
 10362 				; ------------------------------------------------------------
 10363
 10364 = B9CA			RESULT	= DATAORIGIN+$1555
 10365 = B9CB			K	= DATAORIGIN+$1556
 10366 = B9CD			R	= DATAORIGIN+$1558
 10367 = B9CE			V	= DATAORIGIN+$1559
 10368 = B9CF			W	= DATAORIGIN+$155A
 10369 = B9D0			T	= DATAORIGIN+$155B
 10370
 10371 = B9CB			@VarData	= K
 10372 = 0006			@VarDataSize	= 6
 10373
 10374 4460 60				rts						; ret
 10375 				.endl
 10376
 10377 4461			.local	FIGHT_AIMOVE					; PROCEDURE
 10378
 10379 				; optimize OK (fight_ai.pas), line = 54
 10380
 10381 4461 A9 00			lda #$00
 10382 4463 8D D1 B9			sta S
 10383
 10384 4466			l_2404
 10385 				; --- ForToDoCondition
 10386 4466 AD D1 B9			lda S
 10387 4469 C9 04			cmp #$04
 10388 446B B0 43			jcs l_2412
 10389
 10390 				; optimize OK (fight_ai.pas), line = 56
 10391
 10392 446D 8D DF B9			sta @CASETMP_000F
 10393 4470 C9 00			cmp #$00
 10394 4472 D0 08			jne l_241D
 10395 				@
 10396
 10397 				; optimize OK (fight_ai.pas), line = 57
 10398
 10399 4474 A9 FF			lda #$FF
 10400 4476 8D E9 EE			sta SHOOT_DIFF
 10401 4479 4C 9D 44			jmp a_000F
 10402 447C			l_241D
 10403 447C C9 01			cmp #$01
 10404 447E D0 08			jne l_242A
 10405
 10406 				; optimize OK (fight_ai.pas), line = 58
 10407
 10408 4480 A9 01			lda #$01
 10409 4482 8D E9 EE			sta SHOOT_DIFF
 10410 4485 4C 9D 44			jmp a_000F
 10411 4488			l_242A
 10412 4488 C9 02			cmp #$02
 10413 448A D0 08			jne l_2437
 10414
 10415 				; optimize OK (fight_ai.pas), line = 59
 10416
 10417 448C A9 D8			lda #$D8
 10418 448E 8D E9 EE			sta SHOOT_DIFF
 10419 4491 4C 9D 44			jmp a_000F
 10420 4494			l_2437
 10421 4494 C9 03			cmp #$03
 10422 4496 D0 05			jne l_2444
 10423
 10424 				; optimize OK (fight_ai.pas), line = 60
 10425
 10426 4498 A9 28			lda #$28
 10427 449A 8D E9 EE			sta SHOOT_DIFF
 10428 449D			l_2444
 10429 449D			a_000F
 10430
 10431 				; optimize FAIL ('FIGHT_CHECKSHOOT', fight_ai.pas), line = 62
 10432
 10433 449D 20 5D 43			jsr FIGHT_CHECKSHOOT
 10434 44A0 AD CA B9			lda FIGHT_CHECKSHOOT.RESULT
 10435 44A3 F0 06			jeq l_2460
 10436
 10437 				; optimize FAIL ('FIGHT_SHOOT', fight_ai.pas), line = 64
 10438
 10439 44A5 20 69 3D			jsr FIGHT_SHOOT
 10440 44A8 4C 90 47			jmp @exit
 10441 44AB			l_2460
 10442
 10443 				; --- ForToDoEpilog
 10444 44AB EE D1 B9			inc S
 10445 44AE D0 B6			jne l_2404
 10446 44B0			l_2412
 10447
 10448 				; optimize OK (fight_ai.pas), line = 71
 10449
 10450 44B0 A9 00			lda #$00
 10451 44B2 8D DB B9			sta NE
 10452 44B5 8D DC B9			sta NE+1
 10453
 10454 				; optimize OK (fight_ai.pas), line = 72
 10455
 10456 44B8 A9 E7			lda #$E7
 10457 44BA 8D DD B9			sta ND
 10458 44BD A9 03			lda #$03
 10459 44BF 8D DE B9			sta ND+1
 10460
 10461 				; optimize OK (fight_ai.pas), line = 73
 10462
 10463 44C2 AD E5 EE			lda FP_CURRENTPLAYER
 10464 44C5 0A				asl @
 10465 44C6 A8				tay
 10466 44C7 B9 05 EC			lda adr.FP_POSW,y
 10467 44CA 8D D5 B9			sta CP
 10468 44CD B9 06 EC			lda adr.FP_POSW+1,y
 10469 44D0 8D D6 B9			sta CP+1
 10470
 10471 				; optimize OK (fight_ai.pas), line = 74
 10472
 10473 44D3 A9 00			lda #$00
 10474 44D5 8D D4 B9			sta II
 10475 44D8 A9 01			lda #$01
 10476 44DA 38 ED E6 EE			sub FP_CURRENTSITE
 10477 44DE A8				tay
 10478 44DF B9 03 EC			lda adr.FP_N,y
 10479 44E2 38 E9 01			sub #$01
 10480 44E5 8D E9 44			sta @FORTMP_248C_0
 10481
 10482 44E8			l_248F
 10483 				; --- ForToDoCondition
 10484 44E8 A9 00			lda @FORTMP_248C_0::#$00
 10485 44EA CD D4 B9			cmp II
 10486 44ED B0 03 4C 53 46		jcc l_249D
 10487
 10488 				; optimize OK (fight_ai.pas), line = 77
 10489
 10490 44F2 A9 01			lda #$01
 10491 44F4 38 ED E6 EE			sub FP_CURRENTSITE
 10492 44F8 0A				asl @
 10493 44F9 0A				asl @
 10494 44FA 0A				asl @
 10495 44FB 0A				asl @
 10496 44FC 8D D2 B9			sta DX
 10497
 10498 				; optimize OK (fight_ai.pas), line = 78
 10499
 10500 44FF 18 6D D4 B9			add II
 10501 4503 A8				tay
 10502 4504 B9 85 EC			lda adr.FP_ENERGY,y
 10503 4507 D0 03			jne l_24C6
 10504 4509 4C 4B 46			jmp c_248F					; continue
 10505 450C			l_24C6
 10506
 10507 				; optimize OK (fight_ai.pas), line = 79
 10508
 10509 450C A0 00			ldy #$00
 10510 450E AD D2 B9			lda DX
 10511 4511 10 01			spl
 10512 4513 88				dey
 10513 4514 84 AD			sty :STACKORIGIN+STACKWIDTH+9
 10514 4516 18 6D D4 B9			add II
 10515 451A 85 9D			sta :STACKORIGIN+9
 10516 451C A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 10517 451E 69 00			adc #$00
 10518 4520 06 9D			asl :STACKORIGIN+9
 10519 4522 2A				rol @
 10520 4523 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 10521 4525 A5 9D			lda :STACKORIGIN+9
 10522 4527 18 69 00			add #$00
 10523 452A A8				tay
 10524 452B A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 10525 452D 69 00			adc #$00
 10526 452F 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 10527 4531 B9 05 EC			lda adr.FP_POSW,y
 10528 4534 8D D7 B9			sta EP
 10529 4537 B9 06 EC			lda adr.FP_POSW+1,y
 10530 453A 8D D8 B9			sta EP+1
 10531
 10532 				; optimize OK (fight_ai.pas), line = 81
 10533
 10534 453D A9 28			lda #$28
 10535 453F 85 8C			sta @SMALLINT.MOD.B
 10536 4541 A9 00			lda #$00
 10537 4543 85 8D			sta @SMALLINT.MOD.B+1
 10538 4545 AD D5 B9			lda CP
 10539 4548 85 84			sta @SMALLINT.MOD.A
 10540 454A AD D6 B9			lda CP+1
 10541 454D 85 85			sta @SMALLINT.MOD.A+1
 10542 454F 20 4D 11			jsr @SMALLINT.MOD
 10543 4552 A5 90			lda @SMALLINT.MOD.RESULT
 10544 4554 85 9D			sta :STACKORIGIN+9
 10545 4556 A9 28			lda #$28
 10546 4558 85 8C			sta @SMALLINT.MOD.B
 10547 455A A9 00			lda #$00
 10548 455C 85 8D			sta @SMALLINT.MOD.B+1
 10549 455E AD D7 B9			lda EP
 10550 4561 85 84			sta @SMALLINT.MOD.A
 10551 4563 AD D8 B9			lda EP+1
 10552 4566 85 85			sta @SMALLINT.MOD.A+1
 10553 4568 20 4D 11			jsr @SMALLINT.MOD
 10554 456B A5 9D			lda :STACKORIGIN+9
 10555 456D 38 E5 90			sub @SMALLINT.MOD.RESULT
 10556 4570 8D D2 B9			sta DX
 10557
 10558 				; optimize OK (fight_ai.pas), line = 82
 10559
 10560 4573 A9 28			lda #$28
 10561 4575 85 8C			sta @SMALLINT.DIV.B
 10562 4577 A9 00			lda #$00
 10563 4579 85 8D			sta @SMALLINT.DIV.B+1
 10564 457B AD D5 B9			lda CP
 10565 457E 85 84			sta @SMALLINT.DIV.A
 10566 4580 AD D6 B9			lda CP+1
 10567 4583 85 85			sta @SMALLINT.DIV.A+1
 10568 4585 20 0F 11			jsr @SMALLINT.DIV
 10569 4588 A5 84			lda :eax
 10570 458A 85 9D			sta :STACKORIGIN+9
 10571 458C A9 28			lda #$28
 10572 458E 85 8C			sta @SMALLINT.DIV.B
 10573 4590 A9 00			lda #$00
 10574 4592 85 8D			sta @SMALLINT.DIV.B+1
 10575 4594 AD D7 B9			lda EP
 10576 4597 85 84			sta @SMALLINT.DIV.A
 10577 4599 AD D8 B9			lda EP+1
 10578 459C 85 85			sta @SMALLINT.DIV.A+1
 10579 459E 20 0F 11			jsr @SMALLINT.DIV
 10580 45A1 A5 9D			lda :STACKORIGIN+9
 10581 45A3 38 E5 84			sub :eax
 10582 45A6 8D D3 B9			sta DY
 10583
 10584 				; optimize OK (fight_ai.pas), line = 83
 10585
 10586 45A9 AD D2 B9			lda DX
 10587 45AC C9 80			cmp #$80
 10588 45AE A9 00			lda #$00
 10589 45B0 2A				rol @
 10590 45B1 85 9F			sta :STACKORIGIN+11
 10591 45B3 A9 00			lda #$00
 10592 45B5 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 10593 45B7 A5 9F			lda :STACKORIGIN+11
 10594 45B9 0A				asl @
 10595 45BA 26 AF			rol :STACKORIGIN+STACKWIDTH+11
 10596 45BC 85 9F			sta :STACKORIGIN+11
 10597 45BE A9 01			lda #$01
 10598 45C0 38 E5 9F			sub :STACKORIGIN+11
 10599 45C3 85 8C			sta :ecx
 10600 45C5 A9 00			lda #$00
 10601 45C7 E5 AF			sbc :STACKORIGIN+STACKWIDTH+11
 10602 45C9 85 8D			sta :ecx+1
 10603 45CB A0 00			ldy #$00
 10604 45CD AD D2 B9			lda DX
 10605 45D0 10 01			spl
 10606 45D2 88				dey
 10607 45D3 84 85			sty :eax+1
 10608 45D5 85 84			sta :eax
 10609 					.ifdef fmulinit
 10610 					fmulu_16
 10611 					els
 10612 45D7 20 23 12			imulCX
 10613 					eif
 10614 45DA A5 84			lda :eax
 10615 45DC 85 9D			sta :STACKORIGIN+9
 10616 45DE A5 85			lda :eax+1
 10617 45E0 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 10618 45E2 AD D3 B9			lda DY
 10619 45E5 C9 80			cmp #$80
 10620 45E7 A9 00			lda #$00
 10621 45E9 2A				rol @
 10622 45EA 85 A0			sta :STACKORIGIN+12
 10623 45EC A9 00			lda #$00
 10624 45EE 85 B0			sta :STACKORIGIN+STACKWIDTH+12
 10625 45F0 A5 A0			lda :STACKORIGIN+12
 10626 45F2 0A				asl @
 10627 45F3 26 B0			rol :STACKORIGIN+STACKWIDTH+12
 10628 45F5 85 A0			sta :STACKORIGIN+12
 10629 45F7 A9 01			lda #$01
 10630 45F9 38 E5 A0			sub :STACKORIGIN+12
 10631 45FC 85 8C			sta :ecx
 10632 45FE A9 00			lda #$00
 10633 4600 E5 B0			sbc :STACKORIGIN+STACKWIDTH+12
 10634 4602 85 8D			sta :ecx+1
 10635 4604 A0 00			ldy #$00
 10636 4606 AD D3 B9			lda DY
 10637 4609 10 01			spl
 10638 460B 88				dey
 10639 460C 84 85			sty :eax+1
 10640 460E 85 84			sta :eax
 10641 					.ifdef fmulinit
 10642 					fmulu_16
 10643 					els
 10644 4610 20 23 12			imulCX
 10645 					eif
 10646 4613 A5 9D			lda :STACKORIGIN+9
 10647 4615 18 65 84			add :eax
 10648 4618 8D D9 B9			sta DIST
 10649 461B A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 10650 461D 65 85			adc :eax+1
 10651 461F 8D DA B9			sta DIST+1
 10652
 10653 				; optimize OK (fight_ai.pas), line = 84
 10654
 10655 4622 AD D9 B9			lda DIST
 10656 4625 CD DD B9			cmp ND
 10657 4628 AD DA B9			lda DIST+1
 10658 462B ED DE B9			sbc ND+1
 10659 462E 50 02			svc
 10660 4630 49 80			eor #$80
 10661 4632 10 17			jpl l_2541
 10662
 10663 				; optimize OK (fight_ai.pas), line = 86
 10664
 10665 4634 AD D4 B9			lda II
 10666 4637 8D DB B9			sta NE
 10667 463A A9 00			lda #$00
 10668 463C 8D DC B9			sta NE+1
 10669
 10670 				; optimize OK (fight_ai.pas), line = 87
 10671
 10672 463F AD D9 B9			lda DIST
 10673 4642 8D DD B9			sta ND
 10674 4645 AD DA B9			lda DIST+1
 10675 4648 8D DE B9			sta ND+1
 10676 464B			l_2541
 10677
 10678 				; --- ForToDoEpilog
 10679 464B			c_248F
 10680 464B EE D4 B9			inc II
 10681 464E F0 03 4C E8 44		jne l_248F
 10682 4653			l_249D
 10683
 10684 				; optimize OK (fight_ai.pas), line = 96
 10685
 10686 4653 A9 01			lda #$01
 10687 4655 38 ED E6 EE			sub FP_CURRENTSITE
 10688 4659 0A				asl @
 10689 465A 0A				asl @
 10690 465B 0A				asl @
 10691 465C 0A				asl @
 10692 465D 8D D2 B9			sta DX
 10693
 10694 				; optimize OK (fight_ai.pas), line = 97
 10695
 10696 4660 18 6D DB B9			add NE
 10697 4664 8D D2 B9			sta DX
 10698
 10699 				; optimize OK (fight_ai.pas), line = 98
 10700
 10701 4667 0A				asl @
 10702 4668 A8				tay
 10703 4669 B9 05 EC			lda adr.FP_POSW,y
 10704 466C 8D D7 B9			sta EP
 10705 466F B9 06 EC			lda adr.FP_POSW+1,y
 10706 4672 8D D8 B9			sta EP+1
 10707
 10708 				; optimize OK (fight_ai.pas), line = 99
 10709
 10710 4675 A9 28			lda #$28
 10711 4677 85 8C			sta @SMALLINT.MOD.B
 10712 4679 A9 00			lda #$00
 10713 467B 85 8D			sta @SMALLINT.MOD.B+1
 10714 467D AD D5 B9			lda CP
 10715 4680 85 84			sta @SMALLINT.MOD.A
 10716 4682 AD D6 B9			lda CP+1
 10717 4685 85 85			sta @SMALLINT.MOD.A+1
 10718 4687 20 4D 11			jsr @SMALLINT.MOD
 10719 468A A5 90			lda @SMALLINT.MOD.RESULT
 10720 468C 85 9D			sta :STACKORIGIN+9
 10721 468E A9 28			lda #$28
 10722 4690 85 8C			sta @SMALLINT.MOD.B
 10723 4692 A9 00			lda #$00
 10724 4694 85 8D			sta @SMALLINT.MOD.B+1
 10725 4696 AD D7 B9			lda EP
 10726 4699 85 84			sta @SMALLINT.MOD.A
 10727 469B AD D8 B9			lda EP+1
 10728 469E 85 85			sta @SMALLINT.MOD.A+1
 10729 46A0 20 4D 11			jsr @SMALLINT.MOD
 10730 46A3 A5 9D			lda :STACKORIGIN+9
 10731 46A5 38 E5 90			sub @SMALLINT.MOD.RESULT
 10732 46A8 8D D2 B9			sta DX
 10733
 10734 				; optimize OK (fight_ai.pas), line = 100
 10735
 10736 46AB A9 28			lda #$28
 10737 46AD 85 8C			sta @SMALLINT.DIV.B
 10738 46AF A9 00			lda #$00
 10739 46B1 85 8D			sta @SMALLINT.DIV.B+1
 10740 46B3 AD D5 B9			lda CP
 10741 46B6 85 84			sta @SMALLINT.DIV.A
 10742 46B8 AD D6 B9			lda CP+1
 10743 46BB 85 85			sta @SMALLINT.DIV.A+1
 10744 46BD 20 0F 11			jsr @SMALLINT.DIV
 10745 46C0 A5 84			lda :eax
 10746 46C2 85 9D			sta :STACKORIGIN+9
 10747 46C4 A9 28			lda #$28
 10748 46C6 85 8C			sta @SMALLINT.DIV.B
 10749 46C8 A9 00			lda #$00
 10750 46CA 85 8D			sta @SMALLINT.DIV.B+1
 10751 46CC AD D7 B9			lda EP
 10752 46CF 85 84			sta @SMALLINT.DIV.A
 10753 46D1 AD D8 B9			lda EP+1
 10754 46D4 85 85			sta @SMALLINT.DIV.A+1
 10755 46D6 20 0F 11			jsr @SMALLINT.DIV
 10756 46D9 A5 9D			lda :STACKORIGIN+9
 10757 46DB 38 E5 84			sub :eax
 10758 46DE 8D D3 B9			sta DY
 10759
 10760 				; optimize OK (fight_ai.pas), line = 103
 10761
 10762 46E1 A9 02			lda #$02
 10763 46E3 20 CB 15			jsr SYSTEM.RANDOM_02E9
 10764 46E6 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 10765 46E9 C9 01			cmp #$01
 10766 46EB D0 0F			jne l_25AA
 10767
 10768 				; optimize OK (fight_ai.pas), line = 105
 10769
 10770 46ED AD D2 B9			lda DX
 10771 46F0 10 05			jpl l_25BD
 10772 46F2 A9 73			lda #$73
 10773 46F4 4C F9 46			jmp l_25CB
 10774 46F7			l_25BD
 10775 46F7 A9 02			lda #$02
 10776 46F9			l_25CB
 10777 46F9 4C 08 47			jmp l_25D8
 10778 46FC			l_25AA
 10779
 10780 				; optimize OK (fight_ai.pas), line = 109
 10781
 10782 46FC AD D3 B9			lda DY
 10783 46FF 10 05			jpl l_25EA
 10784 4701 A9 26			lda #$26
 10785 4703 4C 08 47			jmp l_25F8
 10786 4706			l_25EA
 10787 4706 A9 60			lda #$60
 10788 4708			l_25D8
 10789 4708			l_25F8
 10790 4708 8D E7 EE			sta FP_CURRENTCOMMAND
 10791
 10792 				; optimize FAIL ('FIGHT_CLEARCURRENTPLAYER', fight_ai.pas), line = 113
 10793
 10794 470B 20 7E 3B			jsr FIGHT_CLEARCURRENTPLAYER
 10795
 10796 				; optimize FAIL ('FIGHT_MOVECURRENTPLAYER', fight_ai.pas), line = 114
 10797
 10798 470E 20 42 41			jsr FIGHT_MOVECURRENTPLAYER
 10799
 10800 				; optimize OK (fight_ai.pas), line = 116
 10801
 10802 4711 AD E8 EE			lda FP_VALIDCMD
 10803 4714 D0 7A			jne l_2610
 10804
 10805 				; optimize OK (fight_ai.pas), line = 118
 10806
 10807 4716 AD E7 EE			lda FP_CURRENTCOMMAND
 10808 4719 8D E1 B9			sta @CASETMP_0010
 10809 471C C9 26			cmp #$26
 10810 471E D0 19			jne l_261C
 10811 				@
 10812
 10813 				; optimize OK (fight_ai.pas), line = 119
 10814
 10815 4720 A9 02			lda #$02
 10816 4722 20 CB 15			jsr SYSTEM.RANDOM_02E9
 10817 4725 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 10818 4728 C9 01			cmp #$01
 10819 472A D0 05			jne l_262D
 10820 472C A9 02			lda #$02
 10821 472E 4C 33 47			jmp l_263B
 10822 4731			l_262D
 10823 4731 A9 73			lda #$73
 10824 4733			l_263B
 10825 4733 8D E7 EE			sta FP_CURRENTCOMMAND
 10826 4736 4C 8D 47			jmp a_0010
 10827 4739			l_261C
 10828 4739 C9 60			cmp #$60
 10829 473B D0 19			jne l_2648
 10830
 10831 				; optimize OK (fight_ai.pas), line = 120
 10832
 10833 473D A9 02			lda #$02
 10834 473F 20 CB 15			jsr SYSTEM.RANDOM_02E9
 10835 4742 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 10836 4745 C9 01			cmp #$01
 10837 4747 D0 05			jne l_2659
 10838 4749 A9 02			lda #$02
 10839 474B 4C 50 47			jmp l_2667
 10840 474E			l_2659
 10841 474E A9 73			lda #$73
 10842 4750			l_2667
 10843 4750 8D E7 EE			sta FP_CURRENTCOMMAND
 10844 4753 4C 8D 47			jmp a_0010
 10845 4756			l_2648
 10846 4756 C9 02			cmp #$02
 10847 4758 D0 19			jne l_2674
 10848
 10849 				; optimize OK (fight_ai.pas), line = 121
 10850
 10851 475A A9 02			lda #$02
 10852 475C 20 CB 15			jsr SYSTEM.RANDOM_02E9
 10853 475F AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 10854 4762 C9 01			cmp #$01
 10855 4764 D0 05			jne l_2685
 10856 4766 A9 26			lda #$26
 10857 4768 4C 6D 47			jmp l_2693
 10858 476B			l_2685
 10859 476B A9 60			lda #$60
 10860 476D			l_2693
 10861 476D 8D E7 EE			sta FP_CURRENTCOMMAND
 10862 4770 4C 8D 47			jmp a_0010
 10863 4773			l_2674
 10864 4773 C9 73			cmp #$73
 10865 4775 D0 16			jne l_26A0
 10866
 10867 				; optimize OK (fight_ai.pas), line = 122
 10868
 10869 4777 A9 02			lda #$02
 10870 4779 20 CB 15			jsr SYSTEM.RANDOM_02E9
 10871 477C AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 10872 477F C9 01			cmp #$01
 10873 4781 D0 05			jne l_26B1
 10874 4783 A9 26			lda #$26
 10875 4785 4C 8A 47			jmp l_26BF
 10876 4788			l_26B1
 10877 4788 A9 60			lda #$60
 10878 478A			l_26BF
 10879 478A 8D E7 EE			sta FP_CURRENTCOMMAND
 10880 478D			l_26A0
 10881 478D			a_0010
 10882
 10883 				; optimize FAIL ('FIGHT_MOVECURRENTPLAYER', fight_ai.pas), line = 124
 10884
 10885 478D 20 42 41			jsr FIGHT_MOVECURRENTPLAYER
 10886 4790			l_2610
 10887
 10888 				; ------------------------------------------------------------
 10889
 10890 = B9D1			S	= DATAORIGIN+$155C
 10891 = B9D2			DX	= DATAORIGIN+$155D
 10892 = B9D3			DY	= DATAORIGIN+$155E
 10893 = B9D4			II	= DATAORIGIN+$155F
 10894 = B9D5			CP	= DATAORIGIN+$1560
 10895 = B9D7			EP	= DATAORIGIN+$1562
 10896 = B9D9			DIST	= DATAORIGIN+$1564
 10897 = B9DB			NE	= DATAORIGIN+$1566
 10898 = B9DD			ND	= DATAORIGIN+$1568
 10899 = B9DF			@CASETMP_000F	= DATAORIGIN+$156A
 10900 = B9E1			@CASETMP_0010	= DATAORIGIN+$156C
 10901
 10902 = B9D1			@VarData	= S
 10903 = 0010			@VarDataSize	= 16
 10904
 10905 4790			@exit
 10906 					.ifdef @new
 10907 					lda <@VarData
 10908 					sta :ztmp
 10909 					lda >@VarData
 10910 					ldy #@VarDataSize-1
 10911 					jmp @FreeMem
 10912 					els
 10913 4790 60				rts						; ret
 10914 					eif
 10915 				.endl
 10916
 10917 4791			.local	SETUPFIGHTARENA					; FUNCTION
 10918
 10919 				; optimize OK (fight.pas), line = 7
 10920
 10921 4791 A9 00			lda #$00
 10922 4793 8D B8 EA			sta PLAYERPOS_X
 10923
 10924 				; optimize OK (fight.pas), line = 8
 10925
 10926 4796 8D B9 EA			sta PLAYERPOS_Y
 10927
 10928 				; optimize OK (fight.pas), line = 10
 10929
 10930 4799 85 88			sta SYSTEM.FILLCHAR_02BB.A
 10931 479B A9 F4			lda #$F4
 10932 479D 85 89			sta SYSTEM.FILLCHAR_02BB.A+1
 10933 479F A9 C0			lda #$C0
 10934 47A1 85 8C			sta SYSTEM.FILLCHAR_02BB.COUNT
 10935 47A3 A9 03			lda #$03
 10936 47A5 85 8D			sta SYSTEM.FILLCHAR_02BB.COUNT+1
 10937 47A7 A9 00			lda #$00
 10938 47A9 85 84			sta SYSTEM.FILLCHAR_02BB.VALUE
 10939 47AB				.LOCAL +MAIN.SYSTEM.FILLCHAR_02BB
 10940 47AB				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_02BB.M@INLINE [Source: main.a65]
     4 47AB 20 8A 10			jsr @fill
Source: main.a65
 10941 					.ENDL
 10942
 10943 				; optimize FAIL ('ENABLEMAPCONSOLE', fight.pas), line = 11
 10944
 10945 47AE 20 DA 25			jsr ENABLEMAPCONSOLE
 10946
 10947 				; optimize OK (fight.pas), line = 12
 10948
 10949 47B1 AD 92 A2			lda FIGHTFNTNAME
 10950 47B4 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 10951 47B7 AD 93 A2			lda FIGHTFNTNAME+1
 10952 47BA 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 10953 47BD A9 00			lda #$00
 10954 47BF 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 10955 47C2 A9 F0			lda #$F0
 10956 47C4 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 10957 47C7 20 65 17			jsr XBAPLIB.XBUNAPL
 10958
 10959 				; optimize OK (fight.pas), line = 13
 10960
 10961 47CA AD 90 A2			lda FIGHTSCRNAME
 10962 47CD 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 10963 47D0 AD 91 A2			lda FIGHTSCRNAME+1
 10964 47D3 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 10965 47D6 A9 00			lda #$00
 10966 47D8 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 10967 47DB A9 F4			lda #$F4
 10968 47DD 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 10969 47E0 20 65 17			jsr XBAPLIB.XBUNAPL
 10970
 10971 				; optimize OK (fight.pas), line = 14
 10972
 10973 47E3 A9 00			lda #$00
 10974 47E5 A0 38			ldy #256-200
 10975 47E7 99 C0 F6 C8 D0 FA		sta:rne $F6F8+200-256,y+
 10976
 10977 				; optimize OK (fight.pas), line = 17
 10978
 10979 47ED A9 01			lda #$01
 10980 47EF 8D 45 E4			sta DIDFIGHT
 10981
 10982 				; optimize OK (fight.pas), line = 19
 10983
 10984 47F2 AD 03 EC			lda adr.FP_N
 10985 47F5 C9 01			cmp #$01
 10986 47F7 90 07			jcc l_270Fx
 10987 47F9 AD 04 EC			lda adr.FP_N+$01
 10988 47FC C9 01			cmp #$01
 10989 47FE B0 17			jcs l_270F
 10990 4800			l_270Fx
 10991
 10992 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', fight.pas), line = 20
 10993
 10994 4800 E8				inx
 10995 4801 A9 E8 95 94			mva #$E8 :STACKORIGIN,x
 10996 4805 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 10997 4809 E8				inx
 10998 480A A9 16 95 94			mva #$16 :STACKORIGIN,x
 10999 480E 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 11000
 11001 				; optimize FAIL ('B_CRT.CRT_READKEY', fight.pas), line = 21
 11002
 11003 4811 20 42 1D			jsr B_CRT.CRT_READKEY
 11004 4814 4C 43 49			jmp @exit
 11005 4817			l_270F
 11006
 11007 				; optimize OK (fight.pas), line = 26
 11008
 11009 4817 A9 00			lda #$00
 11010 4819 8D E3 B9			sta I
 11011
 11012 481C			l_271F
 11013 				; --- ForToDoCondition
 11014 481C AD E3 B9			lda I
 11015 481F C9 20			cmp #$20
 11016 4821 B0 13			jcs l_272D
 11017
 11018 				; optimize OK (fight.pas), line = 27
 11019
 11020 4823 0A				asl @
 11021 4824 A8				tay
 11022 4825 B9 C0 EA			lda adr.FPPOSSTART,y
 11023 4828 99 05 EC			sta adr.FP_POSW,y
 11024 482B B9 C1 EA			lda adr.FPPOSSTART+1,y
 11025 482E 99 06 EC			sta adr.FP_POSW+1,y
 11026
 11027 				; --- ForToDoEpilog
 11028 4831 EE E3 B9			inc I
 11029 4834 D0 E6			jne l_271F
 11030 4836			l_272D
 11031
 11032 				; optimize OK (fight.pas), line = 29
 11033
 11034 4836 A9 00			lda #$00
 11035 4838 8D E4 B9			sta C
 11036
 11037 				; optimize FAIL ('B_CRT.CRT_WRITERIGHTALIGNED_0722', fight.pas), line = 30
 11038
 11039 483B E8				inx
 11040 483C AD 7A B0			lda adr.FP_GANG+$02
 11041 483F 95 94			sta :STACKORIGIN,x
 11042 4841 AD 7B B0			lda adr.FP_GANG+1+$02
 11043 4844 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 11044 4846 E8				inx
 11045 4847 A9 13 95 94			mva #$13 :STACKORIGIN,x
 11046 484B 20 1B 1F			jsr B_CRT.CRT_WRITERIGHTALIGNED_0722
 11047
 11048 				; optimize OK (fight.pas), line = 31
 11049
 11050 484E A9 00			lda #$00
 11051 4850 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 11052 4853 A9 13			lda #$13
 11053 4855 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 11054 4858 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 11055
 11056 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', fight.pas), line = 32
 11057
 11058 485B E8				inx
 11059 485C AD 78 B0			lda adr.FP_GANG+$00
 11060 485F 95 94			sta :STACKORIGIN,x
 11061 4861 AD 79 B0			lda adr.FP_GANG+1+$00
 11062 4864 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 11063 4866 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11064
 11065 				; optimize OK (fight.pas), line = 33
 11066
 11067 4869 A9 00			lda #$00
 11068 486B 8D DB AF			sta B_CRT.CRT_INVERT.X
 11069 486E A9 13			lda #$13
 11070 4870 8D DC AF			sta B_CRT.CRT_INVERT.Y
 11071 4873 AD B0 A6			lda B_CRT.CRT_SCREENWIDTH
 11072 4876 8D DD AF			sta B_CRT.CRT_INVERT.WIDTH
 11073 4879 20 B6 1F			jsr B_CRT.CRT_INVERT
 11074
 11075 				; optimize OK (fight.pas), line = 35
 11076
 11077 487C A9 63			lda #$63
 11078 487E 8D 00 EC			sta FP_WINNER
 11079
 11080 				; --- RepeatUntilProlog
 11081 4881			l_2758
 11082
 11083 				; optimize OK (fight.pas), line = 37
 11084
 11085 4881 A9 00			lda #$00
 11086 4883 8D E6 EE			sta FP_CURRENTSITE
 11087
 11088 4886			l_2761
 11089 				; --- ForToDoCondition
 11090 4886 AD E6 EE			lda FP_CURRENTSITE
 11091 4889 C9 02			cmp #$02
 11092 488B B0 6E			jcs l_276F
 11093
 11094 				; optimize OK (fight.pas), line = 39
 11095
 11096 488D A9 00			lda #$00
 11097 488F 8D E3 B9			sta I
 11098 4892 AC E6 EE			ldy FP_CURRENTSITE
 11099 4895 B9 03 EC			lda adr.FP_N,y
 11100 4898 38 E9 01			sub #$01
 11101 489B 8D 9F 48			sta @FORTMP_277E_0
 11102
 11103 489E			l_2781
 11104 				; --- ForToDoCondition
 11105 489E A9 00			lda @FORTMP_277E_0::#$00
 11106 48A0 CD E3 B9			cmp I
 11107 48A3 90 47			jcc l_278F
 11108
 11109 				; optimize OK (fight.pas), line = 41
 11110
 11111 48A5 AD E6 EE			lda FP_CURRENTSITE
 11112 48A8 0A				asl @
 11113 48A9 0A				asl @
 11114 48AA 0A				asl @
 11115 48AB 0A				asl @
 11116 48AC 18 6D E3 B9			add I
 11117 48B0 8D E5 EE			sta FP_CURRENTPLAYER
 11118
 11119 				; optimize OK (fight.pas), line = 42
 11120
 11121 48B3 A8				tay
 11122 48B4 B9 85 EC			lda adr.FP_ENERGY,y
 11123 48B7 D0 03			jne l_27B4
 11124 48B9 4C E7 48			jmp c_2781					; continue
 11125 48BC			l_27B4
 11126
 11127 				; optimize FAIL ('FIGHT_DISPLAYSTATS', fight.pas), line = 43
 11128
 11129 48BC 20 31 40			jsr FIGHT_DISPLAYSTATS
 11130
 11131 				; optimize FAIL ('FIGHT_DRAWPLAYERS', fight.pas), line = 44
 11132
 11133 48BF 20 D5 3B			jsr FIGHT_DRAWPLAYERS
 11134
 11135 				; optimize OK (fight.pas), line = 45
 11136
 11137 48C2 A9 05			lda #$05
 11138 48C4 20 60 25			jsr WAITFRAMES
 11139
 11140 				; optimize OK (fight.pas), line = 47
 11141
 11142 48C7 AC E6 EE			ldy FP_CURRENTSITE
 11143 48CA B9 01 EC			lda adr.FP_AI,y
 11144 48CD C9 01			cmp #$01
 11145 48CF D0 06			jne l_27D0
 11146 48D1 20 61 44			jsr FIGHT_AIMOVE
 11147 48D4 4C DA 48			jmp l_27DB
 11148 48D7			l_27D0
 11149
 11150 				; optimize FAIL ('FIGHT_PLAYERMOVE', fight.pas), line = 48
 11151
 11152 48D7 20 2C 43			jsr FIGHT_PLAYERMOVE
 11153 48DA			l_27DB
 11154
 11155 				; optimize FAIL ('FIGHT_CHECKWINNER', fight.pas), line = 50
 11156
 11157 48DA 20 D3 3F			jsr FIGHT_CHECKWINNER
 11158
 11159 				; optimize OK (fight.pas), line = 51
 11160
 11161 48DD AD 00 EC			lda FP_WINNER
 11162 48E0 C9 63			cmp #$63
 11163 48E2 F0 03			jeq l_27EF
 11164 48E4 4C EC 48			jmp b_2781					; break
 11165 48E7			l_27EF
 11166
 11167 				; --- ForToDoEpilog
 11168 48E7			c_2781
 11169 48E7 EE E3 B9			inc I
 11170 48EA D0 B2			jne l_2781
 11171 48EC			l_278F
 11172 48EC			b_2781
 11173
 11174 				; optimize OK (fight.pas), line = 53
 11175
 11176 48EC AD 00 EC			lda FP_WINNER
 11177 48EF C9 63			cmp #$63
 11178 48F1 F0 03			jeq l_2809
 11179 48F3 4C FB 48			jmp b_2761					; break
 11180 48F6			l_2809
 11181
 11182 				; --- ForToDoEpilog
 11183 48F6 EE E6 EE			inc FP_CURRENTSITE
 11184 48F9 D0 8B			jne l_2761
 11185 48FB			l_276F
 11186 48FB			b_2761
 11187
 11188 				; optimize OK (fight.pas), line = 55
 11189
 11190 48FB AD 00 EC			lda FP_WINNER
 11191 48FE C9 63			cmp #$63
 11192 4900 D0 03 4C 81 48		jeq l_2758
 11193
 11194 				; optimize OK (fight.pas), line = 58
 11195
 11196 4905 A9 00			lda #$00
 11197 4907 A0 38			ldy #256-200
 11198 4909 99 C0 F6 C8 D0 FA		sta:rne $F6F8+200-256,y+
 11199
 11200 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', fight.pas), line = 59
 11201
 11202 490F E8				inx
 11203 4910 AD 34 A4 95 94		mva FIGHT_STRING_6 :STACKORIGIN,x
 11204 4915 AD 35 A4 95 A4		mva FIGHT_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 11205 491A E8				inx
 11206 491B A9 15 95 94			mva #$15 :STACKORIGIN,x
 11207 491F 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 11208
 11209 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', fight.pas), line = 60
 11210
 11211 4922 E8				inx
 11212 4923 AD 00 EC			lda FP_WINNER
 11213 4926 0A				asl @
 11214 4927 A8				tay
 11215 4928 B9 78 B0			lda adr.FP_GANG,y
 11216 492B 95 94			sta :STACKORIGIN,x
 11217 492D B9 79 B0			lda adr.FP_GANG+1,y
 11218 4930 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 11219 4932 E8				inx
 11220 4933 A9 16 95 94			mva #$16 :STACKORIGIN,x
 11221 4937 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 11222
 11223 				; optimize FAIL ('B_CRT.CRT_READKEY', fight.pas), line = 61
 11224
 11225 493A 20 42 1D			jsr B_CRT.CRT_READKEY
 11226
 11227 				; optimize OK (fight.pas), line = 62
 11228
 11229 493D AD 00 EC			lda FP_WINNER
 11230 4940 8D E2 B9			sta RESULT
 11231 4943			@exit
 11232
 11233 				; ------------------------------------------------------------
 11234
 11235 = B9E2			RESULT	= DATAORIGIN+$156D
 11236 = B9E3			I	= DATAORIGIN+$156E
 11237 = B9E4			C	= DATAORIGIN+$156F
 11238
 11239 = B9E3			@VarData	= I
 11240 = 0002			@VarDataSize	= 2
 11241
 11242 4943 60				rts						; ret
 11243 				.endl
 11244
 11245 4944			.local	DOFIGHT						; FUNCTION
 11246
 11247 				; optimize OK (fight.pas), line = 70
 11248
 11249 4944 A9 01			lda #$01
 11250 4946 8D E6 B9			sta RESULT
 11251
 11252 				; optimize OK (fight.pas), line = 73
 11253
 11254 4949 A9 00			lda #$00
 11255 494B 8D E7 B9			sta J
 11256
 11257 494E			l_2845
 11258 				; --- ForToDoCondition
 11259 494E AC E7 B9			ldy J
 11260 4951 C0 02			cpy #$02
 11261 4953 B0 48			jcs l_2853
 11262
 11263 				; optimize OK (fight.pas), line = 74
 11264
 11265 4955 B9 01 EC			lda adr.FP_AI,y
 11266 4958 C9 01			cmp #$01
 11267 495A D0 3C			jne l_2868
 11268
 11269 				; optimize OK (fight.pas), line = 76
 11270
 11271 495C A9 00			lda #$00
 11272 495E 8D E8 B9			sta K
 11273 4961 B9 03 EC			lda adr.FP_N,y
 11274 4964 38 E9 01			sub #$01
 11275 4967 8D 6B 49			sta @FORTMP_2878_0
 11276
 11277 496A			l_287B
 11278 				; --- ForToDoCondition
 11279 496A A9 00			lda @FORTMP_2878_0::#$00
 11280 496C CD E8 B9			cmp K
 11281 496F 90 27			jcc l_2889
 11282
 11283 				; optimize OK (fight.pas), line = 77
 11284
 11285 4971 AD E7 B9			lda J
 11286 4974 0A				asl @
 11287 4975 0A				asl @
 11288 4976 0A				asl @
 11289 4977 0A				asl @
 11290 4978 18 6D E8 B9			add K
 11291 497C A8				tay
 11292 497D A9 1E			lda #$1E
 11293 497F 99 C5 EC			sta adr.FP_STRENGTH,y
 11294
 11295 				; optimize OK (fight.pas), line = 78
 11296
 11297 4982 AD E7 B9			lda J
 11298 4985 0A				asl @
 11299 4986 0A				asl @
 11300 4987 0A				asl @
 11301 4988 0A				asl @
 11302 4989 18 6D E8 B9			add K
 11303 498D A8				tay
 11304 498E A9 1E			lda #$1E
 11305 4990 99 05 ED			sta adr.FP_BRUTALITY,y
 11306
 11307 				; --- ForToDoEpilog
 11308 4993 EE E8 B9			inc K
 11309 4996 D0 D2			jne l_287B
 11310 4998			l_2889
 11311 4998			l_2868
 11312
 11313 				; --- ForToDoEpilog
 11314 4998 EE E7 B9			inc J
 11315 499B D0 B1			jne l_2845
 11316 499D			l_2853
 11317
 11318 				; optimize OK (fight.pas), line = 83
 11319
 11320 499D AC 1A E4			ldy CURRENTPLAYER
 11321 49A0 B9 41 E4			lda adr.PLNGANGSTERS,y
 11322 49A3 8D 03 EC			sta adr.FP_N
 11323
 11324 				; optimize OK (fight.pas), line = 84
 11325
 11326 49A6 98				tya
 11327 49A7 0A				asl @
 11328 49A8 A8				tay
 11329 49A9 B9 D8 B0			lda adr.PLGANG,y
 11330 49AC 85 88			sta @move.src
 11331 49AE B9 D9 B0			lda adr.PLGANG+1,y
 11332 49B1 85 89			sta @move.src+1
 11333 49B3 AD 78 B0			lda adr.FP_GANG
 11334 49B6 85 8C			sta @move.dst
 11335 49B8 AD 79 B0			lda adr.FP_GANG+1
 11336 49BB 85 8D			sta @move.dst+1
 11337 49BD A0 00			ldy #$00
 11338 49BF B1 88			lda (@move.src),y
 11339 49C1 18 69 01			add #1
 11340 49C4 85 84			sta @move.cnt
 11341 49C6 90 01			scc
 11342 49C8 C8				iny
 11343 49C9 84 85			sty @move.cnt+1
 11344 49CB 20 35 10			jsr @move
 11345
 11346 				; optimize OK (fight.pas), line = 85
 11347
 11348 49CE A9 00			lda #$00
 11349 49D0 8D 01 EC			sta adr.FP_AI
 11350
 11351 				; optimize OK (fight.pas), line = 87
 11352
 11353 49D3 8D E8 B9			sta K
 11354
 11355 				; optimize OK (fight.pas), line = 88
 11356
 11357 49D6 8D E7 B9			sta J
 11358
 11359 49D9			l_28DC
 11360 				; --- ForToDoCondition
 11361 49D9 AC E7 B9			ldy J
 11362 49DC C0 20			cpy #$20
 11363 49DE 90 03 4C 61 4A		jcs l_28EA
 11364
 11365 				; optimize OK (fight.pas), line = 90
 11366
 11367 49E3 B9 21 E4			lda adr.PLGANGSTERS,y
 11368 49E6 CD 1A E4			cmp CURRENTPLAYER
 11369 49E9 D0 6E			jne l_2901
 11370
 11371 				; optimize OK (fight.pas), line = 92
 11372
 11373 49EB AD E7 B9			lda J
 11374 49EE 0A				asl @
 11375 49EF A8				tay
 11376 49F0 B9 E0 B0			lda adr.GANGSTERNAMES,y
 11377 49F3 85 88			sta @move.src
 11378 49F5 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 11379 49F8 85 89			sta @move.src+1
 11380 49FA AD E8 B9			lda K
 11381 49FD 0A				asl @
 11382 49FE A8				tay
 11383 49FF B9 7C B0			lda adr.FP_NAME,y
 11384 4A02 85 8C			sta @move.dst
 11385 4A04 B9 7D B0			lda adr.FP_NAME+1,y
 11386 4A07 85 8D			sta @move.dst+1
 11387 4A09 A0 00			ldy #$00
 11388 4A0B B1 88			lda (@move.src),y
 11389 4A0D 18 69 01			add #1
 11390 4A10 85 84			sta @move.cnt
 11391 4A12 90 01			scc
 11392 4A14 C8				iny
 11393 4A15 84 85			sty @move.cnt+1
 11394 4A17 20 35 10			jsr @move
 11395
 11396 				; optimize OK (fight.pas), line = 93
 11397
 11398 4A1A AC E7 B9			ldy J
 11399 4A1D B9 B8 E3			lda adr.GANGSTERHEALTH,y
 11400 4A20 AC E8 B9			ldy K
 11401 4A23 99 85 EC			sta adr.FP_ENERGY,y
 11402
 11403 				; optimize OK (fight.pas), line = 94
 11404
 11405 4A26 AC E7 B9			ldy J
 11406 4A29 B9 D8 E3			lda adr.GANGSTERWEAPON,y
 11407 4A2C AC E8 B9			ldy K
 11408 4A2F 99 45 EC			sta adr.FP_WEAPON,y
 11409
 11410 				; optimize OK (fight.pas), line = 95
 11411
 11412 4A32 AC E7 B9			ldy J
 11413 4A35 B9 58 E3			lda adr.GANGSTERSTR,y
 11414 4A38 AC E8 B9			ldy K
 11415 4A3B 99 C5 EC			sta adr.FP_STRENGTH,y
 11416
 11417 				; optimize OK (fight.pas), line = 96
 11418
 11419 4A3E AC E7 B9			ldy J
 11420 4A41 B9 98 E3			lda adr.GANGSTERBRUT,y
 11421 4A44 AC E8 B9			ldy K
 11422 4A47 99 05 ED			sta adr.FP_BRUTALITY,y
 11423
 11424 				; optimize OK (fight.pas), line = 97
 11425
 11426 4A4A AC E7 B9			ldy J
 11427 4A4D B9 F8 E3			lda adr.GANGSTERSEX,y
 11428 4A50 AC E8 B9			ldy K
 11429 4A53 99 45 ED			sta adr.FP_SEX,y
 11430
 11431 				; optimize OK (fight.pas), line = 98
 11432
 11433 4A56 EE E8 B9			inc K
 11434 4A59			l_2901
 11435
 11436 				; --- ForToDoEpilog
 11437 4A59 EE E7 B9			inc J
 11438 4A5C F0 03 4C D9 49		jne l_28DC
 11439 4A61			l_28EA
 11440
 11441 				; optimize OK (fight.pas), line = 103
 11442
 11443 4A61 A9 01			lda #$01
 11444 4A63 8D 02 EC			sta adr.FP_AI+$01
 11445
 11446 				; optimize FAIL ('SETUPFIGHTARENA', fight.pas), line = 104
 11447
 11448 4A66 20 91 47			jsr SETUPFIGHTARENA
 11449 4A69 AD E2 B9			lda SETUPFIGHTARENA.RESULT
 11450 4A6C 8D E9 B9			sta W
 11451
 11452 				; optimize OK (fight.pas), line = 107
 11453
 11454 4A6F A9 00			lda #$00
 11455 4A71 8D E8 B9			sta K
 11456
 11457 				; optimize OK (fight.pas), line = 108
 11458
 11459 4A74 8D E7 B9			sta J
 11460
 11461 4A77			l_2970
 11462 				; --- ForToDoCondition
 11463 4A77 AC E7 B9			ldy J
 11464 4A7A C0 20			cpy #$20
 11465 4A7C B0 25			jcs l_297E
 11466
 11467 				; optimize OK (fight.pas), line = 110
 11468
 11469 4A7E B9 21 E4			lda adr.PLGANGSTERS,y
 11470 4A81 CD 1A E4			cmp CURRENTPLAYER
 11471 4A84 D0 18			jne l_2995
 11472
 11473 				; optimize OK (fight.pas), line = 112
 11474
 11475 4A86 AC E8 B9			ldy K
 11476 4A89 B9 85 EC			lda adr.FP_ENERGY,y
 11477 4A8C AC E7 B9			ldy J
 11478 4A8F 99 B8 E3			sta adr.GANGSTERHEALTH,y
 11479
 11480 				; optimize OK (fight.pas), line = 114
 11481
 11482 4A92 C9 05			cmp #$05
 11483 4A94 B0 05			jcs l_29B7
 11484 4A96 A9 05			lda #$05
 11485 4A98 99 B8 E3			sta adr.GANGSTERHEALTH,y
 11486 4A9B			l_29B7
 11487
 11488 				; optimize OK (fight.pas), line = 115
 11489
 11490 4A9B EE E8 B9			inc K
 11491 4A9E			l_2995
 11492
 11493 				; --- ForToDoEpilog
 11494 4A9E EE E7 B9			inc J
 11495 4AA1 D0 D4			jne l_2970
 11496 4AA3			l_297E
 11497
 11498 				; optimize OK (fight.pas), line = 119
 11499
 11500 4AA3 AD E9 B9			lda W
 11501 4AA6 8D E6 B9			sta RESULT
 11502
 11503 				; optimize FAIL ('ENABLEMAPCONSOLE', fight.pas), line = 121
 11504
 11505 4AA9 20 DA 25			jsr ENABLEMAPCONSOLE
 11506 4AAC			@exit
 11507
 11508 				; ------------------------------------------------------------
 11509
 11510 = B9E6			RESULT	= DATAORIGIN+$1571
 11511 = B9E7			J	= DATAORIGIN+$1572
 11512 = B9E8			K	= DATAORIGIN+$1573
 11513 = B9E9			W	= DATAORIGIN+$1574
 11514
 11515 = B9E7			@VarData	= J
 11516 = 0003			@VarDataSize	= 3
 11517
 11518 4AAC 60				rts						; ret
 11519 				.endl
 11520
 11521 4AAD			.local	FIGHTPOLICE					; FUNCTION
 11522
 11523 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', helpersFight.pas), line = 4
 11524
 11525 4AAD 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 11526
 11527 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', helpersFight.pas), line = 5
 11528
 11529 4AB0 E8				inx
 11530 4AB1 AD 52 A4 95 94		mva POLICE_STRING_1 :STACKORIGIN,x
 11531 4AB6 AD 53 A4 95 A4		mva POLICE_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 11532 4ABB 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11533
 11534 				; optimize FAIL ('WAITFORKEY', helpersFight.pas), line = 6
 11535
 11536 4ABE 20 2E 21			jsr WAITFORKEY
 11537
 11538 				; optimize FAIL ('PREPAREFIGHTAGAINSTPOLICE', helpersFight.pas), line = 7
 11539
 11540 4AC1 20 5A 2C			jsr PREPAREFIGHTAGAINSTPOLICE
 11541
 11542 				; optimize FAIL ('DOFIGHT', helpersFight.pas), line = 8
 11543
 11544 4AC4 20 44 49			jsr DOFIGHT
 11545 4AC7 AD E6 B9			lda DOFIGHT.RESULT
 11546 4ACA C9 01			cmp #$01
 11547 4ACC D0 0B			jne l_29F3
 11548
 11549 				; optimize FAIL ('GOTCAUGHT', helpersFight.pas), line = 10
 11550
 11551 4ACE 20 7C 32			jsr GOTCAUGHT
 11552
 11553 				; optimize OK (helpersFight.pas), line = 11
 11554
 11555 4AD1 A9 11			lda #$11
 11556 4AD3 8D EB B9			sta RESULT
 11557 4AD6 4C D9 4A			jmp @exit
 11558 4AD9			l_29F3
 11559 4AD9			@exit
 11560
 11561 				; ------------------------------------------------------------
 11562
 11563 = B9EB			RESULT	= DATAORIGIN+$1576
 11564 4AD9 60				rts						; ret
 11565 				.endl
 11566
 11567 4ADA			.local	INCREASECURRENTGANGSTER				; PROCEDURE
 11568
 11569 				; optimize OK (armsdealer.pas), line = 4
 11570
 11571 4ADA AC 18 E4			ldy CURRENTGANGSTER
 11572 4ADD B9 58 E3			lda adr.GANGSTERSTR,y
 11573 4AE0 18 6D ED B9			add INC_ST
 11574 4AE4 99 58 E3			sta adr.GANGSTERSTR,y
 11575
 11576 				; optimize OK (armsdealer.pas), line = 5
 11577
 11578 4AE7 C9 64			cmp #$64
 11579 4AE9 90 05			jcc l_2A26
 11580
 11581 				; optimize OK (armsdealer.pas), line = 6
 11582
 11583 4AEB A9 63			lda #$63
 11584 4AED 99 58 E3			sta adr.GANGSTERSTR,y
 11585 4AF0			l_2A26
 11586
 11587 				; optimize OK (armsdealer.pas), line = 8
 11588
 11589 4AF0 AC 18 E4			ldy CURRENTGANGSTER
 11590 4AF3 B9 78 E3			lda adr.GANGSTERINT,y
 11591 4AF6 18 6D EE B9			add INC_IN
 11592 4AFA 99 78 E3			sta adr.GANGSTERINT,y
 11593
 11594 				; optimize OK (armsdealer.pas), line = 9
 11595
 11596 4AFD C9 64			cmp #$64
 11597 4AFF 90 05			jcc l_2A57
 11598
 11599 				; optimize OK (armsdealer.pas), line = 10
 11600
 11601 4B01 A9 63			lda #$63
 11602 4B03 99 78 E3			sta adr.GANGSTERINT,y
 11603 4B06			l_2A57
 11604
 11605 				; optimize OK (armsdealer.pas), line = 12
 11606
 11607 4B06 AC 18 E4			ldy CURRENTGANGSTER
 11608 4B09 B9 98 E3			lda adr.GANGSTERBRUT,y
 11609 4B0C 18 6D EF B9			add INC_BT
 11610 4B10 99 98 E3			sta adr.GANGSTERBRUT,y
 11611
 11612 				; optimize OK (armsdealer.pas), line = 13
 11613
 11614 4B13 C9 64			cmp #$64
 11615 4B15 90 05			jcc l_2A88
 11616
 11617 				; optimize OK (armsdealer.pas), line = 14
 11618
 11619 4B17 A9 63			lda #$63
 11620 4B19 99 98 E3			sta adr.GANGSTERBRUT,y
 11621 4B1C			l_2A88
 11622
 11623 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 17
 11624
 11625 4B1C E8				inx
 11626 4B1D AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 11627 4B22 AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 11628 4B27 20 80 21			jsr CRT_WRITELN
 11629
 11630 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 18
 11631
 11632 4B2A E8				inx
 11633 4B2B AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 11634 4B30 AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 11635 4B35 20 80 21			jsr CRT_WRITELN
 11636
 11637 				; ------------------------------------------------------------
 11638
 11639 = B9ED			INC_ST	= DATAORIGIN+$1578
 11640 = B9EE			INC_IN	= DATAORIGIN+$1579
 11641 = B9EF			INC_BT	= DATAORIGIN+$157A
 11642
 11643 = B9ED			@VarData	= INC_ST
 11644 = 0003			@VarDataSize	= 3
 11645
 11646 4B38			@exit
 11647 					.ifdef @new
 11648 					lda <@VarData
 11649 					sta :ztmp
 11650 					lda >@VarData
 11651 					ldy #@VarDataSize-1
 11652 					jmp @FreeMem
 11653 					els
 11654 4B38 60				rts						; ret
 11655 					eif
 11656 				.endl
 11657
 11658 4B39			.local	ARMSDEALERCHOICES				; FUNCTION
 11659
 11660 				; optimize OK (armsdealer.pas), line = 35
 11661
 11662 4B39 AC F1 B9 84 81		mvy CHOICE+1 :bp+1
 11663 4B3E AC F0 B9			ldy CHOICE
 11664 4B41 B1 80			lda (:bp),y
 11665 4B43 C9 01			cmp #$01
 11666 4B45 F0 03 4C 95 4E		jne l_2AAE
 11667
 11668 				; optimize FAIL ('SHOWLOCATIONHEADER', armsdealer.pas), line = 37
 11669
 11670 4B4A 20 1D 26			jsr SHOWLOCATIONHEADER
 11671
 11672 				; optimize FAIL ('CRT_WRITELN2', armsdealer.pas), line = 39
 11673
 11674 4B4D E8				inx
 11675 4B4E AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 11676 4B53 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 11677 4B58 20 4C 21			jsr CRT_WRITELN2
 11678
 11679 				; optimize OK (armsdealer.pas), line = 40
 11680
 11681 4B5B A9 01			lda #$01
 11682 4B5D 8D F5 B9			sta MINWEAPON
 11683
 11684 				; optimize OK (armsdealer.pas), line = 41
 11685
 11686 4B60 A9 05			lda #$05
 11687 4B62 8D F4 B9			sta MAXWEAPON
 11688
 11689 				; optimize OK (armsdealer.pas), line = 42
 11690
 11691 4B65 AD AF B8			lda CURRENTSUBLOCATION
 11692 4B68 C9 02			cmp #$02
 11693 4B6A D0 51			jne l_2ACD
 11694
 11695 				; optimize OK (armsdealer.pas), line = 45
 11696
 11697 4B6C A9 07			lda #$07
 11698 4B6E 8D F4 B9			sta MAXWEAPON
 11699
 11700 				; optimize FAIL (1, armsdealer.pas), line = 46
 11701
 11702 4B71 E8				inx
 11703 4B72 AC 1A E4			ldy CURRENTPLAYER
 11704 4B75 B9 78 E0			lda adr.PLRANK,y
 11705 4B78 A0 01			ldy #1
 11706 4B7A C9 06			cmp #$06
 11707 4B7C B0 01			bcs @+
 11708 4B7E 88				dey
 11709 				@
 11710 4B7F 94 94			sty :STACKORIGIN,x
 11711 4B81 A9 04			lda #$04
 11712 4B83 20 CB 15			jsr SYSTEM.RANDOM_02E9
 11713 4B86 CA				dex
 11714 4B87 A0 01			ldy #1
 11715 4B89 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 11716 4B8C F0 01			beq @+
 11717 4B8E 88				dey
 11718 				@
 11719 4B8F 98				tya
 11720 4B90 35 95			and :STACKORIGIN+1,x
 11721 4B92 F0 24			jeq l_2AF2
 11722
 11723 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 48
 11724
 11725 4B94 E8				inx
 11726 4B95 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 11727 4B9A AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 11728 4B9F 20 80 21			jsr CRT_WRITELN
 11729
 11730 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 49
 11731
 11732 4BA2 E8				inx
 11733 4BA3 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 11734 4BA8 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 11735 4BAD 20 80 21			jsr CRT_WRITELN
 11736
 11737 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 50
 11738
 11739 4BB0 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 11740
 11741 				; optimize OK (armsdealer.pas), line = 51
 11742
 11743 4BB3 A9 08			lda #$08
 11744 4BB5 8D F4 B9			sta MAXWEAPON
 11745 4BB8			l_2AF2
 11746
 11747 				; optimize OK (armsdealer.pas), line = 53
 11748
 11749 4BB8 A9 03			lda #$03
 11750 4BBA 8D F5 B9			sta MINWEAPON
 11751 4BBD			l_2ACD
 11752
 11753 				; optimize OK (armsdealer.pas), line = 56
 11754
 11755 4BBD AD AF B8			lda CURRENTSUBLOCATION
 11756 4BC0 C9 01			cmp #$01
 11757 4BC2 D0 05			jne l_2B18
 11758 4BC4 A9 05			lda #$05
 11759 4BC6 8D F4 B9			sta MAXWEAPON
 11760 4BC9			l_2B18
 11761
 11762 				; optimize OK (armsdealer.pas), line = 57
 11763
 11764 4BC9 AD AF B8			lda CURRENTSUBLOCATION
 11765 4BCC C9 04			cmp #$04
 11766 4BCE D0 0A			jne l_2B31
 11767
 11768 				; optimize OK (armsdealer.pas), line = 59
 11769
 11770 4BD0 A9 02			lda #$02
 11771 4BD2 8D F5 B9			sta MINWEAPON
 11772
 11773 				; optimize OK (armsdealer.pas), line = 60
 11774
 11775 4BD5 A9 06			lda #$06
 11776 4BD7 8D F4 B9			sta MAXWEAPON
 11777 4BDA			l_2B31
 11778
 11779 				; optimize OK (armsdealer.pas), line = 64
 11780
 11781 4BDA AD F5 B9			lda MINWEAPON
 11782 4BDD 8D F3 B9			sta R
 11783
 11784 4BE0			l_2B49
 11785 				; --- ForToDoCondition
 11786 4BE0 AD F3 B9			lda R
 11787 4BE3 CD F4 B9			cmp MAXWEAPON
 11788 4BE6 90 02			scc
 11789 4BE8 D0 59			jne l_2B57
 11790
 11791 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 66
 11792
 11793 4BEA E8				inx
 11794 4BEB A9 76 95 94			mva #$76 :STACKORIGIN,x
 11795 4BEF A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 11796 4BF3 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11797
 11798 				; optimize OK (armsdealer.pas), line = 67
 11799
 11800 4BF6 AD F3 B9			lda R
 11801 4BF9 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 11802
 11803 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 68
 11804
 11805 4BFC E8				inx
 11806 4BFD A9 A1 95 94			mva #$A1 :STACKORIGIN,x
 11807 4C01 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 11808 4C05 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11809
 11810 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 69
 11811
 11812 4C08 E8				inx
 11813 4C09 AD F3 B9			lda R
 11814 4C0C 0A				asl @
 11815 4C0D A8				tay
 11816 4C0E B9 F6 AF			lda adr.WEAPONNAMES,y
 11817 4C11 95 94			sta :STACKORIGIN,x
 11818 4C13 B9 F7 AF			lda adr.WEAPONNAMES+1,y
 11819 4C16 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 11820 4C18 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11821
 11822 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 70
 11823
 11824 4C1B E8				inx
 11825 4C1C A9 F8 95 94			mva #$F8 :STACKORIGIN,x
 11826 4C20 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 11827 4C24 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11828
 11829 				; optimize OK (armsdealer.pas), line = 71
 11830
 11831 4C27 AD F3 B9			lda R
 11832 4C2A 0A				asl @
 11833 4C2B A8				tay
 11834 4C2C B9 12 E7			lda adr.WEAPONPRICES,y
 11835 4C2F 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 11836 4C32 B9 13 E7			lda adr.WEAPONPRICES+1,y
 11837 4C35 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 11838 4C38 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 11839
 11840 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 72
 11841
 11842 4C3B 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 11843
 11844 				; --- ForToDoEpilog
 11845 4C3E EE F3 B9			inc R
 11846 4C41 D0 9D			jne l_2B49
 11847 4C43			l_2B57
 11848
 11849 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 74
 11850
 11851 4C43 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 11852
 11853 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 75
 11854
 11855 4C46 E8				inx
 11856 4C47 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 11857 4C4C AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 11858 4C51 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11859
 11860 				; optimize OK (armsdealer.pas), line = 76
 11861
 11862 4C54 AD F5 B9			lda MINWEAPON
 11863 4C57 8D 91 B6			sta READVALUE.MINVALUE
 11864 4C5A A9 00			lda #$00
 11865 4C5C 8D 92 B6			sta READVALUE.MINVALUE+1
 11866 4C5F AD F4 B9			lda MAXWEAPON
 11867 4C62 8D 93 B6			sta READVALUE.MAXVALUE
 11868 4C65 A9 00			lda #$00
 11869 4C67 8D 94 B6			sta READVALUE.MAXVALUE+1
 11870 4C6A 20 EE 21			jsr READVALUE
 11871 4C6D AD 95 B6			lda READVALUE.RESULT
 11872 4C70 8D F6 B9			sta SELECTEDWEAPON
 11873
 11874 				; optimize OK (armsdealer.pas), line = 77
 11875
 11876 4C73 D0 03			jne l_2B93
 11877 4C75 4C 7D 50			jmp @exit
 11878 4C78			l_2B93
 11879
 11880 				; optimize FAIL ('SHOWLOCATIONHEADER', armsdealer.pas), line = 81
 11881
 11882 4C78 20 1D 26			jsr SHOWLOCATIONHEADER
 11883
 11884 				; optimize FAIL ('SELECTGANGSTER', armsdealer.pas), line = 82
 11885
 11886 4C7B 20 21 2E			jsr SELECTGANGSTER
 11887
 11888 				; optimize OK (armsdealer.pas), line = 83
 11889
 11890 4C7E AD 18 E4			lda CURRENTGANGSTER
 11891 4C81 C9 63			cmp #$63
 11892 4C83 D0 03			jne l_2BAA
 11893 4C85 4C 7D 50			jmp @exit
 11894 4C88			l_2BAA
 11895
 11896 				; optimize OK (armsdealer.pas), line = 85
 11897
 11898 4C88 A9 00			lda #$00
 11899 4C8A 8D F7 B9			sta GA
 11900
 11901 				; optimize OK (armsdealer.pas), line = 86
 11902
 11903 4C8D AC 18 E4			ldy CURRENTGANGSTER
 11904 4C90 B9 78 E3			lda adr.GANGSTERINT,y
 11905 4C93 C9 28			cmp #$28
 11906 4C95 B0 1B			jcs l_2BD2
 11907 4C97 AD F6 B9			lda SELECTEDWEAPON
 11908 4C9A C9 06			cmp #$06
 11909 4C9C 90 14			jcc l_2BD2
 11910
 11911 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 88
 11912
 11913 4C9E E8				inx
 11914 4C9F AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 11915 4CA4 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 11916 4CA9 20 80 21			jsr CRT_WRITELN
 11917
 11918 				; optimize FAIL ('WAITFORKEY', armsdealer.pas), line = 89
 11919
 11920 4CAC 20 2E 21			jsr WAITFORKEY
 11921
 11922 				; optimize OK (armsdealer.pas), line = 90
 11923 4CAF 4C 2F 4D			jmp l_2BE4
 11924 4CB2			l_2BD2
 11925
 11926 				; optimize OK (armsdealer.pas), line = 92
 11927
 11928 4CB2 AC 18 E4			ldy CURRENTGANGSTER
 11929 4CB5 B9 58 E3			lda adr.GANGSTERSTR,y
 11930 4CB8 A0 01			ldy #1
 11931 4CBA C9 14			cmp #$14
 11932 4CBC 90 01			bcc @+
 11933 4CBE 88				dey
 11934 				@
 11935 4CBF 84 9D			sty :STACKORIGIN+9
 11936 4CC1 A0 01			ldy #1
 11937 4CC3 AD F6 B9			lda SELECTEDWEAPON
 11938 4CC6 C9 02			cmp #$02
 11939 4CC8 F0 01			beq @+
 11940 4CCA 88				dey
 11941 				@
 11942 4CCB 84 9E			sty :STACKORIGIN+10
 11943 4CCD A0 01			ldy #1
 11944 4CCF AD F6 B9			lda SELECTEDWEAPON
 11945 4CD2 C9 03			cmp #$03
 11946 4CD4 F0 01			beq @+
 11947 4CD6 88				dey
 11948 				@
 11949 4CD7 98				tya
 11950 4CD8 05 9E			ora :STACKORIGIN+10
 11951 4CDA 25 9D			and :STACKORIGIN+9
 11952 4CDC F0 14			jeq l_2C11
 11953
 11954 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 94
 11955
 11956 4CDE E8				inx
 11957 4CDF AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 11958 4CE4 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 11959 4CE9 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 11960
 11961 				; optimize FAIL ('WAITFORKEY', armsdealer.pas), line = 95
 11962
 11963 4CEC 20 2E 21			jsr WAITFORKEY
 11964
 11965 				; optimize OK (armsdealer.pas), line = 96
 11966 4CEF 4C 2F 4D			jmp l_2C23
 11967 4CF2			l_2C11
 11968
 11969 				; optimize OK (armsdealer.pas), line = 98
 11970
 11971 4CF2 AC 18 E4			ldy CURRENTGANGSTER
 11972 4CF5 B9 98 E3			lda adr.GANGSTERBRUT,y
 11973 4CF8 A0 01			ldy #1
 11974 4CFA C9 28			cmp #$28
 11975 4CFC 90 01			bcc @+
 11976 4CFE 88				dey
 11977 				@
 11978 4CFF 84 9D			sty :STACKORIGIN+9
 11979 4D01 A0 01			ldy #1
 11980 4D03 AD F6 B9			lda SELECTEDWEAPON
 11981 4D06 C9 03			cmp #$03
 11982 4D08 F0 01			beq @+
 11983 4D0A 88				dey
 11984 				@
 11985 4D0B 84 9E			sty :STACKORIGIN+10
 11986 4D0D A0 01			ldy #1
 11987 4D0F AD F6 B9			lda SELECTEDWEAPON
 11988 4D12 C9 07			cmp #$07
 11989 4D14 B0 01			bcs @+
 11990 4D16 88				dey
 11991 				@
 11992 4D17 98				tya
 11993 4D18 05 9E			ora :STACKORIGIN+10
 11994 4D1A 25 9D			and :STACKORIGIN+9
 11995 4D1C F0 16			jeq l_2C50
 11996
 11997 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 100
 11998
 11999 4D1E E8				inx
 12000 4D1F AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 12001 4D24 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 12002 4D29 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12003
 12004 				; optimize FAIL ('WAITFORKEY', armsdealer.pas), line = 101
 12005
 12006 4D2C 20 2E 21			jsr WAITFORKEY
 12007
 12008 				; optimize OK (armsdealer.pas), line = 102
 12009 4D2F			l_2BE4
 12010 4D2F			l_2C23
 12011
 12012 4D2F A9 FF			lda #$FF
 12013 4D31 8D F7 B9			sta GA
 12014 4D34			l_2C50
 12015
 12016 				; optimize OK (armsdealer.pas), line = 104
 12017
 12018 4D34 AD F7 B9			lda GA
 12019 4D37 10 03			jpl l_2C6D
 12020 4D39 4C 7D 50			jmp @exit
 12021 4D3C			l_2C6D
 12022
 12023 				; optimize OK (armsdealer.pas), line = 107
 12024
 12025 4D3C AD F6 B9			lda SELECTEDWEAPON
 12026 4D3F 0A				asl @
 12027 4D40 A8				tay
 12028 4D41 B9 12 E7			lda adr.WEAPONPRICES,y
 12029 4D44 8D 40 B9			sta PAYMONEY.PRICE
 12030 4D47 B9 13 E7			lda adr.WEAPONPRICES+1,y
 12031 4D4A 8D 41 B9			sta PAYMONEY.PRICE+1
 12032 4D4D 20 98 2D			jsr PAYMONEY
 12033 4D50 AD 42 B9			lda PAYMONEY.RESULT
 12034 4D53 D0 03			jne l_2C85
 12035 4D55 4C 7D 50			jmp @exit
 12036 4D58			l_2C85
 12037
 12038 				; optimize OK (armsdealer.pas), line = 109
 12039
 12040 4D58 AC 18 E4			ldy CURRENTGANGSTER
 12041 4D5B B9 D8 E3			lda adr.GANGSTERWEAPON,y
 12042 4D5E 8D F7 B9			sta GA
 12043
 12044 				; optimize OK (armsdealer.pas), line = 110
 12045
 12046 4D61 D0 03 4C 46 4E		jeq l_2CA3
 12047
 12048 				; optimize FAIL (1, armsdealer.pas), line = 112
 12049
 12050 4D66 E8				inx
 12051 4D67 AD F7 B9			lda GA
 12052 4D6A 0A				asl @
 12053 4D6B A8				tay
 12054 4D6C B9 12 E7			lda adr.WEAPONPRICES,y
 12055 4D6F 95 94			sta :STACKORIGIN,x
 12056 4D71 B9 13 E7			lda adr.WEAPONPRICES+1,y
 12057 4D74 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 12058 4D76 E8				inx
 12059 4D77 A9 02 95 94			mva #$02 :STACKORIGIN,x
 12060 4D7B 20 B6 0F			jsr shrAX_CL.WORD
 12061 4D7E CA				dex
 12062 4D7F A9 F4			lda #$F4
 12063 4D81 8D 82 A4			sta SYSTEM.RANDOM_02EA.RANGE
 12064 4D84 A9 01			lda #$01
 12065 4D86 8D 83 A4			sta SYSTEM.RANDOM_02EA.RANGE+1
 12066 4D89 20 E2 15			jsr SYSTEM.RANDOM_02EA
 12067 4D8C B5 94			lda :STACKORIGIN,x
 12068 4D8E 18 6D 84 A4			add SYSTEM.RANDOM_02EA.RESULT
 12069 4D92 8D FD B9			sta OLDWEAPONPRICE
 12070 4D95 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 12071 4D97 6D 85 A4			adc SYSTEM.RANDOM_02EA.RESULT+1
 12072 4D9A 8D FE B9			sta OLDWEAPONPRICE+1
 12073 4D9D CA				dex
 12074
 12075 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 113
 12076
 12077 4D9E 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12078
 12079 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 114
 12080
 12081 4DA1 E8				inx
 12082 4DA2 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 12083 4DA7 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 12084 4DAC 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12085
 12086 				; optimize OK (armsdealer.pas), line = 115
 12087
 12088 4DAF AD FD B9			lda OLDWEAPONPRICE
 12089 4DB2 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 12090 4DB5 AD FE B9			lda OLDWEAPONPRICE+1
 12091 4DB8 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 12092 4DBB 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 12093
 12094 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 116
 12095
 12096 4DBE E8				inx
 12097 4DBF A9 FC 95 94			mva #$FC :STACKORIGIN,x
 12098 4DC3 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 12099 4DC7 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12100
 12101 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 117
 12102
 12103 4DCA E8				inx
 12104 4DCB AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 12105 4DD0 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 12106 4DD5 20 80 21			jsr CRT_WRITELN
 12107
 12108 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 118
 12109
 12110 4DD8 E8				inx
 12111 4DD9 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 12112 4DDE AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 12113 4DE3 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12114
 12115 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 119
 12116
 12117 4DE6 E8				inx
 12118 4DE7 AD F7 B9			lda GA
 12119 4DEA 0A				asl @
 12120 4DEB A8				tay
 12121 4DEC B9 F6 AF			lda adr.WEAPONNAMES,y
 12122 4DEF 95 94			sta :STACKORIGIN,x
 12123 4DF1 B9 F7 AF			lda adr.WEAPONNAMES+1,y
 12124 4DF4 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 12125 4DF6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12126
 12127 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 120
 12128
 12129 4DF9 E8				inx
 12130 4DFA A9 00 95 94			mva #$00 :STACKORIGIN,x
 12131 4DFE A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 12132 4E02 20 80 21			jsr CRT_WRITELN
 12133
 12134 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 121
 12135
 12136 4E05 E8				inx
 12137 4E06 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 12138 4E0B AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 12139 4E10 20 80 21			jsr CRT_WRITELN
 12140
 12141 				; optimize FAIL ('GETYESNO', armsdealer.pas), line = 123
 12142
 12143 4E13 20 DA 21			jsr GETYESNO
 12144 4E16 AD 90 B6			lda GETYESNO.RESULT
 12145 4E19 8D F3 B9			sta R
 12146
 12147 				; optimize OK (armsdealer.pas), line = 124
 12148
 12149 4E1C D0 28			jne l_2CE5
 12150
 12151 				; optimize OK (armsdealer.pas), line = 127
 12152
 12153 4E1E AD F6 B9			lda SELECTEDWEAPON
 12154 4E21 0A				asl @
 12155 4E22 A8				tay
 12156 4E23 B9 12 E7			lda adr.WEAPONPRICES,y
 12157 4E26 8D 35 B9			sta ADDMONEY.AMOUNT
 12158 4E29 B9 13 E7			lda adr.WEAPONPRICES+1,y
 12159 4E2C 8D 36 B9			sta ADDMONEY.AMOUNT+1
 12160 4E2F 20 E3 2A			jsr ADDMONEY
 12161
 12162 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 128
 12163
 12164 4E32 E8				inx
 12165 4E33 AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 12166 4E38 AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 12167 4E3D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12168
 12169 				; optimize FAIL ('WAITFORKEY', armsdealer.pas), line = 129
 12170
 12171 4E40 20 2E 21			jsr WAITFORKEY
 12172 4E43 4C 7D 50			jmp @exit
 12173 4E46			l_2CE5
 12174 4E46			l_2CA3
 12175
 12176 				; optimize OK (armsdealer.pas), line = 136
 12177
 12178 4E46 AC 18 E4			ldy CURRENTGANGSTER
 12179 4E49 B9 D8 E3			lda adr.GANGSTERWEAPON,y
 12180 4E4C CD F6 B9			cmp SELECTEDWEAPON
 12181 4E4F B0 0C			jcs l_2D0B
 12182
 12183 				; optimize OK (armsdealer.pas), line = 137
 12184
 12185 4E51 AC 1A E4			ldy CURRENTPLAYER
 12186 4E54 B9 80 E0			lda adr.PLNEWPOINTS,y
 12187 4E57 18 69 02			add #$02
 12188 4E5A 4C 66 4E			jmp l_2D25
 12189 4E5D			l_2D0B
 12190
 12191 				; optimize OK (armsdealer.pas), line = 139
 12192
 12193 4E5D AC 1A E4			ldy CURRENTPLAYER
 12194 4E60 B9 80 E0			lda adr.PLNEWPOINTS,y
 12195 4E63 38 E9 02			sub #$02
 12196 4E66			l_2D25
 12197 4E66 99 80 E0			sta adr.PLNEWPOINTS,y
 12198
 12199 				; optimize OK (armsdealer.pas), line = 141
 12200
 12201 4E69 AD FD B9			lda OLDWEAPONPRICE
 12202 4E6C 8D 35 B9			sta ADDMONEY.AMOUNT
 12203 4E6F AD FE B9			lda OLDWEAPONPRICE+1
 12204 4E72 8D 36 B9			sta ADDMONEY.AMOUNT+1
 12205 4E75 20 E3 2A			jsr ADDMONEY
 12206
 12207 				; optimize OK (armsdealer.pas), line = 142
 12208
 12209 4E78 AC 18 E4			ldy CURRENTGANGSTER
 12210 4E7B AD F6 B9			lda SELECTEDWEAPON
 12211 4E7E 99 D8 E3			sta adr.GANGSTERWEAPON,y
 12212
 12213 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 143
 12214
 12215 4E81 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12216
 12217 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 144
 12218
 12219 4E84 E8				inx
 12220 4E85 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 12221 4E8A AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 12222 4E8F 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12223
 12224 				; optimize FAIL ('WAITFORKEY', armsdealer.pas), line = 145
 12225
 12226 4E92 20 2E 21			jsr WAITFORKEY
 12227 4E95			l_2AAE
 12228
 12229 				; optimize OK (armsdealer.pas), line = 149
 12230
 12231 4E95 AC F1 B9 84 81		mvy CHOICE+1 :bp+1
 12232 4E9A AC F0 B9			ldy CHOICE
 12233 4E9D B1 80			lda (:bp),y
 12234 4E9F C9 02			cmp #$02
 12235 4EA1 F0 03 4C 7D 50		jne l_2D5A
 12236
 12237 				; optimize FAIL ('SHOWLOCATIONHEADER', armsdealer.pas), line = 151
 12238
 12239 4EA6 20 1D 26			jsr SHOWLOCATIONHEADER
 12240
 12241 				; optimize OK (armsdealer.pas), line = 153
 12242
 12243 4EA9 AC 1A E4			ldy CURRENTPLAYER
 12244 4EAC B9 41 E4			lda adr.PLNGANGSTERS,y
 12245 4EAF C9 02			cmp #$02
 12246 4EB1 90 1B			jcc l_2D71
 12247
 12248 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 155
 12249
 12250 4EB3 E8				inx
 12251 4EB4 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 12252 4EB9 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 12253 4EBE 20 80 21			jsr CRT_WRITELN
 12254
 12255 				; optimize FAIL ('SELECTGANGSTER', armsdealer.pas), line = 156
 12256
 12257 4EC1 20 21 2E			jsr SELECTGANGSTER
 12258
 12259 				; optimize OK (armsdealer.pas), line = 157
 12260
 12261 4EC4 AD 18 E4			lda CURRENTGANGSTER
 12262 4EC7 C9 63			cmp #$63
 12263 4EC9 D0 03			jne l_2D88
 12264 4ECB 4C 7D 50			jmp @exit
 12265 4ECE			l_2D88
 12266 4ECE			l_2D71
 12267
 12268 				; optimize OK (armsdealer.pas), line = 160
 12269
 12270 4ECE A9 00			lda #$00
 12271 4ED0 8D FF B9			sta CAMP
 12272
 12273 				; optimize OK (armsdealer.pas), line = 162
 12274
 12275 4ED3 AC 1A E4			ldy CURRENTPLAYER
 12276 4ED6 B9 78 E0			lda adr.PLRANK,y
 12277 4ED9 C9 05			cmp #$05
 12278 4EDB 90 38			jcc l_2DA6
 12279
 12280 				; optimize FAIL ('CRT_WRITELN', armsdealer.pas), line = 164
 12281
 12282 4EDD E8				inx
 12283 4EDE AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 12284 4EE3 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 12285 4EE8 20 80 21			jsr CRT_WRITELN
 12286
 12287 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 165
 12288
 12289 4EEB E8				inx
 12290 4EEC AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 12291 4EF1 AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 12292 4EF6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12293
 12294 				; optimize OK (armsdealer.pas), line = 166
 12295
 12296 4EF9 A9 3E			lda #$3E
 12297 4EFB 8D 8D B6			sta GETANSWER.A
 12298 4EFE A9 2D			lda #$2D
 12299 4F00 8D 8E B6			sta GETANSWER.B
 12300 4F03 20 B1 21			jsr GETANSWER
 12301 4F06 AD 8F B6			lda GETANSWER.RESULT
 12302 4F09 8D F3 B9			sta R
 12303
 12304 				; optimize OK (armsdealer.pas), line = 167
 12305
 12306 4F0C C9 01			cmp #$01
 12307 4F0E D0 05			jne l_2DC5
 12308 4F10 A9 01			lda #$01
 12309 4F12 8D FF B9			sta CAMP
 12310 4F15			l_2DC5
 12311 4F15			l_2DA6
 12312
 12313 				; optimize OK (armsdealer.pas), line = 171
 12314
 12315 4F15 AD FF B9			lda CAMP
 12316 4F18 D0 1C			jne l_2DE0
 12317
 12318 				; optimize OK (armsdealer.pas), line = 172
 12319
 12320 4F1A AC 1A E4			ldy CURRENTPLAYER
 12321 4F1D B9 78 E0			lda adr.PLRANK,y
 12322 4F20 85 8C			sta :ecx
 12323 4F22 A9 C8			lda #$C8
 12324 4F24 85 84			sta :eax
 12325 					.ifdef fmulinit
 12326 					fmulu_8
 12327 					els
 12328 4F26 20 F8 11			imulCL
 12329 					eif
 12330 4F29 A9 20			lda #$20
 12331 4F2B 18 65 84			add :eax
 12332 4F2E 8D F8 B9			sta PRICE
 12333 4F31 A9 03			lda #$03
 12334 4F33 4C 57 4F			jmp l_2DFB
 12335 4F36			l_2DE0
 12336
 12337 				; optimize OK (armsdealer.pas), line = 174
 12338
 12339 4F36 AC 1A E4			ldy CURRENTPLAYER
 12340 4F39 B9 78 E0			lda adr.PLRANK,y
 12341 4F3C 85 84			sta :eax
 12342 4F3E A9 00			lda #$00
 12343 4F40 85 85			sta :eax+1
 12344 4F42 A9 F4			lda #$F4
 12345 4F44 85 8C			sta :ecx
 12346 4F46 A9 01			lda #$01
 12347 4F48 85 8D			sta :ecx+1
 12348 					.ifdef fmulinit
 12349 					fmulu_16
 12350 					els
 12351 4F4A 20 63 12			imulCX_AL
 12352 					eif
 12353 4F4D A9 C4			lda #$C4
 12354 4F4F 18 65 84			add :eax
 12355 4F52 8D F8 B9			sta PRICE
 12356 4F55 A9 09			lda #$09
 12357 4F57			l_2DFB
 12358 4F57 65 85			adc :eax+1
 12359 4F59 8D F9 B9			sta PRICE+1
 12360
 12361 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 176
 12362
 12363 4F5C 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12364
 12365 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 177
 12366
 12367 4F5F E8				inx
 12368 4F60 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 12369 4F65 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 12370 4F6A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12371
 12372 				; optimize OK (armsdealer.pas), line = 178
 12373
 12374 4F6D AD F8 B9			lda PRICE
 12375 4F70 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 12376 4F73 AD F9 B9			lda PRICE+1
 12377 4F76 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 12378 4F79 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 12379
 12380 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 179
 12381
 12382 4F7C E8				inx
 12383 4F7D AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 12384 4F82 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 12385 4F87 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12386
 12387 				; optimize FAIL ('GETYESNO', armsdealer.pas), line = 180
 12388
 12389 4F8A 20 DA 21			jsr GETYESNO
 12390 4F8D AD 90 B6			lda GETYESNO.RESULT
 12391 4F90 8D F7 B9			sta GA
 12392
 12393 				; optimize OK (armsdealer.pas), line = 181
 12394
 12395 4F93 D0 03			jne l_2E2C
 12396 4F95 4C 7D 50			jmp @exit
 12397 4F98			l_2E2C
 12398
 12399 				; optimize OK (armsdealer.pas), line = 182
 12400
 12401 4F98 AD F8 B9			lda PRICE
 12402 4F9B 8D 40 B9			sta PAYMONEY.PRICE
 12403 4F9E AD F9 B9			lda PRICE+1
 12404 4FA1 8D 41 B9			sta PAYMONEY.PRICE+1
 12405 4FA4 20 98 2D			jsr PAYMONEY
 12406 4FA7 AD 42 B9			lda PAYMONEY.RESULT
 12407 4FAA D0 03			jne l_2E41
 12408 4FAC 4C 7D 50			jmp @exit
 12409 4FAF			l_2E41
 12410
 12411 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 184
 12412
 12413 4FAF 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12414
 12415 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 185
 12416
 12417 4FB2 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12418
 12419 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 186
 12420
 12421 4FB5 E8				inx
 12422 4FB6 AD 18 E4			lda CURRENTGANGSTER
 12423 4FB9 0A				asl @
 12424 4FBA A8				tay
 12425 4FBB B9 E0 B0			lda adr.GANGSTERNAMES,y
 12426 4FBE 95 94			sta :STACKORIGIN,x
 12427 4FC0 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 12428 4FC3 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 12429 4FC5 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12430
 12431 				; optimize OK (armsdealer.pas), line = 187
 12432
 12433 4FC8 AD FF B9			lda CAMP
 12434 4FCB D0 4B			jne l_2E5E
 12435
 12436 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 189
 12437
 12438 4FCD E8				inx
 12439 4FCE AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 12440 4FD3 AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 12441 4FD8 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12442
 12443 				; optimize OK (armsdealer.pas), line = 190
 12444
 12445 4FDB A9 05			lda #$05
 12446 4FDD 8D FC B9			sta INC_ST
 12447
 12448 				; optimize OK (armsdealer.pas), line = 191
 12449
 12450 4FE0 A0 01			ldy #1
 12451 4FE2 AD AF B8			lda CURRENTSUBLOCATION
 12452 4FE5 C9 01			cmp #$01
 12453 4FE7 F0 01			beq @+
 12454 4FE9 88				dey
 12455 				@
 12456 4FEA 98				tya
 12457 4FEB 0A				asl @
 12458 4FEC 18 69 03			add #$03
 12459 4FEF 8D FA B9			sta INC_IN
 12460
 12461 				; optimize OK (armsdealer.pas), line = 192
 12462
 12463 4FF2 A0 01			ldy #1
 12464 4FF4 AD AF B8			lda CURRENTSUBLOCATION
 12465 4FF7 C9 03			cmp #$03
 12466 4FF9 F0 01			beq @+
 12467 4FFB 88				dey
 12468 				@
 12469 4FFC 98				tya
 12470 4FFD 85 9E			sta :STACKORIGIN+10
 12471 4FFF 0A				asl @
 12472 5000 18 65 9E			add :STACKORIGIN+10
 12473 5003 18 69 02			add #$02
 12474 5006 8D FB B9			sta INC_BT
 12475
 12476 				; optimize OK (armsdealer.pas), line = 193
 12477
 12478 5009 AC 1A E4			ldy CURRENTPLAYER
 12479 500C B9 80 E0			lda adr.PLNEWPOINTS,y
 12480 500F 18 69 01			add #$01
 12481 5012 99 80 E0			sta adr.PLNEWPOINTS,y
 12482 5015 4C 50 50			jmp l_2EA7
 12483 5018			l_2E5E
 12484
 12485 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', armsdealer.pas), line = 198
 12486
 12487 5018 E8				inx
 12488 5019 AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 12489 501E AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 12490 5023 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12491
 12492 				; optimize OK (armsdealer.pas), line = 199
 12493
 12494 5026 A9 08			lda #$08
 12495 5028 20 CB 15			jsr SYSTEM.RANDOM_02E9
 12496 502B AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 12497 502E 18 69 08			add #$08
 12498 5031 8D FC B9			sta INC_ST
 12499
 12500 				; optimize OK (armsdealer.pas), line = 200
 12501
 12502 5034 A9 08			lda #$08
 12503 5036 20 CB 15			jsr SYSTEM.RANDOM_02E9
 12504 5039 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 12505 503C 18 69 08			add #$08
 12506 503F 8D FA B9			sta INC_IN
 12507
 12508 				; optimize OK (armsdealer.pas), line = 201
 12509
 12510 5042 A9 08			lda #$08
 12511 5044 20 CB 15			jsr SYSTEM.RANDOM_02E9
 12512 5047 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 12513 504A 18 69 08			add #$08
 12514 504D 8D FB B9			sta INC_BT
 12515 5050			l_2EA7
 12516
 12517 				; optimize FAIL ('EFFECTWAIT', armsdealer.pas), line = 204
 12518
 12519 5050 20 88 20			jsr EFFECTWAIT
 12520
 12521 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 206
 12522
 12523 5053 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12524
 12525 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', armsdealer.pas), line = 207
 12526
 12527 5056 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12528
 12529 				; optimize OK (armsdealer.pas), line = 208
 12530
 12531 5059 AD FC B9			lda INC_ST
 12532 505C 8D ED B9			sta INCREASECURRENTGANGSTER.INC_ST
 12533 505F AD FA B9			lda INC_IN
 12534 5062 8D EE B9			sta INCREASECURRENTGANGSTER.INC_IN
 12535 5065 AD FB B9			lda INC_BT
 12536 5068 8D EF B9			sta INCREASECURRENTGANGSTER.INC_BT
 12537 506B 20 DA 4A			jsr INCREASECURRENTGANGSTER
 12538
 12539 				; optimize OK (armsdealer.pas), line = 209
 12540
 12541 506E AC 1A E4			ldy CURRENTPLAYER
 12542 5071 B9 80 E0			lda adr.PLNEWPOINTS,y
 12543 5074 18 69 01			add #$01
 12544 5077 99 80 E0			sta adr.PLNEWPOINTS,y
 12545
 12546 				; optimize FAIL ('B_CRT.CRT_READKEY', armsdealer.pas), line = 211
 12547
 12548 507A 20 42 1D			jsr B_CRT.CRT_READKEY
 12549 507D			l_2D5A
 12550 507D			@exit
 12551
 12552 				; ------------------------------------------------------------
 12553
 12554 = B9F0			CHOICE	= DATAORIGIN+$157B
 12555 = B9F2			RESULT	= DATAORIGIN+$157D
 12556 = B9F3			R	= DATAORIGIN+$157E
 12557 = B9F4			MAXWEAPON	= DATAORIGIN+$157F
 12558 = B9F5			MINWEAPON	= DATAORIGIN+$1580
 12559 = B9F6			SELECTEDWEAPON	= DATAORIGIN+$1581
 12560 = B9F7			GA	= DATAORIGIN+$1582
 12561 = B9F8			PRICE	= DATAORIGIN+$1583
 12562 = B9FA			INC_IN	= DATAORIGIN+$1585
 12563 = B9FB			INC_BT	= DATAORIGIN+$1586
 12564 = B9FC			INC_ST	= DATAORIGIN+$1587
 12565 = B9FD			OLDWEAPONPRICE	= DATAORIGIN+$1588
 12566 = B9FF			CAMP	= DATAORIGIN+$158A
 12567
 12568 = B9F0			@VarData	= CHOICE
 12569 = 000F			@VarDataSize	= 15
 12570
 12571 507D 60				rts						; ret
 12572 				.endl
 12573
 12574 507E			.local	BANKCHOICES					; FUNCTION
 12575
 12576 				; optimize OK (bank.pas), line = 19
 12577
 12578 507E A9 01			lda #$01
 12579 5080 8D 44 BA			sta RESULT
 12580
 12581 				; optimize OK (bank.pas), line = 20
 12582
 12583 5083 20 B3 26			jsr LOADLOCATION
 12584
 12585 				; optimize FAIL ('SHOWLOCATIONHEADER', bank.pas), line = 21
 12586
 12587 5086 20 1D 26			jsr SHOWLOCATIONHEADER
 12588
 12589 				; optimize OK (bank.pas), line = 23
 12590
 12591 5089 AC 1A E4			ldy CURRENTPLAYER
 12592 508C B9 78 E0			lda adr.PLRANK,y
 12593 508F C9 03			cmp #$03
 12594 5091 B0 14			jcs l_2F05
 12595
 12596 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', bank.pas), line = 25
 12597
 12598 5093 E8				inx
 12599 5094 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 12600 5099 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 12601 509E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 12602
 12603 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 26
 12604
 12605 50A1 20 2E 21			jsr WAITFORKEY
 12606 50A4 4C 01 56			jmp @exit
 12607 50A7			l_2F05
 12608
 12609 				; optimize OK (bank.pas), line = 33
 12610
 12611 50A7 AD EC B9			lda LASTLOCATION
 12612 50AA C9 01			cmp #$01
 12613 50AC D0 1B			jne l_2F1E
 12614
 12615 				; optimize FAIL ('PREPAREFIGHTAGAINSTPOLICE', bank.pas), line = 35
 12616
 12617 50AE 20 5A 2C			jsr PREPAREFIGHTAGAINSTPOLICE
 12618
 12619 				; optimize FAIL ('DOFIGHT', bank.pas), line = 36
 12620
 12621 50B1 20 44 49			jsr DOFIGHT
 12622 50B4 AD E6 B9			lda DOFIGHT.RESULT
 12623 50B7 C9 01			cmp #$01
 12624 50B9 D0 0B			jne l_2F30
 12625
 12626 				; optimize FAIL ('GOTCAUGHT', bank.pas), line = 38
 12627
 12628 50BB 20 7C 32			jsr GOTCAUGHT
 12629
 12630 				; optimize OK (bank.pas), line = 39
 12631
 12632 50BE A9 11			lda #$11
 12633 50C0 8D 44 BA			sta RESULT
 12634 50C3 4C 01 56			jmp @exit
 12635 50C6			l_2F30
 12636 50C6 4C 01 56			jmp @exit
 12637 50C9			l_2F1E
 12638
 12639 				; optimize OK (bank.pas), line = 45
 12640
 12641 50C9 AC 1A E4			ldy CURRENTPLAYER
 12642 50CC B9 41 E4			lda adr.PLNGANGSTERS,y
 12643 50CF C9 02			cmp #$02
 12644 50D1 B0 1E			jcs l_2F4F
 12645
 12646 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', bank.pas), line = 47
 12647
 12648 50D3 E8				inx
 12649 50D4 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 12650 50D9 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 12651 50DE E8				inx
 12652 50DF A9 06 95 94			mva #$06 :STACKORIGIN,x
 12653 50E3 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 12654
 12655 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 48
 12656
 12657 50E6 20 2E 21			jsr WAITFORKEY
 12658
 12659 				; optimize OK (bank.pas), line = 49
 12660
 12661 50E9 A9 0F			lda #$0F
 12662 50EB 8D EC B9			sta LASTLOCATION
 12663 50EE 4C 01 56			jmp @exit
 12664 50F1			l_2F4F
 12665
 12666 				; optimize OK (bank.pas), line = 54
 12667
 12668 50F1 AC 43 BA 84 81		mvy CHOICE+1 :bp+1
 12669 50F6 AC 42 BA			ldy CHOICE
 12670 50F9 B1 80			lda (:bp),y
 12671 50FB C9 01			cmp #$01
 12672 50FD F0 03 4C 91 51		jne l_2F6D
 12673
 12674 				; optimize OK (bank.pas), line = 56
 12675
 12676 5102 A9 03			lda #$03
 12677 5104 20 CB 15			jsr SYSTEM.RANDOM_02E9
 12678 5107 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 12679 510A D0 78			jne l_2F7F
 12680
 12681 				; optimize FAIL ('CRT_WRITELN', bank.pas), line = 58
 12682
 12683 510C E8				inx
 12684 510D AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 12685 5112 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 12686 5117 20 80 21			jsr CRT_WRITELN
 12687
 12688 				; optimize FAIL ('CRT_WRITELN', bank.pas), line = 59
 12689
 12690 511A E8				inx
 12691 511B AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 12692 5120 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 12693 5125 20 80 21			jsr CRT_WRITELN
 12694
 12695 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 60
 12696
 12697 5128 20 2E 21			jsr WAITFORKEY
 12698
 12699 				; -------------------  ASM Block 00000164  -------------------
 12700
 12701 				; 
 12702 512B AD 6E A3		                lda loc_string_4
 12703 512E 8D 7A B0		                sta adr.FP_GANG+$02
 12704 5131 AD 6F A3		                lda loc_string_4+1
 12705 5134 8D 7B B0		                sta adr.FP_GANG+1+$02
 12706 				            
 12707 				; optimize OK (bank.pas), line = 71
 12708
 12709 5137 A9 01			lda #$01
 12710 5139 8D 02 EC			sta adr.FP_AI+$01
 12711
 12712 				; optimize OK (bank.pas), line = 72
 12713
 12714 513C A9 03			lda #$03
 12715 513E 8D 04 EC			sta adr.FP_N+$01
 12716
 12717 				; optimize OK (bank.pas), line = 73
 12718
 12719 5141 AD 20 E4			lda CURRENTMAP
 12720 5144 C9 01			cmp #$01
 12721 5146 D0 03			jne l_2FA3
 12722
 12723 				; optimize OK (bank.pas), line = 74
 12724
 12725 5148 EE 04 EC			inc adr.FP_N+$01
 12726 514B			l_2FA3
 12727
 12728 				; -------------------  ASM Block 00000165  -------------------
 12729
 12730 514B A0 00		                ldy #$00
 12731 				            @:
 12732 514D 98			                tya 
 12733 514E 0A			                asl 
 12734 514F A8			                tay
 12735
 12736 5150 AD 6E A3		                lda loc_string_4
 12737 5153 99 9C B0		                sta adr.FP_NAME+$20,y
 12738 5156 AD 6F A3		                lda loc_string_4+1
 12739 5159 99 9D B0		                sta adr.FP_NAME+1+$20,y
 12740
 12741 515C 98			                tya
 12742 515D 4A			                lsr 
 12743 515E A8			                tay
 12744
 12745 515F A9 1E		                lda #$1E
 12746 5161 99 95 EC		                sta adr.FP_ENERGY+$10,y
 12747 5164 A9 06		                lda #$06
 12748 5166 99 55 EC		                sta adr.FP_WEAPON+$10,y
 12749 5169 C8			                iny
 12750 516A CC 04 EC		                cpy adr.FP_N+$01
 12751 516D D0 DE		                bne @- 
 12752 				            
 12753 				; optimize FAIL ('DOFIGHT', bank.pas), line = 107
 12754
 12755 516F 20 44 49			jsr DOFIGHT
 12756 5172 AD E6 B9			lda DOFIGHT.RESULT
 12757 5175 C9 01			cmp #$01
 12758 5177 D0 0B			jne l_2FC2
 12759
 12760 				; optimize FAIL ('GOTCAUGHT', bank.pas), line = 109
 12761
 12762 5179 20 7C 32			jsr GOTCAUGHT
 12763
 12764 				; optimize OK (bank.pas), line = 110
 12765
 12766 517C A9 11			lda #$11
 12767 517E 8D 44 BA			sta RESULT
 12768 5181 4C 01 56			jmp @exit
 12769 5184			l_2FC2
 12770 5184			l_2F7F
 12771
 12772 				; optimize OK (bank.pas), line = 114
 12773
 12774 5184 A9 01			lda #$01
 12775 5186 8D 39 B9			sta CRACKEDBANK.P
 12776 5189 A9 00			lda #$00
 12777 518B 8D 3A B9			sta CRACKEDBANK.P+1
 12778 518E 20 57 2B			jsr CRACKEDBANK
 12779 5191			l_2F6D
 12780
 12781 				; optimize OK (bank.pas), line = 118
 12782
 12783 5191 AC 43 BA 84 81		mvy CHOICE+1 :bp+1
 12784 5196 AC 42 BA			ldy CHOICE
 12785 5199 B1 80			lda (:bp),y
 12786 519B C9 02			cmp #$02
 12787 519D F0 03 4C 01 56		jne l_2FE2
 12788
 12789 				; optimize FAIL ('SHOWLOCATIONHEADER', bank.pas), line = 120
 12790
 12791 51A2 20 1D 26			jsr SHOWLOCATIONHEADER
 12792
 12793 				; optimize OK (bank.pas), line = 121
 12794
 12795 51A5 AD 1A E4			lda CURRENTPLAYER
 12796 51A8 0A				asl @
 12797 51A9 0A				asl @
 12798 51AA 0A				asl @
 12799 51AB 8D 45 BA			sta K
 12800
 12801 				; optimize OK (bank.pas), line = 122
 12802
 12803 51AE A8				tay
 12804 51AF B9 98 E3			lda adr.GANGSTERBRUT,y
 12805 51B2 C9 14			cmp #$14
 12806 51B4 90 0E			jcc l_3021x
 12807 51B6 B9 58 E3			lda adr.GANGSTERSTR,y
 12808 51B9 C9 0F			cmp #$0F
 12809 51BB 90 07			jcc l_3021x
 12810 51BD B9 78 E3			lda adr.GANGSTERINT,y
 12811 51C0 C9 28			cmp #$28
 12812 51C2 B0 19			jcs l_3021
 12813 51C4			l_3021x
 12814
 12815 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', bank.pas), line = 124
 12816
 12817 51C4 E8				inx
 12818 51C5 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 12819 51CA AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 12820 51CF E8				inx
 12821 51D0 A9 06 95 94			mva #$06 :STACKORIGIN,x
 12822 51D4 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 12823
 12824 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 125
 12825
 12826 51D7 20 2E 21			jsr WAITFORKEY
 12827 51DA 4C 01 56			jmp @exit
 12828 51DD			l_3021
 12829
 12830 				; optimize FAIL ('CRT_WRITELN', bank.pas), line = 129
 12831
 12832 51DD E8				inx
 12833 51DE AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 12834 51E3 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 12835 51E8 20 80 21			jsr CRT_WRITELN
 12836
 12837 				; optimize FAIL ('SELECTGANGSTER', bank.pas), line = 130
 12838
 12839 51EB 20 21 2E			jsr SELECTGANGSTER
 12840
 12841 				; optimize OK (bank.pas), line = 131
 12842
 12843 51EE AD 18 E4			lda CURRENTGANGSTER
 12844 51F1 C9 63			cmp #$63
 12845 51F3 D0 03			jne l_303F
 12846 51F5 4C 01 56			jmp @exit
 12847 51F8			l_303F
 12848
 12849 				; optimize FAIL ('CRT_WRITELN', bank.pas), line = 133
 12850
 12851 51F8 E8				inx
 12852 51F9 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 12853 51FE AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 12854 5203 20 80 21			jsr CRT_WRITELN
 12855
 12856 				; optimize FAIL ('CRT_WRITELN', bank.pas), line = 134
 12857
 12858 5206 E8				inx
 12859 5207 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 12860 520C AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 12861 5211 20 80 21			jsr CRT_WRITELN
 12862
 12863 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', bank.pas), line = 135
 12864
 12865 5214 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 12866
 12867 				; optimize OK (bank.pas), line = 138
 12868
 12869 5217 AD 1A E4			lda CURRENTPLAYER
 12870 521A 85 9E			sta :STACKORIGIN+10
 12871 521C A9 00			lda #$00
 12872 521E 06 9E			asl :STACKORIGIN+10
 12873 5220 2A				rol @
 12874 5221 06 9E			asl :STACKORIGIN+10
 12875 5223 2A				rol @
 12876 5224 06 9E			asl :STACKORIGIN+10
 12877 5226 2A				rol @
 12878 5227 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 12879 5229 A5 9E			lda :STACKORIGIN+10
 12880 522B 18 69 00			add #$00
 12881 522E A8				tay
 12882 522F A5 AE			lda :STACKORIGIN+STACKWIDTH+10
 12883 5231 69 00			adc #$00
 12884 5233 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 12885 5235 B9 78 E3			lda adr.GANGSTERINT,y
 12886 5238 85 9E			sta :STACKORIGIN+10
 12887 523A 4A				lsr @
 12888 523B 4A				lsr @
 12889 523C 4A				lsr @
 12890 523D 4A				lsr @
 12891 523E 18 69 0A			add #$0A
 12892 5241 18 6D AF B8			add CURRENTSUBLOCATION
 12893 5245 8D 46 BA			sta NATTEMPTS
 12894
 12895 				; optimize OK (bank.pas), line = 139
 12896
 12897 5248 AC 1A E4			ldy CURRENTPLAYER
 12898 524B B9 04 E0			lda adr.PLSTUFF,y
 12899 524E 09 20			ora #$20
 12900 5250 C9 01			cmp #$01
 12901 5252 D0 11			jne l_307D
 12902
 12903 				; optimize OK (bank.pas), line = 141
 12904
 12905 5254 AD 46 BA			lda NATTEMPTS
 12906 5257 18 69 09			add #$09
 12907 525A 8D 46 BA			sta NATTEMPTS
 12908
 12909 				; optimize OK (bank.pas), line = 142
 12910
 12911 525D B9 04 E0			lda adr.PLSTUFF,y
 12912 5260 29 DF			and #$DF
 12913 5262 99 04 E0			sta adr.PLSTUFF,y
 12914 5265			l_307D
 12915
 12916 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 145
 12917
 12918 5265 20 2E 21			jsr WAITFORKEY
 12919
 12920 				; optimize OK (bank.pas), line = 148
 12921
 12922 5268 A9 00			lda #$00
 12923 526A 85 88			sta SYSTEM.FILLCHAR_02BB.A
 12924 526C A9 F4			lda #$F4
 12925 526E 85 89			sta SYSTEM.FILLCHAR_02BB.A+1
 12926 5270 A9 C0			lda #$C0
 12927 5272 85 8C			sta SYSTEM.FILLCHAR_02BB.COUNT
 12928 5274 A9 03			lda #$03
 12929 5276 85 8D			sta SYSTEM.FILLCHAR_02BB.COUNT+1
 12930 5278 A9 00			lda #$00
 12931 527A 85 84			sta SYSTEM.FILLCHAR_02BB.VALUE
 12932 527C				.LOCAL +MAIN.SYSTEM.FILLCHAR_02BB
 12933 527C				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_02BB.M@INLINE [Source: main.a65]
     4 527C 20 8A 10			jsr @fill
Source: main.a65
 12934 					.ENDL
 12935
 12936 				; optimize FAIL ('ENABLEMAPCONSOLE', bank.pas), line = 149
 12937
 12938 527F 20 DA 25			jsr ENABLEMAPCONSOLE
 12939
 12940 				; optimize OK (bank.pas), line = 150
 12941
 12942 5282 AD 56 A4			lda SAFECLMFNAME
 12943 5285 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 12944 5288 AD 57 A4			lda SAFECLMFNAME+1
 12945 528B 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 12946 528E A9 00			lda #$00
 12947 5290 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 12948 5293 A9 F0			lda #$F0
 12949 5295 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 12950 5298 20 65 17			jsr XBAPLIB.XBUNAPL
 12951
 12952 				; optimize OK (bank.pas), line = 151
 12953
 12954 529B AD 58 A4			lda SAFECLMSNAME
 12955 529E 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 12956 52A1 AD 59 A4			lda SAFECLMSNAME+1
 12957 52A4 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 12958 52A7 A9 00			lda #$00
 12959 52A9 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 12960 52AC A9 F4			lda #$F4
 12961 52AE 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 12962 52B1 20 65 17			jsr XBAPLIB.XBUNAPL
 12963
 12964 				; optimize OK (bank.pas), line = 152
 12965
 12966 52B4 A9 00			lda #$00
 12967 52B6 A0 4F			ldy #$4F
 12968 52B8 99 A8 F6 88 10 FA		sta:rpl $F6A8,y-
 12969
 12970 				; optimize OK (bank.pas), line = 153
 12971
 12972 52BE A9 01			lda #$01
 12973 52C0 8D 45 E4			sta DIDFIGHT
 12974
 12975 				; optimize FAIL (1, bank.pas), line = 154
 12976
 12977 52C3 E8				inx
 12978 52C4 A9 00 95 94			mva #$00 :STACKORIGIN,x
 12979 52C8 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 12980 52CA A9 0A			lda #$0A
 12981 52CC 20 CB 15			jsr SYSTEM.RANDOM_02E9
 12982 52CF B4 94			ldy :STACKORIGIN,x
 12983 52D1 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 12984 52D4 99 47 BA			sta adr.T,y
 12985
 12986 				; optimize FAIL (1, bank.pas), line = 155
 12987
 12988 52D7 A9 01 95 94			mva #$01 :STACKORIGIN,x
 12989 52DB A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 12990 52DF A9 0A			lda #$0A
 12991 52E1 20 CB 15			jsr SYSTEM.RANDOM_02E9
 12992 52E4 B4 94			ldy :STACKORIGIN,x
 12993 52E6 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 12994 52E9 99 47 BA			sta adr.T,y
 12995
 12996 				; optimize FAIL (1, bank.pas), line = 156
 12997
 12998 52EC A9 02 95 94			mva #$02 :STACKORIGIN,x
 12999 52F0 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 13000 52F4 A9 0A			lda #$0A
 13001 52F6 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13002 52F9 B4 94			ldy :STACKORIGIN,x
 13003 52FB AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13004 52FE 99 47 BA			sta adr.T,y
 13005
 13006 				; optimize FAIL (1, bank.pas), line = 157
 13007
 13008 5301 A9 00 95 94			mva #$00 :STACKORIGIN,x
 13009 5305 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 13010 5307 A9 0A			lda #$0A
 13011 5309 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13012 530C B4 94			ldy :STACKORIGIN,x
 13013 530E AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13014 5311 99 4A BA			sta adr.C,y
 13015
 13016 				; optimize FAIL (1, bank.pas), line = 158
 13017
 13018 5314 A9 01 95 94			mva #$01 :STACKORIGIN,x
 13019 5318 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 13020 531C A9 0A			lda #$0A
 13021 531E 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13022 5321 B4 94			ldy :STACKORIGIN,x
 13023 5323 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13024 5326 99 4A BA			sta adr.C,y
 13025
 13026 				; optimize FAIL (1, bank.pas), line = 159
 13027
 13028 5329 A9 02 95 94			mva #$02 :STACKORIGIN,x
 13029 532D A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 13030 5331 A9 0A			lda #$0A
 13031 5333 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13032 5336 B4 94			ldy :STACKORIGIN,x
 13033 5338 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13034 533B 99 4A BA			sta adr.C,y
 13035 533E CA				dex
 13036
 13037 				; optimize OK (bank.pas), line = 161
 13038
 13039 533F A9 00			lda #$00
 13040 5341 8D 4E BA			sta SAFEOPEN
 13041
 13042 				; optimize OK (bank.pas), line = 162
 13043
 13044 5344 8D 51 BA			sta WHPOS
 13045
 13046 				; optimize OK (bank.pas), line = 163
 13047
 13048 5347 A9 01			lda #$01
 13049 5349 8D 4F BA			sta BASE
 13050 534C A9 F5			lda #$F5
 13051 534E 8D 50 BA			sta BASE+1
 13052
 13053 				; --- RepeatUntilProlog
 13054 5351			l_30E1
 13055
 13056 				; optimize OK (bank.pas), line = 165
 13057
 13058 5351 AD 51 BA			lda WHPOS
 13059 5354 85 9F			sta :STACKORIGIN+11
 13060 5356 A9 00			lda #$00
 13061 5358 06 9F			asl :STACKORIGIN+11
 13062 535A 2A				rol @
 13063 535B 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 13064 535D AD 4F BA			lda BASE
 13065 5360 18 65 9F			add :STACKORIGIN+11
 13066 5363 A8				tay
 13067 5364 AD 50 BA			lda BASE+1
 13068 5367 65 AF			adc :STACKORIGIN+STACKWIDTH+11
 13069 5369 85 81			sta :bp+1
 13070 536B A9 6B			lda #$6B
 13071 536D 91 80			sta (:bp),y
 13072
 13073 				; optimize OK (bank.pas), line = 166
 13074
 13075 536F AD 51 BA			lda WHPOS
 13076 5372 85 9F			sta :STACKORIGIN+11
 13077 5374 A9 00			lda #$00
 13078 5376 06 9F			asl :STACKORIGIN+11
 13079 5378 2A				rol @
 13080 5379 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 13081 537B AD 4F BA			lda BASE
 13082 537E 18 65 9F			add :STACKORIGIN+11
 13083 5381 A8				tay
 13084 5382 AD 50 BA			lda BASE+1
 13085 5385 65 AF			adc :STACKORIGIN+STACKWIDTH+11
 13086 5387 85 81			sta :bp+1
 13087 5389 98				tya
 13088 538A 18 69 02			add #$02
 13089 538D A8				tay
 13090 538E 90 02			scc
 13091 5390 E6 81			inc :bp+1
 13092 5392 A9 6C			lda #$6C
 13093 5394 91 80			sta (:bp),y
 13094
 13095 				; optimize OK (bank.pas), line = 167
 13096
 13097 5396 A9 00			lda #$00
 13098 5398 8D 45 BA			sta K
 13099
 13100 539B			l_310A
 13101 				; --- ForToDoCondition
 13102 539B AC 45 BA			ldy K
 13103 539E C0 03			cpy #$03
 13104 53A0 B0 37			jcs l_3118
 13105
 13106 				; optimize OK (bank.pas), line = 168
 13107
 13108 53A2 A9 6D			lda #$6D
 13109 53A4 18 79 4A BA			add adr.C,y
 13110 53A8 85 9D			sta :STACKORIGIN+9
 13111 53AA AD 4F BA			lda BASE
 13112 53AD 18 69 01			add #$01
 13113 53B0 85 9E			sta :STACKORIGIN+10
 13114 53B2 AD 50 BA			lda BASE+1
 13115 53B5 69 00			adc #$00
 13116 53B7 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 13117 53B9 A5 9E			lda :STACKORIGIN+10
 13118 53BB 18 6D 45 BA			add K
 13119 53BF A8				tay
 13120 53C0 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
 13121 53C2 69 00			adc #$00
 13122 53C4 85 81			sta :bp+1
 13123 53C6 98				tya
 13124 53C7 18 6D 45 BA			add K
 13125 53CB A8				tay
 13126 53CC 90 02			scc
 13127 53CE E6 81			inc :bp+1
 13128 53D0 A5 9D			lda :STACKORIGIN+9
 13129 53D2 91 80			sta (:bp),y
 13130 53D4 EE 45 BA			inc K
 13131 53D7 D0 C2			jne l_310A
 13132 53D9			l_3118
 13133
 13134 				; --- RepeatUntilProlog
 13135 53D9			l_313B
 13136
 13137 				; optimize FAIL ('CHECKKEYANDSTICK', bank.pas), line = 170
 13138
 13139 53D9 20 E0 20			jsr CHECKKEYANDSTICK
 13140 53DC AD 8B B4			lda CHECKKEYANDSTICK.RESULT
 13141 53DF 8D 4D BA			sta CH
 13142
 13143 				; optimize OK (bank.pas), line = 171
 13144
 13145 53E2 C9 26			cmp #$26
 13146 53E4 F0 10			jeq l_313Bx
 13147 53E6 C9 60			cmp #$60
 13148 53E8 F0 0C			jeq l_313Bx
 13149 53EA C9 73			cmp #$73
 13150 53EC F0 08			jeq l_313Bx
 13151 53EE C9 02			cmp #$02
 13152 53F0 F0 04			jeq l_313Bx
 13153 53F2 C9 2F			cmp #$2F
 13154 53F4 D0 E3			jne l_313B
 13155 53F6			l_313Bx
 13156
 13157 				; optimize FAIL ('WAITFORKEYRELEASE', bank.pas), line = 172
 13158
 13159 53F6 20 41 42			jsr WAITFORKEYRELEASE
 13160
 13161 				; optimize OK (bank.pas), line = 173
 13162
 13163 53F9 A9 05			lda #$05
 13164 53FB 20 60 25			jsr WAITFRAMES
 13165
 13166 				; optimize OK (bank.pas), line = 174
 13167
 13168 53FE AD 4D BA			lda CH
 13169 5401 8D 53 BA			sta @CASETMP_0011
 13170 5404 C9 26			cmp #$26
 13171 5406 D0 0F			jne l_318A
 13172 				@
 13173
 13174 				; optimize OK (bank.pas), line = 175
 13175
 13176 5408 AC 51 BA			ldy WHPOS
 13177 540B B9 4A BA			lda adr.C,y
 13178 540E 38 E9 01			sub #$01
 13179 5411 99 4A BA			sta adr.C,y
 13180 5414 4C 27 54			jmp a_0011
 13181 5417			l_318A
 13182 5417 C9 60			cmp #$60
 13183 5419 D0 0C			jne l_31A3
 13184
 13185 				; optimize OK (bank.pas), line = 176
 13186
 13187 541B AC 51 BA			ldy WHPOS
 13188 541E B9 4A BA			lda adr.C,y
 13189 5421 18 69 01			add #$01
 13190 5424 99 4A BA			sta adr.C,y
 13191 5427			l_31A3
 13192 5427			a_0011
 13193
 13194 				; optimize OK (bank.pas), line = 179
 13195
 13196 5427 AD 4D BA			lda CH
 13197 542A C9 73			cmp #$73
 13198 542C F0 04			jeq l_31D7x
 13199 542E C9 02			cmp #$02
 13200 5430 D0 65			jne l_31D7
 13201 5432			l_31D7x
 13202
 13203 				; optimize OK (bank.pas), line = 181
 13204
 13205 5432 AD 51 BA			lda WHPOS
 13206 5435 85 9F			sta :STACKORIGIN+11
 13207 5437 A9 00			lda #$00
 13208 5439 06 9F			asl :STACKORIGIN+11
 13209 543B 2A				rol @
 13210 543C 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 13211 543E AD 4F BA			lda BASE
 13212 5441 18 65 9F			add :STACKORIGIN+11
 13213 5444 A8				tay
 13214 5445 AD 50 BA			lda BASE+1
 13215 5448 65 AF			adc :STACKORIGIN+STACKWIDTH+11
 13216 544A 85 81			sta :bp+1
 13217 544C A9 00			lda #$00
 13218 544E 91 80			sta (:bp),y
 13219
 13220 				; optimize OK (bank.pas), line = 182
 13221
 13222 5450 AD 51 BA			lda WHPOS
 13223 5453 85 9F			sta :STACKORIGIN+11
 13224 5455 A9 00			lda #$00
 13225 5457 06 9F			asl :STACKORIGIN+11
 13226 5459 2A				rol @
 13227 545A 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 13228 545C AD 4F BA			lda BASE
 13229 545F 18 65 9F			add :STACKORIGIN+11
 13230 5462 A8				tay
 13231 5463 AD 50 BA			lda BASE+1
 13232 5466 65 AF			adc :STACKORIGIN+STACKWIDTH+11
 13233 5468 85 81			sta :bp+1
 13234 546A 98				tya
 13235 546B 18 69 02			add #$02
 13236 546E A8				tay
 13237 546F 90 02			scc
 13238 5471 E6 81			inc :bp+1
 13239 5473 A9 00			lda #$00
 13240 5475 91 80			sta (:bp),y
 13241
 13242 				; optimize OK (bank.pas), line = 183
 13243
 13244 5477 AD 4D BA			lda CH
 13245 547A C9 73			cmp #$73
 13246 547C D0 0A			jne l_320A
 13247
 13248 				; optimize OK (bank.pas), line = 185
 13249
 13250 547E AD 51 BA			lda WHPOS
 13251 5481 C9 02			cmp #$02
 13252 5483 B0 03			jcs l_321D
 13253 5485 EE 51 BA			inc WHPOS
 13254 5488			l_321D
 13255 5488			l_320A
 13256
 13257 				; optimize OK (bank.pas), line = 187
 13258
 13259 5488 AD 4D BA			lda CH
 13260 548B C9 02			cmp #$02
 13261 548D D0 08			jne l_323E
 13262
 13263 				; optimize OK (bank.pas), line = 189
 13264
 13265 548F AD 51 BA			lda WHPOS
 13266 5492 F0 03			jeq l_3251
 13267 5494 CE 51 BA			dec WHPOS
 13268 5497			l_3251
 13269 5497			l_323E
 13270 5497			l_31D7
 13271
 13272 				; optimize OK (bank.pas), line = 193
 13273
 13274 5497 AD 1A E4			lda CURRENTPLAYER
 13275 549A 0A				asl @
 13276 549B 0A				asl @
 13277 549C 0A				asl @
 13278 549D A8				tay
 13279 549E B9 78 E3			lda adr.GANGSTERINT,y
 13280 54A1 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13281 54A4 E8				inx
 13282 54A5 A0 01			ldy #1
 13283 54A7 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13284 54AA C9 04			cmp #$04
 13285 54AC 90 01			bcc @+
 13286 54AE 88				dey
 13287 				@
 13288 54AF 98				tya
 13289 54B0 8D 52 BA			sta HOPS
 13290 54B3 CA				dex
 13291
 13292 				; optimize OK (bank.pas), line = 194
 13293
 13294 54B4 AD 4D BA			lda CH
 13295 54B7 C9 26			cmp #$26
 13296 54B9 F0 04			jeq l_3294x
 13297 54BB C9 60			cmp #$60
 13298 54BD D0 5D			jne l_3294
 13299 54BF			l_3294x
 13300
 13301 				; optimize OK (bank.pas), line = 196
 13302
 13303 54BF AC 51 BA			ldy WHPOS
 13304 54C2 B9 4A BA			lda adr.C,y
 13305 54C5 38 E9 0A			sub #$0A
 13306 54C8 50 02			svc
 13307 54CA 49 80			eor #$80
 13308 54CC 30 05			jmi l_32AA
 13309 54CE A9 00			lda #$00
 13310 54D0 99 4A BA			sta adr.C,y
 13311 54D3			l_32AA
 13312
 13313 				; optimize OK (bank.pas), line = 197
 13314
 13315 54D3 AC 51 BA			ldy WHPOS
 13316 54D6 B9 4A BA			lda adr.C,y
 13317 54D9 10 05			jpl l_32C9
 13318 54DB A9 09			lda #$09
 13319 54DD 99 4A BA			sta adr.C,y
 13320 54E0			l_32C9
 13321
 13322 				; optimize OK (bank.pas), line = 198
 13323
 13324 54E0 CE 46 BA			dec NATTEMPTS
 13325
 13326 				; optimize OK (bank.pas), line = 200
 13327
 13328 54E3 AD 52 BA			lda HOPS
 13329 54E6 D0 15			jne l_3303
 13330 54E8 AC 51 BA			ldy WHPOS
 13331 54EB B9 47 BA			lda adr.T,y
 13332 54EE D9 4A BA			cmp adr.C,y
 13333 54F1 D0 0A			jne l_3303
 13334 54F3 A9 00			lda #$00
 13335 54F5 8D B9 A5			sta CRT.SOUND.CHAN
 13336 54F8 A9 79			lda #$79
 13337 54FA 4C 04 55			jmp l_3312
 13338 54FD			l_3303
 13339
 13340 				; optimize OK (bank.pas), line = 201
 13341
 13342 54FD A9 00			lda #$00
 13343 54FF 8D B9 A5			sta CRT.SOUND.CHAN
 13344 5502 A9 60			lda #$60
 13345 5504			l_3312
 13346 5504 8D BA A5			sta CRT.SOUND.FREQ
 13347 5507 A9 0A			lda #$0A
 13348 5509 8D BB A5			sta CRT.SOUND.DIST
 13349 550C A9 0F			lda #$0F
 13350 550E 8D BC A5			sta CRT.SOUND.VOL
 13351 5511 20 BA 18			jsr CRT.SOUND
 13352
 13353 				; optimize OK (bank.pas), line = 202
 13354
 13355 5514 A9 05			lda #$05
 13356 5516 20 60 25			jsr WAITFRAMES
 13357
 13358 				; optimize FAIL ('CRT.NOSOUND', bank.pas), line = 203
 13359
 13360 5519 20 92 18			jsr CRT.NOSOUND
 13361 551C			l_3294
 13362
 13363 				; optimize OK (bank.pas), line = 205
 13364
 13365 551C AD 52 BA			lda HOPS
 13366 551F D0 1D			jne l_335E
 13367 5521 AD 4A BA			lda adr.C
 13368 5524 CD 47 BA			cmp adr.T
 13369 5527 D0 15			jne l_335E
 13370 5529 AD 4B BA			lda adr.C+$01
 13371 552C CD 48 BA			cmp adr.T+$01
 13372 552F D0 0D			jne l_335E
 13373 5531 AD 4C BA			lda adr.C+$02
 13374 5534 CD 49 BA			cmp adr.T+$02
 13375 5537 D0 05			jne l_335E
 13376 5539 A9 01			lda #$01
 13377 553B 8D 4E BA			sta SAFEOPEN
 13378 553E			l_335E
 13379
 13380 				; optimize OK (bank.pas), line = 206
 13381
 13382 553E AD 4D BA			lda CH
 13383 5541 C9 2F			cmp #$2F
 13384 5543 F0 0F			jeq l_30E1x
 13385 5545 AD 46 BA			lda NATTEMPTS
 13386 5548 F0 0A			jeq l_30E1x
 13387 554A AD 4E BA			lda SAFEOPEN
 13388 554D C9 01			cmp #$01
 13389 554F F0 03 4C 51 53		jne l_30E1
 13390 5554			l_30E1x
 13391
 13392 				; optimize OK (bank.pas), line = 208
 13393
 13394 5554 A9 00			lda #$00
 13395 5556 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 13396 5559 A9 15			lda #$15
 13397 555B 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 13398 555E 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 13399
 13400 				; optimize OK (bank.pas), line = 209
 13401
 13402 5561 AD 4D BA			lda CH
 13403 5564 C9 2F			cmp #$2F
 13404 5566 D0 21			jne l_339F
 13405
 13406 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', bank.pas), line = 211
 13407
 13408 5568 E8				inx
 13409 5569 AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 13410 556E AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 13411 5573 E8				inx
 13412 5574 A9 15 95 94			mva #$15 :STACKORIGIN,x
 13413 5578 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 13414
 13415 				; optimize OK (bank.pas), line = 212
 13416
 13417 557B A9 64			lda #$64
 13418 557D 20 60 25			jsr WAITFRAMES
 13419
 13420 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 213
 13421
 13422 5580 20 2E 21			jsr WAITFORKEY
 13423
 13424 				; optimize FAIL ('ENABLECONSOLE', bank.pas), line = 214
 13425
 13426 5583 20 97 25			jsr ENABLECONSOLE
 13427 5586 4C 01 56			jmp @exit
 13428 5589			l_339F
 13429
 13430 				; optimize OK (bank.pas), line = 218
 13431
 13432 5589 AD 4E BA			lda SAFEOPEN
 13433 558C C9 01			cmp #$01
 13434 558E D0 2B			jne l_33BC
 13435
 13436 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', bank.pas), line = 219
 13437
 13438 5590 E8				inx
 13439 5591 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 13440 5596 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 13441 559B E8				inx
 13442 559C A9 15 95 94			mva #$15 :STACKORIGIN,x
 13443 55A0 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 13444
 13445 				; optimize OK (bank.pas), line = 221
 13446
 13447 55A3 A9 3C			lda #$3C
 13448 55A5 20 60 25			jsr WAITFRAMES
 13449
 13450 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 222
 13451
 13452 55A8 20 2E 21			jsr WAITFORKEY
 13453
 13454 				; optimize OK (bank.pas), line = 223
 13455
 13456 55AB A9 01			lda #$01
 13457 55AD 8D 39 B9			sta CRACKEDBANK.P
 13458 55B0 A9 00			lda #$00
 13459 55B2 8D 3A B9			sta CRACKEDBANK.P+1
 13460 55B5 20 57 2B			jsr CRACKEDBANK
 13461 55B8 4C 01 56			jmp @exit
 13462 55BB			l_33BC
 13463
 13464 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', bank.pas), line = 228
 13465
 13466 55BB E8				inx
 13467 55BC AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 13468 55C1 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 13469 55C6 E8				inx
 13470 55C7 A9 15 95 94			mva #$15 :STACKORIGIN,x
 13471 55CB 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 13472
 13473 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', bank.pas), line = 229
 13474
 13475 55CE E8				inx
 13476 55CF AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 13477 55D4 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 13478 55D9 E8				inx
 13479 55DA A9 16 95 94			mva #$16 :STACKORIGIN,x
 13480 55DE 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 13481
 13482 				; optimize OK (bank.pas), line = 230
 13483
 13484 55E1 A9 64			lda #$64
 13485 55E3 20 60 25			jsr WAITFRAMES
 13486
 13487 				; optimize FAIL ('WAITFORKEY', bank.pas), line = 231
 13488
 13489 55E6 20 2E 21			jsr WAITFORKEY
 13490
 13491 				; optimize FAIL ('PREPAREFIGHTAGAINSTPOLICE', bank.pas), line = 232
 13492
 13493 55E9 20 5A 2C			jsr PREPAREFIGHTAGAINSTPOLICE
 13494
 13495 				; optimize FAIL ('DOFIGHT', bank.pas), line = 233
 13496
 13497 55EC 20 44 49			jsr DOFIGHT
 13498 55EF AD E6 B9			lda DOFIGHT.RESULT
 13499 55F2 C9 01			cmp #$01
 13500 55F4 D0 0B			jne l_33E4
 13501
 13502 				; optimize FAIL ('GOTCAUGHT', bank.pas), line = 235
 13503
 13504 55F6 20 7C 32			jsr GOTCAUGHT
 13505
 13506 				; optimize OK (bank.pas), line = 236
 13507
 13508 55F9 A9 11			lda #$11
 13509 55FB 8D 44 BA			sta RESULT
 13510 55FE 4C 01 56			jmp @exit
 13511 5601			l_33E4
 13512 5601			l_2FE2
 13513 5601			@exit
 13514
 13515 				; ------------------------------------------------------------
 13516
 13517 = BA42			CHOICE	= DATAORIGIN+$15CD
 13518 = BA44			RESULT	= DATAORIGIN+$15CF
 13519 = BA45			K	= DATAORIGIN+$15D0
 13520 = BA46			NATTEMPTS	= DATAORIGIN+$15D1
 13521 = BA47			adr.T	= [DATAORIGIN+$15D2] .array [3]
 13522 5601			.var T	= adr.T .word
 13523 = BA4A			adr.C	= [DATAORIGIN+$15D5] .array [3]
 13524 5601			.var C	= adr.C .word
 13525 = BA4D			CH	= DATAORIGIN+$15D8
 13526 = BA4E			SAFEOPEN	= DATAORIGIN+$15D9
 13527 = BA4F			BASE	= DATAORIGIN+$15DA
 13528 = BA51			WHPOS	= DATAORIGIN+$15DC
 13529 = BA52			HOPS	= DATAORIGIN+$15DD
 13530 = BA53			@CASETMP_0011	= DATAORIGIN+$15DE
 13531
 13532 = BA42			@VarData	= CHOICE
 13533 = 0011			@VarDataSize	= 17
 13534
 13535 5601 60				rts						; ret
 13536 = 5602 47 BA		T
 13536 = 5604 4A BA		C
 13536 				.endl
 13537
 13538 5606			.local	CARDEALERCHOICES				; FUNCTION
 13539
 13540 				; optimize OK (cardealer.pas), line = 13
 13541
 13542 5606 AC 55 BA 84 81		mvy CHOICE+1 :bp+1
 13543 560B AC 54 BA			ldy CHOICE
 13544 560E B1 80			lda (:bp),y
 13545 5610 C9 01			cmp #$01
 13546 5612 F0 03 4C BA 57		jne l_3404
 13547
 13548 				; optimize FAIL ('SHOWLOCATIONHEADER', cardealer.pas), line = 15
 13549
 13550 5617 20 1D 26			jsr SHOWLOCATIONHEADER
 13551
 13552 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 16
 13553
 13554 561A E8				inx
 13555 561B AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 13556 5620 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 13557 5625 20 80 21			jsr CRT_WRITELN
 13558
 13559 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 17
 13560
 13561 5628 E8				inx
 13562 5629 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 13563 562E AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 13564 5633 20 80 21			jsr CRT_WRITELN
 13565
 13566 				; optimize OK (cardealer.pas), line = 20
 13567
 13568 5636 A9 01			lda #$01
 13569 5638 8D 58 BA			sta MINCAR
 13570
 13571 				; optimize OK (cardealer.pas), line = 21
 13572
 13573 563B A9 04			lda #$04
 13574 563D 8D 59 BA			sta MAXCAR
 13575
 13576 				; optimize OK (cardealer.pas), line = 22
 13577
 13578 5640 AD AF B8			lda CURRENTSUBLOCATION
 13579 5643 C9 03			cmp #$03
 13580 5645 90 05			jcc l_3426
 13581
 13582 				; optimize OK (cardealer.pas), line = 23
 13583
 13584 5647 A9 05			lda #$05
 13585 5649 8D 59 BA			sta MAXCAR
 13586 564C			l_3426
 13587
 13588 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', cardealer.pas), line = 26
 13589
 13590 564C 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 13591
 13592 				; optimize OK (cardealer.pas), line = 27
 13593
 13594 564F AD 58 BA			lda MINCAR
 13595 5652 8D 57 BA			sta R
 13596
 13597 5655			l_343B
 13598 				; --- ForToDoCondition
 13599 5655 AD 57 BA			lda R
 13600 5658 CD 59 BA			cmp MAXCAR
 13601 565B 90 02			scc
 13602 565D D0 36			jne l_3449
 13603
 13604 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 29
 13605
 13606 565F E8				inx
 13607 5660 A9 76 95 94			mva #$76 :STACKORIGIN,x
 13608 5664 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 13609 5668 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13610
 13611 				; optimize OK (cardealer.pas), line = 30
 13612
 13613 566B AD 57 BA			lda R
 13614 566E 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 13615
 13616 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 31
 13617
 13618 5671 E8				inx
 13619 5672 A9 A1 95 94			mva #$A1 :STACKORIGIN,x
 13620 5676 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 13621 567A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13622
 13623 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 32
 13624
 13625 567D E8				inx
 13626 567E AD 57 BA			lda R
 13627 5681 0A				asl @
 13628 5682 A8				tay
 13629 5683 B9 08 B0			lda adr.CARNAMES,y
 13630 5686 95 94			sta :STACKORIGIN,x
 13631 5688 B9 09 B0			lda adr.CARNAMES+1,y
 13632 568B 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 13633 568D 20 80 21			jsr CRT_WRITELN
 13634
 13635 				; --- ForToDoEpilog
 13636 5690 EE 57 BA			inc R
 13637 5693 D0 C0			jne l_343B
 13638 5695			l_3449
 13639
 13640 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', cardealer.pas), line = 35
 13641
 13642 5695 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 13643
 13644 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 36
 13645
 13646 5698 E8				inx
 13647 5699 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 13648 569E AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 13649 56A3 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13650
 13651 				; optimize OK (cardealer.pas), line = 37
 13652
 13653 56A6 AD 58 BA			lda MINCAR
 13654 56A9 8D 91 B6			sta READVALUE.MINVALUE
 13655 56AC A9 00			lda #$00
 13656 56AE 8D 92 B6			sta READVALUE.MINVALUE+1
 13657 56B1 AD 59 BA			lda MAXCAR
 13658 56B4 8D 93 B6			sta READVALUE.MAXVALUE
 13659 56B7 A9 00			lda #$00
 13660 56B9 8D 94 B6			sta READVALUE.MAXVALUE+1
 13661 56BC 20 EE 21			jsr READVALUE
 13662 56BF AD 95 B6			lda READVALUE.RESULT
 13663 56C2 8D 5C BA			sta NEWCAR
 13664
 13665 				; optimize OK (cardealer.pas), line = 38
 13666
 13667 56C5 D0 03			jne l_347C
 13668 56C7 4C 6A 59			jmp @exit
 13669 56CA			l_347C
 13670
 13671 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', cardealer.pas), line = 39
 13672
 13673 56CA 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 13674
 13675 				; optimize OK (cardealer.pas), line = 40
 13676
 13677 56CD AC 5C BA			ldy NEWCAR
 13678 56D0 B9 00 E7			lda adr.CARPRICES,y
 13679 56D3 8D 5A BA			sta PRICE
 13680
 13681 				; optimize OK (cardealer.pas), line = 41
 13682
 13683 56D6 8D 40 B9			sta PAYMONEY.PRICE
 13684 56D9 A9 00			lda #$00
 13685 56DB 8D 41 B9			sta PAYMONEY.PRICE+1
 13686 56DE 20 98 2D			jsr PAYMONEY
 13687 56E1 AD 42 B9			lda PAYMONEY.RESULT
 13688 56E4 D0 03			jne l_349C
 13689 56E6 4C 6A 59			jmp @exit
 13690 56E9			l_349C
 13691
 13692 				; optimize OK (cardealer.pas), line = 43
 13693
 13694 56E9 AC 1A E4			ldy CURRENTPLAYER
 13695 56EC B9 2C E0			lda adr.PLCAR,y
 13696 56EF D0 03 4C 76 57		jeq l_34B4
 13697
 13698 				; optimize FAIL (1, cardealer.pas), line = 45
 13699
 13700 56F4 E8				inx
 13701 56F5 A9 E8 95 94			mva #$E8 :STACKORIGIN,x
 13702 56F9 A9 03 95 A4			mva #$03 :STACKORIGIN+STACKWIDTH,x
 13703 56FD A9 00			lda #$00
 13704 56FF 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13705 5702 E8				inx
 13706 5703 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 13707 5708 E8				inx
 13708 5709 AC 1A E4			ldy CURRENTPLAYER
 13709 570C B9 2C E0			lda adr.PLCAR,y
 13710 570F 95 94			sta :STACKORIGIN,x
 13711 5711 20 E7 11			jsr imulBYTE
 13712 5714 A5 84			lda :eax
 13713 5716 95 93			sta :STACKORIGIN-1,x
 13714 5718 A5 85			lda :eax+1
 13715 571A 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
 13716 571C CA				dex
 13717 571D B5 93			lda :STACKORIGIN-1,x
 13718 571F 18 75 94			add :STACKORIGIN,x
 13719 5722 8D 5B BA			sta OLDPRICE
 13720 5725 CA				dex
 13721 5726 CA				dex
 13722
 13723 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', cardealer.pas), line = 46
 13724
 13725 5727 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 13726
 13727 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 47
 13728
 13729 572A E8				inx
 13730 572B AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 13731 5730 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 13732 5735 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13733
 13734 				; optimize OK (cardealer.pas), line = 48
 13735
 13736 5738 AD 5B BA			lda OLDPRICE
 13737 573B 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 13738
 13739 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 49
 13740
 13741 573E E8				inx
 13742 573F AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 13743 5744 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 13744 5749 20 80 21			jsr CRT_WRITELN
 13745
 13746 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 50
 13747
 13748 574C E8				inx
 13749 574D AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 13750 5752 AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 13751 5757 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13752
 13753 				; optimize FAIL ('GETYESNO', cardealer.pas), line = 52
 13754
 13755 575A 20 DA 21			jsr GETYESNO
 13756 575D AD 90 B6			lda GETYESNO.RESULT
 13757 5760 8D 57 BA			sta R
 13758
 13759 				; optimize OK (cardealer.pas), line = 53
 13760
 13761 5763 D0 03			jne l_34EB
 13762 5765 4C 6A 59			jmp @exit
 13763 5768			l_34EB
 13764
 13765 				; optimize OK (cardealer.pas), line = 54
 13766
 13767 5768 AD 5B BA			lda OLDPRICE
 13768 576B 8D 35 B9			sta ADDMONEY.AMOUNT
 13769 576E A9 00			lda #$00
 13770 5770 8D 36 B9			sta ADDMONEY.AMOUNT+1
 13771 5773 20 E3 2A			jsr ADDMONEY
 13772 5776			l_34B4
 13773
 13774 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 57
 13775
 13776 5776 E8				inx
 13777 5777 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 13778 577C AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 13779 5781 20 80 21			jsr CRT_WRITELN
 13780
 13781 				; optimize OK (cardealer.pas), line = 58
 13782
 13783 5784 AD 5B BA			lda OLDPRICE
 13784 5787 F0 22			jeq l_3509
 13785
 13786 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 60
 13787
 13788 5789 E8				inx
 13789 578A AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 13790 578F AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 13791 5794 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13792
 13793 				; optimize OK (cardealer.pas), line = 61
 13794
 13795 5797 AD 5B BA			lda OLDPRICE
 13796 579A 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 13797
 13798 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 62
 13799
 13800 579D E8				inx
 13801 579E AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 13802 57A3 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 13803 57A8 20 80 21			jsr CRT_WRITELN
 13804 57AB			l_3509
 13805
 13806 				; optimize OK (cardealer.pas), line = 64
 13807
 13808 57AB AC 1A E4			ldy CURRENTPLAYER
 13809 57AE AD 5C BA			lda NEWCAR
 13810 57B1 99 2C E0			sta adr.PLCAR,y
 13811
 13812 				; optimize FAIL ('WAITFORKEY', cardealer.pas), line = 65
 13813
 13814 57B4 20 2E 21			jsr WAITFORKEY
 13815 57B7 4C 6A 59			jmp @exit
 13816 57BA			l_3404
 13817
 13818 				; optimize OK (cardealer.pas), line = 70
 13819
 13820 57BA AC 55 BA 84 81		mvy CHOICE+1 :bp+1
 13821 57BF AC 54 BA			ldy CHOICE
 13822 57C2 B1 80			lda (:bp),y
 13823 57C4 C9 02			cmp #$02
 13824 57C6 F0 03 4C 6A 59		jne l_3534
 13825
 13826 				; optimize FAIL ('SHOWLOCATIONHEADER', cardealer.pas), line = 72
 13827
 13828 57CB 20 1D 26			jsr SHOWLOCATIONHEADER
 13829
 13830 				; optimize FAIL (1, cardealer.pas), line = 75
 13831
 13832 57CE E8				inx
 13833 57CF A0 01			ldy #1
 13834 57D1 AD AF B8			lda CURRENTSUBLOCATION
 13835 57D4 C9 02			cmp #$02
 13836 57D6 90 01			bcc @+
 13837 57D8 88				dey
 13838 				@
 13839 57D9 94 94			sty :STACKORIGIN,x
 13840 57DB A9 03			lda #$03
 13841 57DD 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13842 57E0 CA				dex
 13843 57E1 A0 01			ldy #1
 13844 57E3 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13845 57E6 D0 01			bne @+
 13846 57E8 88				dey
 13847 				@
 13848 57E9 98				tya
 13849 57EA 35 95			and :STACKORIGIN+1,x
 13850 57EC F0 14			jeq l_3553
 13851
 13852 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 77
 13853
 13854 57EE E8				inx
 13855 57EF AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 13856 57F4 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 13857 57F9 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13858
 13859 				; optimize FAIL ('WAITFORKEY', cardealer.pas), line = 78
 13860
 13861 57FC 20 2E 21			jsr WAITFORKEY
 13862 57FF 4C 6A 59			jmp @exit
 13863 5802			l_3553
 13864
 13865 				; optimize OK (cardealer.pas), line = 82
 13866
 13867 5802 AC 1A E4			ldy CURRENTPLAYER
 13868 5805 B9 41 E4			lda adr.PLNGANGSTERS,y
 13869 5808 C9 02			cmp #$02
 13870 580A 90 0E			jcc l_356F
 13871
 13872 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 83
 13873
 13874 580C E8				inx
 13875 580D AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 13876 5812 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 13877 5817 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13878 581A			l_356F
 13879
 13880 				; optimize FAIL ('SELECTGANGSTER', cardealer.pas), line = 84
 13881
 13882 581A 20 21 2E			jsr SELECTGANGSTER
 13883
 13884 				; optimize OK (cardealer.pas), line = 85
 13885
 13886 581D AD 18 E4			lda CURRENTGANGSTER
 13887 5820 C9 63			cmp #$63
 13888 5822 D0 03			jne l_3588
 13889 5824 4C 6A 59			jmp @exit
 13890 5827			l_3588
 13891
 13892 				; optimize OK (cardealer.pas), line = 88
 13893
 13894 5827 AC 18 E4			ldy CURRENTGANGSTER
 13895 582A B9 78 E3			lda adr.GANGSTERINT,y
 13896 582D 4A				lsr @
 13897 582E 4A				lsr @
 13898 582F 8D 57 BA			sta R
 13899
 13900 				; optimize OK (cardealer.pas), line = 90
 13901
 13902 5832 B9 58 E3			lda adr.GANGSTERSTR,y
 13903 5835 4A				lsr @
 13904 5836 4A				lsr @
 13905 5837 8D 58 BA			sta MINCAR
 13906
 13907 				; optimize OK (cardealer.pas), line = 91
 13908
 13909 583A 18 6D 57 BA			add R
 13910 583E 18 6D 57 BA			add R
 13911 5842 18 6D 57 BA			add R
 13912 5846 8D 58 BA			sta MINCAR
 13913
 13914 				; optimize OK (cardealer.pas), line = 92
 13915
 13916 5849 A9 64			lda #$64
 13917 584B 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13918 584E AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 13919 5851 CD 58 BA			cmp MINCAR
 13920 5854 B0 6D			jcs l_35D0
 13921
 13922 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 95
 13923
 13924 5856 E8				inx
 13925 5857 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 13926 585C AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 13927 5861 20 80 21			jsr CRT_WRITELN
 13928
 13929 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', cardealer.pas), line = 96
 13930
 13931 5864 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 13932
 13933 				; optimize OK (cardealer.pas), line = 98
 13934
 13935 5867 AC 1A E4			ldy CURRENTPLAYER
 13936 586A B9 2C E0			lda adr.PLCAR,y
 13937 586D D0 11			jne l_35EA
 13938
 13939 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 100
 13940
 13941 586F E8				inx
 13942 5870 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 13943 5875 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 13944 587A 20 80 21			jsr CRT_WRITELN
 13945 587D 4C 9C 58			jmp l_35F7
 13946 5880			l_35EA
 13947
 13948 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 104
 13949
 13950 5880 E8				inx
 13951 5881 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 13952 5886 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 13953 588B 20 80 21			jsr CRT_WRITELN
 13954
 13955 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', cardealer.pas), line = 105
 13956
 13957 588E E8				inx
 13958 588F AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 13959 5894 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 13960 5899 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 13961 589C			l_35F7
 13962
 13963 				; optimize FAIL (2, cardealer.pas), line = 108
 13964
 13965 589C E8				inx
 13966 589D AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 13967 58A2 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 13968 58A6 E8				inx
 13969 58A7 A9 01 95 94			mva #$01 :STACKORIGIN,x
 13970 58AB A9 05			lda #$05
 13971 58AD 20 CB 15			jsr SYSTEM.RANDOM_02E9
 13972 58B0 B5 94			lda :STACKORIGIN,x
 13973 58B2 18 6D 81 A4			add SYSTEM.RANDOM_02E9.RESULT
 13974 58B6 B4 93			ldy :STACKORIGIN-1,x
 13975 58B8 99 2C E0			sta adr.PLCAR,y
 13976 58BB CA				dex
 13977 58BC CA				dex
 13978
 13979 				; optimize FAIL ('WAITFORKEY', cardealer.pas), line = 109
 13980
 13981 58BD 20 2E 21			jsr WAITFORKEY
 13982 58C0 4C 6A 59			jmp @exit
 13983 58C3			l_35D0
 13984
 13985 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', cardealer.pas), line = 114
 13986
 13987 58C3 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 13988
 13989 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 115
 13990
 13991 58C6 E8				inx
 13992 58C7 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 13993 58CC AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 13994 58D1 20 80 21			jsr CRT_WRITELN
 13995
 13996 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 116
 13997
 13998 58D4 E8				inx
 13999 58D5 AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 14000 58DA AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 14001 58DF 20 80 21			jsr CRT_WRITELN
 14002
 14003 				; optimize FAIL ('WAITFORKEY', cardealer.pas), line = 117
 14004
 14005 58E2 20 2E 21			jsr WAITFORKEY
 14006
 14007 				; optimize OK (cardealer.pas), line = 118
 14008
 14009 58E5 A9 00			lda #$00
 14010 58E7 8D 57 BA			sta R
 14011
 14012 				; -------------------  ASM Block 00000166  -------------------
 14013
 14014 				; 
 14015 58EA AD 8C A3		            lda loc_string_19
 14016 58ED 8D 7A B0		            sta adr.FP_GANG+$02
 14017 58F0 AD 8D A3		            lda loc_string_19+1
 14018 58F3 8D 7B B0		            sta adr.FP_GANG+1+$02
 14019 				        
 14020 				; optimize OK (cardealer.pas), line = 129
 14021
 14022 58F6 A9 01			lda #$01
 14023 58F8 8D 02 EC			sta adr.FP_AI+$01
 14024
 14025 				; optimize OK (cardealer.pas), line = 130
 14026
 14027 58FB 8D 04 EC			sta adr.FP_N+$01
 14028
 14029 				; -------------------  ASM Block 00000167  -------------------
 14030
 14031 				; 
 14032 58FE AD 8C A3		            lda loc_string_19
 14033 5901 8D 98 B0		            sta adr.FP_GANG+16*2
 14034 5904 AD 8D A3		            lda loc_string_19+1
 14035 5907 8D 99 B0		            sta adr.FP_GANG+1+16*2
 14036 				        
 14037 				; optimize OK (cardealer.pas), line = 139
 14038
 14039 590A A9 05			lda #$05
 14040 590C 8D 55 EC			sta adr.FP_WEAPON+$10
 14041
 14042 				; optimize FAIL (1, cardealer.pas), line = 140
 14043
 14044 590F E8				inx
 14045 5910 A9 10 95 94			mva #$10 :STACKORIGIN,x
 14046 5914 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 14047 5918 A9 02			lda #$02
 14048 591A 20 CB 15			jsr SYSTEM.RANDOM_02E9
 14049 591D B4 94			ldy :STACKORIGIN,x
 14050 591F AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 14051 5922 99 45 ED			sta adr.FP_SEX,y
 14052 5925 CA				dex
 14053
 14054 				; optimize OK (cardealer.pas), line = 141
 14055
 14056 5926 A9 1E			lda #$1E
 14057 5928 8D 95 EC			sta adr.FP_ENERGY+$10
 14058
 14059 				; optimize FAIL ('DOFIGHT', cardealer.pas), line = 143
 14060
 14061 592B 20 44 49			jsr DOFIGHT
 14062 592E AD E6 B9			lda DOFIGHT.RESULT
 14063 5931 C9 01			cmp #$01
 14064 5933 D0 0B			jne l_3642
 14065
 14066 				; optimize FAIL ('GOTCAUGHT', cardealer.pas), line = 145
 14067
 14068 5935 20 7C 32			jsr GOTCAUGHT
 14069
 14070 				; optimize OK (cardealer.pas), line = 146
 14071
 14072 5938 A9 11			lda #$11
 14073 593A 8D 56 BA			sta RESULT
 14074 593D 4C 6A 59			jmp @exit
 14075 5940			l_3642
 14076
 14077 				; optimize FAIL ('ENABLECONSOLE', cardealer.pas), line = 150
 14078
 14079 5940 20 97 25			jsr ENABLECONSOLE
 14080
 14081 				; optimize FAIL ('SHOWLOCATIONHEADER', cardealer.pas), line = 151
 14082
 14083 5943 20 1D 26			jsr SHOWLOCATIONHEADER
 14084
 14085 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 152
 14086
 14087 5946 E8				inx
 14088 5947 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 14089 594C AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 14090 5951 20 80 21			jsr CRT_WRITELN
 14091
 14092 				; optimize FAIL ('CRT_WRITELN', cardealer.pas), line = 153
 14093
 14094 5954 E8				inx
 14095 5955 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 14096 595A AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 14097 595F 20 80 21			jsr CRT_WRITELN
 14098
 14099 				; optimize FAIL ('WAITFORKEY', cardealer.pas), line = 154
 14100
 14101 5962 20 2E 21			jsr WAITFORKEY
 14102
 14103 				; optimize OK (cardealer.pas), line = 155
 14104
 14105 5965 A9 06			lda #$06
 14106 5967 8D 56 BA			sta RESULT
 14107 596A			l_3534
 14108 596A			@exit
 14109
 14110 				; ------------------------------------------------------------
 14111
 14112 = BA54			CHOICE	= DATAORIGIN+$15DF
 14113 = BA56			RESULT	= DATAORIGIN+$15E1
 14114 = BA57			R	= DATAORIGIN+$15E2
 14115 = BA58			MINCAR	= DATAORIGIN+$15E3
 14116 = BA59			MAXCAR	= DATAORIGIN+$15E4
 14117 = BA5A			PRICE	= DATAORIGIN+$15E5
 14118 = BA5B			OLDPRICE	= DATAORIGIN+$15E6
 14119 = BA5C			NEWCAR	= DATAORIGIN+$15E7
 14120
 14121 = BA54			@VarData	= CHOICE
 14122 = 0008			@VarDataSize	= 8
 14123
 14124 596A 60				rts						; ret
 14125 				.endl
 14126
 14127 596B			.local	FORGERYCHOICES					; FUNCTION
 14128
 14129 				; optimize OK (forgery.pas), line = 13
 14130
 14131 596B AC 5E BA 84 81		mvy CHOICE+1 :bp+1
 14132 5970 AC 5D BA			ldy CHOICE
 14133 5973 B1 80			lda (:bp),y
 14134 5975 C9 01			cmp #$01
 14135 5977 F0 03 4C 7D 5A		jne l_366F
 14136
 14137 				; optimize FAIL ('SHOWLOCATIONHEADER', forgery.pas), line = 15
 14138
 14139 597C 20 1D 26			jsr SHOWLOCATIONHEADER
 14140
 14141 				; optimize OK (forgery.pas), line = 18
 14142
 14143 597F AC 1A E4			ldy CURRENTPLAYER
 14144 5982 B9 28 E0			lda adr.PLFORGEDID,y
 14145 5985 F0 14			jeq l_3686
 14146
 14147 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 20
 14148
 14149 5987 E8				inx
 14150 5988 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 14151 598D AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 14152 5992 20 80 21			jsr CRT_WRITELN
 14153
 14154 				; optimize FAIL ('WAITFORKEY', forgery.pas), line = 21
 14155
 14156 5995 20 2E 21			jsr WAITFORKEY
 14157 5998 4C 39 5C			jmp @exit
 14158 599B			l_3686
 14159
 14160 				; optimize OK (forgery.pas), line = 25
 14161
 14162 599B AC 1A E4			ldy CURRENTPLAYER
 14163 599E B9 41 E4			lda adr.PLNGANGSTERS,y
 14164 59A1 8D 60 BA			sta R
 14165
 14166 				; optimize OK (forgery.pas), line = 26
 14167
 14168 59A4 A9 E8			lda #$E8
 14169 59A6 85 8C			sta :ecx
 14170 59A8 A9 03			lda #$03
 14171 59AA 85 8D			sta :ecx+1
 14172 59AC AD 60 BA			lda R
 14173 59AF 85 84			sta :eax
 14174 59B1 A9 00			lda #$00
 14175 59B3 85 85			sta :eax+1
 14176 					.ifdef fmulinit
 14177 					fmulu_16
 14178 					els
 14179 59B5 20 63 12			imulCX_AL
 14180 					eif
 14181 59B8 A5 84			lda :eax
 14182 59BA 8D 61 BA			sta C
 14183 59BD A5 85			lda :eax+1
 14184 59BF 8D 62 BA			sta C+1
 14185
 14186 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 27
 14187
 14188 59C2 E8				inx
 14189 59C3 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 14190 59C8 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 14191 59CD 20 80 21			jsr CRT_WRITELN
 14192
 14193 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 28
 14194
 14195 59D0 E8				inx
 14196 59D1 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 14197 59D6 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 14198 59DB 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14199
 14200 				; optimize OK (forgery.pas), line = 29
 14201
 14202 59DE AD 60 BA			lda R
 14203 59E1 C9 02			cmp #$02
 14204 59E3 90 0E			jcc l_36B8
 14205
 14206 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 30
 14207
 14208 59E5 E8				inx
 14209 59E6 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 14210 59EB AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 14211 59F0 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14212 59F3			l_36B8
 14213
 14214 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 31
 14215
 14216 59F3 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14217
 14218 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 32
 14219
 14220 59F6 E8				inx
 14221 59F7 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 14222 59FC AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 14223 5A01 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14224
 14225 				; optimize OK (forgery.pas), line = 33
 14226
 14227 5A04 AD 61 BA			lda C
 14228 5A07 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 14229 5A0A AD 62 BA			lda C+1
 14230 5A0D 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 14231 5A10 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 14232
 14233 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 34
 14234
 14235 5A13 E8				inx
 14236 5A14 A9 1E 95 94			mva #$1E :STACKORIGIN,x
 14237 5A18 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 14238 5A1C 20 80 21			jsr CRT_WRITELN
 14239
 14240 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 35
 14241
 14242 5A1F 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14243
 14244 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 36
 14245
 14246 5A22 E8				inx
 14247 5A23 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 14248 5A28 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 14249 5A2D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14250
 14251 				; optimize FAIL ('GETYESNO', forgery.pas), line = 38
 14252
 14253 5A30 20 DA 21			jsr GETYESNO
 14254 5A33 AD 90 B6			lda GETYESNO.RESULT
 14255 5A36 8D 60 BA			sta R
 14256
 14257 				; optimize OK (forgery.pas), line = 39
 14258
 14259 5A39 D0 03			jne l_36E1
 14260 5A3B 4C 39 5C			jmp @exit
 14261 5A3E			l_36E1
 14262
 14263 				; optimize OK (forgery.pas), line = 40
 14264
 14265 5A3E AD 61 BA			lda C
 14266 5A41 8D 40 B9			sta PAYMONEY.PRICE
 14267 5A44 AD 62 BA			lda C+1
 14268 5A47 8D 41 B9			sta PAYMONEY.PRICE+1
 14269 5A4A 20 98 2D			jsr PAYMONEY
 14270 5A4D AD 42 B9			lda PAYMONEY.RESULT
 14271 5A50 D0 03			jne l_36F6
 14272 5A52 4C 39 5C			jmp @exit
 14273 5A55			l_36F6
 14274
 14275 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 42
 14276
 14277 5A55 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14278
 14279 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 43
 14280
 14281 5A58 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14282
 14283 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 44
 14284
 14285 5A5B E8				inx
 14286 5A5C AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 14287 5A61 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 14288 5A66 20 80 21			jsr CRT_WRITELN
 14289
 14290 				; optimize OK (forgery.pas), line = 45
 14291
 14292 5A69 AC 1A E4			ldy CURRENTPLAYER
 14293 5A6C A9 01			lda #$01
 14294 5A6E 99 28 E0			sta adr.PLFORGEDID,y
 14295
 14296 				; optimize OK (forgery.pas), line = 46
 14297
 14298 5A71 B9 80 E0			lda adr.PLNEWPOINTS,y
 14299 5A74 18 69 01			add #$01
 14300 5A77 99 80 E0			sta adr.PLNEWPOINTS,y
 14301
 14302 				; optimize FAIL ('WAITFORKEY', forgery.pas), line = 47
 14303
 14304 5A7A 20 2E 21			jsr WAITFORKEY
 14305 5A7D			l_366F
 14306
 14307 				; optimize OK (forgery.pas), line = 54
 14308
 14309 5A7D AC 5E BA 84 81		mvy CHOICE+1 :bp+1
 14310 5A82 AC 5D BA			ldy CHOICE
 14311 5A85 B1 80			lda (:bp),y
 14312 5A87 C9 02			cmp #$02
 14313 5A89 F0 03 4C 39 5C		jne l_372A
 14314
 14315 				; optimize FAIL ('SHOWLOCATIONHEADER', forgery.pas), line = 56
 14316
 14317 5A8E 20 1D 26			jsr SHOWLOCATIONHEADER
 14318
 14319 				; optimize OK (forgery.pas), line = 57
 14320
 14321 5A91 AC 1A E4			ldy CURRENTPLAYER
 14322 5A94 B9 20 E0			lda adr.PLFAKEMONEY,y
 14323 5A97 F0 14			jeq l_3741
 14324
 14325 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 59
 14326
 14327 5A99 E8				inx
 14328 5A9A AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 14329 5A9F AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 14330 5AA4 20 80 21			jsr CRT_WRITELN
 14331
 14332 				; optimize FAIL ('WAITFORKEY', forgery.pas), line = 60
 14333
 14334 5AA7 20 2E 21			jsr WAITFORKEY
 14335 5AAA 4C 39 5C			jmp @exit
 14336 5AAD			l_3741
 14337
 14338 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 64
 14339
 14340 5AAD E8				inx
 14341 5AAE AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 14342 5AB3 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 14343 5AB8 20 80 21			jsr CRT_WRITELN
 14344
 14345 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 65
 14346
 14347 5ABB E8				inx
 14348 5ABC AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 14349 5AC1 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 14350 5AC6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14351
 14352 				; optimize OK (forgery.pas), line = 67
 14353
 14354 5AC9 A9 88			lda #$88
 14355 5ACB 8D 65 BA			sta M
 14356 5ACE A9 13			lda #$13
 14357 5AD0 8D 66 BA			sta M+1
 14358
 14359 				; optimize OK (forgery.pas), line = 68
 14360
 14361 5AD3 AD 1A E4			lda CURRENTPLAYER
 14362 5AD6 0A				asl @
 14363 5AD7 0A				asl @
 14364 5AD8 A8				tay
 14365 5AD9				.LOCAL
 14366 5AD9 B9 13 E0			lda adr.PLMONEY+3,y
 14367 5ADC 38 E9 00			sub #$00
 14368 5ADF D0 21			bne L4
 14369 5AE1 B9 12 E0			lda adr.PLMONEY+2,y
 14370 5AE4 C9 00			cmp #$00
 14371 5AE6 D0 0E			bne L1
 14372 5AE8 B9 11 E0			lda adr.PLMONEY+1,y
 14373 5AEB CD 66 BA			cmp M+1
 14374 5AEE D0 06			bne L1
 14375 5AF0 B9 10 E0			lda adr.PLMONEY,y
 14376 5AF3 CD 65 BA			cmp M
 14377 5AF6 F0 10		L1	beq L5
 14378 5AF8 B0 04			bcs L3
 14379 5AFA A9 FF			lda #$FF
 14380 5AFC D0 0A			bne L5
 14381 5AFE A9 01		L3	lda #$01
 14382 5B00 D0 06			bne L5
 14383 5B02 50 04		L4	bvc L5
 14384 5B04 49 FF			eor #$FF
 14385 5B06 09 01			ora #$01
 14386 5B08			L5
 14387 					.ENDL
 14388 5B08 10 0C			jpl l_3766
 14389 5B0A B9 10 E0			lda adr.PLMONEY,y
 14390 5B0D 8D 65 BA			sta M
 14391 5B10 B9 11 E0			lda adr.PLMONEY+1,y
 14392 5B13 8D 66 BA			sta M+1
 14393 5B16			l_3766
 14394
 14395 				; optimize OK (forgery.pas), line = 69
 14396
 14397 5B16 AD 65 BA			lda M
 14398 5B19 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 14399 5B1C AD 66 BA			lda M+1
 14400 5B1F 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 14401 5B22 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 14402
 14403 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 70
 14404
 14405 5B25 E8				inx
 14406 5B26 A9 22 95 94			mva #$22 :STACKORIGIN,x
 14407 5B2A A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 14408 5B2E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14409
 14410 				; optimize OK (forgery.pas), line = 71
 14411
 14412 5B31 A9 00			lda #$00
 14413 5B33 8D 91 B6			sta READVALUE.MINVALUE
 14414 5B36 8D 92 B6			sta READVALUE.MINVALUE+1
 14415 5B39 AD 65 BA			lda M
 14416 5B3C 8D 93 B6			sta READVALUE.MAXVALUE
 14417 5B3F AD 66 BA			lda M+1
 14418 5B42 8D 94 B6			sta READVALUE.MAXVALUE+1
 14419 5B45 20 EE 21			jsr READVALUE
 14420 5B48 AD 95 B6			lda READVALUE.RESULT
 14421 5B4B 8D 61 BA			sta C
 14422 5B4E AD 96 B6			lda READVALUE.RESULT+1
 14423 5B51 8D 62 BA			sta C+1
 14424
 14425 				; optimize OK (forgery.pas), line = 72
 14426
 14427 5B54 0D 61 BA			ora C
 14428 5B57 D0 03			jne l_378D
 14429 5B59 4C 39 5C			jmp @exit
 14430 5B5C			l_378D
 14431
 14432 				; optimize FAIL (1, forgery.pas), line = 74
 14433
 14434 5B5C E8				inx
 14435 5B5D AD 61 BA			lda C
 14436 5B60 18 69 64			add #$64
 14437 5B63 95 94			sta :STACKORIGIN,x
 14438 5B65 AD 62 BA			lda C+1
 14439 5B68 69 00			adc #$00
 14440 5B6A 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 14441 5B6C A9 0A			lda #$0A
 14442 5B6E 20 CB 15			jsr SYSTEM.RANDOM_02E9
 14443 5B71 E8				inx
 14444 5B72 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 14445 5B77 E8				inx
 14446 5B78 AD 61 BA 95 94		mva C :STACKORIGIN,x
 14447 5B7D AD 62 BA 95 A4		mva C+1 :STACKORIGIN+STACKWIDTH,x
 14448 5B82 E8				inx
 14449 5B83 A9 04 95 94			mva #$04 :STACKORIGIN,x
 14450 5B87 20 B6 0F			jsr shrAX_CL.WORD
 14451 5B8A CA				dex
 14452 5B8B A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 14453 5B8F 20 10 12			jsr imulWORD
 14454 5B92 CA				dex
 14455 5B93 B5 93			lda :STACKORIGIN-1,x
 14456 5B95 18 65 84			add :eax
 14457 5B98 95 93			sta :STACKORIGIN-1,x
 14458 5B9A B5 A3			lda :STACKORIGIN-1+STACKWIDTH,x
 14459 5B9C 65 85			adc :eax+1
 14460 5B9E 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
 14461 5BA0 CA				dex
 14462 5BA1 B5 94			lda :STACKORIGIN,x
 14463 5BA3 8D 63 BA			sta P
 14464 5BA6 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 14465 5BA8 8D 64 BA			sta P+1
 14466 5BAB CA				dex
 14467
 14468 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 75
 14469
 14470 5BAC 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14471
 14472 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 76
 14473
 14474 5BAF 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14475
 14476 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 77
 14477
 14478 5BB2 E8				inx
 14479 5BB3 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 14480 5BB8 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 14481 5BBD 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14482
 14483 				; optimize OK (forgery.pas), line = 78
 14484
 14485 5BC0 AD 63 BA			lda P
 14486 5BC3 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 14487 5BC6 AD 64 BA			lda P+1
 14488 5BC9 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 14489 5BCC 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 14490
 14491 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', forgery.pas), line = 79
 14492
 14493 5BCF E8				inx
 14494 5BD0 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 14495 5BD5 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 14496 5BDA 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14497
 14498 				; optimize FAIL ('GETYESNO', forgery.pas), line = 81
 14499
 14500 5BDD 20 DA 21			jsr GETYESNO
 14501 5BE0 AD 90 B6			lda GETYESNO.RESULT
 14502 5BE3 8D 60 BA			sta R
 14503
 14504 				; optimize OK (forgery.pas), line = 82
 14505
 14506 5BE6 D0 03			jne l_37C8
 14507 5BE8 4C 39 5C			jmp @exit
 14508 5BEB			l_37C8
 14509
 14510 				; optimize OK (forgery.pas), line = 83
 14511
 14512 5BEB AD 61 BA			lda C
 14513 5BEE 8D 40 B9			sta PAYMONEY.PRICE
 14514 5BF1 AD 62 BA			lda C+1
 14515 5BF4 8D 41 B9			sta PAYMONEY.PRICE+1
 14516 5BF7 20 98 2D			jsr PAYMONEY
 14517 5BFA AD 42 B9			lda PAYMONEY.RESULT
 14518 5BFD D0 03			jne l_37DD
 14519 5BFF 4C 39 5C			jmp @exit
 14520 5C02			l_37DD
 14521
 14522 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 85
 14523
 14524 5C02 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14525
 14526 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', forgery.pas), line = 86
 14527
 14528 5C05 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14529
 14530 				; optimize FAIL ('CRT_WRITELN', forgery.pas), line = 87
 14531
 14532 5C08 E8				inx
 14533 5C09 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 14534 5C0E AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 14535 5C13 20 80 21			jsr CRT_WRITELN
 14536
 14537 				; optimize OK (forgery.pas), line = 89
 14538
 14539 5C16 AD 63 BA			lda P
 14540 5C19 8D 35 B9			sta ADDMONEY.AMOUNT
 14541 5C1C AD 64 BA			lda P+1
 14542 5C1F 8D 36 B9			sta ADDMONEY.AMOUNT+1
 14543 5C22 20 E3 2A			jsr ADDMONEY
 14544
 14545 				; optimize OK (forgery.pas), line = 90
 14546
 14547 5C25 AC 1A E4			ldy CURRENTPLAYER
 14548 5C28 A9 06			lda #$06
 14549 5C2A 99 20 E0			sta adr.PLFAKEMONEY,y
 14550
 14551 				; optimize OK (forgery.pas), line = 91
 14552
 14553 5C2D B9 80 E0			lda adr.PLNEWPOINTS,y
 14554 5C30 18 69 01			add #$01
 14555 5C33 99 80 E0			sta adr.PLNEWPOINTS,y
 14556
 14557 				; optimize FAIL ('WAITFORKEY', forgery.pas), line = 92
 14558
 14559 5C36 20 2E 21			jsr WAITFORKEY
 14560 5C39			l_372A
 14561 5C39			@exit
 14562
 14563 				; ------------------------------------------------------------
 14564
 14565 = BA5D			CHOICE	= DATAORIGIN+$15E8
 14566 = BA5F			RESULT	= DATAORIGIN+$15EA
 14567 = BA60			R	= DATAORIGIN+$15EB
 14568 = BA61			C	= DATAORIGIN+$15EC
 14569 = BA63			P	= DATAORIGIN+$15EE
 14570 = BA65			M	= DATAORIGIN+$15F0
 14571
 14572 = BA5D			@VarData	= CHOICE
 14573 = 0009			@VarDataSize	= 9
 14574
 14575 5C39 60				rts						; ret
 14576 				.endl
 14577
 14578 5C3A			.local	GAMBLINGCHOICES					; FUNCTION
 14579
 14580 				; optimize FAIL ('SHOWLOCATIONHEADER', gambling.pas), line = 9
 14581
 14582 5C3A 20 1D 26			jsr SHOWLOCATIONHEADER
 14583
 14584 				; optimize FAIL ('CRT_WRITELN2', gambling.pas), line = 11
 14585
 14586 5C3D E8				inx
 14587 5C3E AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 14588 5C43 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 14589 5C48 20 4C 21			jsr CRT_WRITELN2
 14590
 14591 				; optimize FAIL ('CRT_WRITELN', gambling.pas), line = 12
 14592
 14593 5C4B E8				inx
 14594 5C4C AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 14595 5C51 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 14596 5C56 20 80 21			jsr CRT_WRITELN
 14597
 14598 				; optimize FAIL ('CRT_WRITELN', gambling.pas), line = 13
 14599
 14600 5C59 E8				inx
 14601 5C5A AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 14602 5C5F AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 14603 5C64 20 80 21			jsr CRT_WRITELN
 14604
 14605 				; optimize FAIL ('CRT_WRITELN', gambling.pas), line = 14
 14606
 14607 5C67 E8				inx
 14608 5C68 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 14609 5C6D AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 14610 5C72 20 80 21			jsr CRT_WRITELN
 14611
 14612 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 15
 14613
 14614 5C75 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14615
 14616 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 17
 14617
 14618 5C78 E8				inx
 14619 5C79 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 14620 5C7E AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 14621 5C83 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14622
 14623 				; optimize OK (gambling.pas), line = 18
 14624
 14625 5C86 A9 00			lda #$00
 14626 5C88 8D 91 B6			sta READVALUE.MINVALUE
 14627 5C8B 8D 92 B6			sta READVALUE.MINVALUE+1
 14628 5C8E A9 03			lda #$03
 14629 5C90 8D 93 B6			sta READVALUE.MAXVALUE
 14630 5C93 A9 00			lda #$00
 14631 5C95 8D 94 B6			sta READVALUE.MAXVALUE+1
 14632 5C98 20 EE 21			jsr READVALUE
 14633 5C9B AD 95 B6			lda READVALUE.RESULT
 14634 5C9E 8D 6A BA			sta GAME
 14635
 14636 				; optimize OK (gambling.pas), line = 19
 14637
 14638 5CA1 D0 03			jne l_382F
 14639 5CA3 4C 1A 5E			jmp @exit
 14640 5CA6			l_382F
 14641
 14642 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 22
 14643
 14644 5CA6 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14645
 14646 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 23
 14647
 14648 5CA9 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14649
 14650 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 24
 14651
 14652 5CAC E8				inx
 14653 5CAD AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 14654 5CB2 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 14655 5CB7 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14656
 14657 				; optimize OK (gambling.pas), line = 25
 14658
 14659 5CBA AD 1A E4			lda CURRENTPLAYER
 14660 5CBD 0A				asl @
 14661 5CBE 0A				asl @
 14662 5CBF A8				tay
 14663 5CC0 B9 10 E0			lda adr.PLMONEY,y
 14664 5CC3 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 14665 5CC6 B9 11 E0			lda adr.PLMONEY+1,y
 14666 5CC9 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 14667 5CCC B9 12 E0			lda adr.PLMONEY+2,y
 14668 5CCF 8D CB AB			sta B_CRT.CRT_WRITE_056E.NUM+2
 14669 5CD2 B9 13 E0			lda adr.PLMONEY+3,y
 14670 5CD5 8D CC AB			sta B_CRT.CRT_WRITE_056E.NUM+3
 14671 5CD8 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 14672
 14673 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 26
 14674
 14675 5CDB E8				inx
 14676 5CDC A9 1E 95 94			mva #$1E :STACKORIGIN,x
 14677 5CE0 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 14678 5CE4 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14679
 14680 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 27
 14681
 14682 5CE7 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14683
 14684 				; optimize OK (gambling.pas), line = 28
 14685
 14686 5CEA AD 1A E4			lda CURRENTPLAYER
 14687 5CED 0A				asl @
 14688 5CEE 0A				asl @
 14689 5CEF A8				tay
 14690 5CF0 B9 10 E0			lda adr.PLMONEY,y
 14691 5CF3 8D 6B BA			sta EINSATZ
 14692 5CF6 B9 11 E0			lda adr.PLMONEY+1,y
 14693 5CF9 8D 6C BA			sta EINSATZ+1
 14694
 14695 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 32
 14696
 14697 5CFC E8				inx
 14698 5CFD AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 14699 5D02 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 14700 5D07 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14701
 14702 				; optimize OK (gambling.pas), line = 33
 14703
 14704 5D0A AD 6B BA			lda EINSATZ
 14705 5D0D 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 14706 5D10 AD 6C BA			lda EINSATZ+1
 14707 5D13 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 14708 5D16 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 14709
 14710 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 34
 14711
 14712 5D19 E8				inx
 14713 5D1A A9 26 95 94			mva #$26 :STACKORIGIN,x
 14714 5D1E A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 14715 5D22 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14716
 14717 				; optimize OK (gambling.pas), line = 35
 14718
 14719 5D25 A9 00			lda #$00
 14720 5D27 8D 91 B6			sta READVALUE.MINVALUE
 14721 5D2A 8D 92 B6			sta READVALUE.MINVALUE+1
 14722 5D2D AD 6B BA			lda EINSATZ
 14723 5D30 8D 93 B6			sta READVALUE.MAXVALUE
 14724 5D33 AD 6C BA			lda EINSATZ+1
 14725 5D36 8D 94 B6			sta READVALUE.MAXVALUE+1
 14726 5D39 20 EE 21			jsr READVALUE
 14727 5D3C AD 95 B6			lda READVALUE.RESULT
 14728 5D3F 8D 6B BA			sta EINSATZ
 14729 5D42 AD 96 B6			lda READVALUE.RESULT+1
 14730 5D45 8D 6C BA			sta EINSATZ+1
 14731
 14732 				; optimize OK (gambling.pas), line = 36
 14733
 14734 5D48 0D 6B BA			ora EINSATZ
 14735 5D4B D0 03			jne l_3866
 14736 5D4D 4C 1A 5E			jmp @exit
 14737 5D50			l_3866
 14738
 14739 				; optimize OK (gambling.pas), line = 38
 14740
 14741 5D50 AD 6B BA			lda EINSATZ
 14742 5D53 8D 40 B9			sta PAYMONEY.PRICE
 14743 5D56 AD 6C BA			lda EINSATZ+1
 14744 5D59 8D 41 B9			sta PAYMONEY.PRICE+1
 14745 5D5C 20 98 2D			jsr PAYMONEY
 14746 5D5F AD 42 B9			lda PAYMONEY.RESULT
 14747 5D62 D0 03			jne l_387B
 14748 5D64 4C 1A 5E			jmp @exit
 14749 5D67			l_387B
 14750
 14751 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 41
 14752
 14753 5D67 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14754
 14755 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 42
 14756
 14757 5D6A 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14758
 14759 				; optimize FAIL ('CRT_WRITELN2', gambling.pas), line = 43
 14760
 14761 5D6D E8				inx
 14762 5D6E AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 14763 5D73 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 14764 5D78 20 4C 21			jsr CRT_WRITELN2
 14765
 14766 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', gambling.pas), line = 44
 14767
 14768 5D7B 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14769
 14770 				; optimize FAIL ('EFFECTWAIT', gambling.pas), line = 46
 14771
 14772 5D7E 20 88 20			jsr EFFECTWAIT
 14773
 14774 				; optimize OK (gambling.pas), line = 47
 14775
 14776 5D81 AD 6A BA			lda GAME
 14777 5D84 18 69 02			add #$02
 14778 5D87 8D 6A BA			sta GAME
 14779
 14780 				; optimize OK (gambling.pas), line = 48
 14781
 14782 5D8A 20 CB 15			jsr SYSTEM.RANDOM_02E9
 14783 5D8D AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 14784 5D90 D0 77			jne l_38A2
 14785
 14786 				; optimize OK (gambling.pas), line = 51
 14787
 14788 5D92 AD 6C BA			lda EINSATZ+1
 14789 5D95 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 14790 5D97 AD 6B BA			lda EINSATZ
 14791 5D9A 46 AD			lsr :STACKORIGIN+STACKWIDTH+9
 14792 5D9C 6A				ror @
 14793 5D9D 8D 6E BA			sta GEWINN
 14794 5DA0 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 14795 5DA2 8D 6F BA			sta GEWINN+1
 14796
 14797 				; optimize OK (gambling.pas), line = 52
 14798
 14799 5DA5 AD 6A BA			lda GAME
 14800 5DA8 85 84			sta :eax
 14801 5DAA A9 00			lda #$00
 14802 5DAC 85 85			sta :eax+1
 14803 5DAE AD 6E BA			lda GEWINN
 14804 5DB1 85 8C			sta :ecx
 14805 5DB3 AD 6F BA			lda GEWINN+1
 14806 5DB6 85 8D			sta :ecx+1
 14807 					.ifdef fmulinit
 14808 					fmulu_16
 14809 					els
 14810 5DB8 20 63 12			imulCX_AL
 14811 					eif
 14812 5DBB A5 84			lda :eax
 14813 5DBD 18 6D 6B BA			add EINSATZ
 14814 5DC1 8D 6E BA			sta GEWINN
 14815 5DC4 A5 85			lda :eax+1
 14816 5DC6 6D 6C BA			adc EINSATZ+1
 14817 5DC9 8D 6F BA			sta GEWINN+1
 14818
 14819 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 53
 14820
 14821 5DCC E8				inx
 14822 5DCD AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 14823 5DD2 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 14824 5DD7 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14825
 14826 				; optimize OK (gambling.pas), line = 54
 14827
 14828 5DDA AD 6E BA			lda GEWINN
 14829 5DDD 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 14830 5DE0 AD 6F BA			lda GEWINN+1
 14831 5DE3 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 14832 5DE6 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 14833
 14834 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 55
 14835
 14836 5DE9 E8				inx
 14837 5DEA AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 14838 5DEF AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 14839 5DF4 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14840
 14841 				; optimize OK (gambling.pas), line = 56
 14842
 14843 5DF7 AD 6E BA			lda GEWINN
 14844 5DFA 8D 35 B9			sta ADDMONEY.AMOUNT
 14845 5DFD AD 6F BA			lda GEWINN+1
 14846 5E00 8D 36 B9			sta ADDMONEY.AMOUNT+1
 14847 5E03 20 E3 2A			jsr ADDMONEY
 14848 5E06 4C 17 5E			jmp l_38D1
 14849 5E09			l_38A2
 14850
 14851 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', gambling.pas), line = 59
 14852
 14853 5E09 E8				inx
 14854 5E0A AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 14855 5E0F AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 14856 5E14 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14857 5E17			l_38D1
 14858
 14859 				; optimize FAIL ('WAITFORKEY', gambling.pas), line = 60
 14860
 14861 5E17 20 2E 21			jsr WAITFORKEY
 14862 5E1A			@exit
 14863
 14864 				; ------------------------------------------------------------
 14865
 14866 = BA67			CHOICE	= DATAORIGIN+$15F2
 14867 = BA69			RESULT	= DATAORIGIN+$15F4
 14868 = BA6A			GAME	= DATAORIGIN+$15F5
 14869 = BA6B			EINSATZ	= DATAORIGIN+$15F6
 14870 = BA6D			WON	= DATAORIGIN+$15F8
 14871 = BA6E			GEWINN	= DATAORIGIN+$15F9
 14872
 14873 = BA67			@VarData	= CHOICE
 14874 = 0008			@VarDataSize	= 8
 14875
 14876 5E1A 60				rts						; ret
 14877 				.endl
 14878
 14879 5E1B			.local	HIDEOUTCHOICES					; FUNCTION
 14880
 14881 				; optimize FAIL ('SHOWLOCATIONHEADER', hideout.pas), line = 9
 14882
 14883 5E1B 20 1D 26			jsr SHOWLOCATIONHEADER
 14884
 14885 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 10
 14886
 14887 5E1E 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14888
 14889 				; optimize OK (hideout.pas), line = 13
 14890
 14891 5E21 AC 71 BA 84 81		mvy CHOICE+1 :bp+1
 14892 5E26 AC 70 BA			ldy CHOICE
 14893 5E29 B1 80			lda (:bp),y
 14894 5E2B C9 03			cmp #$03
 14895 5E2D F0 03 4C 87 62		jne l_38ED
 14896
 14897 				; optimize OK (hideout.pas), line = 15
 14898
 14899 5E32 AC AF B8			ldy CURRENTSUBLOCATION
 14900 5E35 B9 1C E4			lda adr.PLRENT,y
 14901 5E38 8D 79 BA			sta PL
 14902
 14903 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', hideout.pas), line = 17
 14904
 14905 5E3B E8				inx
 14906 5E3C AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 14907 5E41 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 14908 5E46 E8				inx
 14909 5E47 A9 04 95 94			mva #$04 :STACKORIGIN,x
 14910 5E4B 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 14911
 14912 				; optimize FAIL ('EFFECTWAIT', hideout.pas), line = 18
 14913
 14914 5E4E 20 88 20			jsr EFFECTWAIT
 14915
 14916 				; optimize OK (hideout.pas), line = 20
 14917
 14918 5E51 AD 79 BA			lda PL
 14919 5E54 C9 63			cmp #$63
 14920 5E56 F0 05			jeq l_391Cx
 14921 5E58 CD 1A E4			cmp CURRENTPLAYER
 14922 5E5B D0 19			jne l_391C
 14923 5E5D			l_391Cx
 14924
 14925 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', hideout.pas), line = 22
 14926
 14927 5E5D E8				inx
 14928 5E5E AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 14929 5E63 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 14930 5E68 E8				inx
 14931 5E69 A9 06 95 94			mva #$06 :STACKORIGIN,x
 14932 5E6D 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 14933
 14934 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 23
 14935
 14936 5E70 20 2E 21			jsr WAITFORKEY
 14937 5E73 4C 3D 64			jmp @exit
 14938 5E76			l_391C
 14939
 14940 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 27
 14941
 14942 5E76 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14943
 14944 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 28
 14945
 14946 5E79 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 14947
 14948 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 29
 14949
 14950 5E7C E8				inx
 14951 5E7D AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 14952 5E82 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 14953 5E87 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14954
 14955 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 30
 14956
 14957 5E8A E8				inx
 14958 5E8B AD 79 BA 95 94		mva PL :STACKORIGIN,x
 14959 5E90 E8				inx
 14960 5E91 A9 03 95 94			mva #$03 :STACKORIGIN,x
 14961 5E95 20 87 0F			jsr shlEAX_CL.BYTE
 14962 5E98 CA				dex
 14963 5E99 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 14964 5E9B 16 94			asl :STACKORIGIN,x
 14965 5E9D 2A				rol @
 14966 5E9E 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 14967 5EA0 B4 94			ldy :STACKORIGIN,x
 14968 5EA2 B9 E0 B0			lda adr.GANGSTERNAMES,y
 14969 5EA5 95 94			sta :STACKORIGIN,x
 14970 5EA7 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 14971 5EAA 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 14972 5EAC 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 14973
 14974 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 31
 14975
 14976 5EAF E8				inx
 14977 5EB0 A9 2C 95 94			mva #$2C :STACKORIGIN,x
 14978 5EB4 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 14979 5EB8 20 80 21			jsr CRT_WRITELN
 14980
 14981 				; optimize FAIL ('EFFECTWAIT', hideout.pas), line = 32
 14982
 14983 5EBB 20 88 20			jsr EFFECTWAIT
 14984
 14985 				; optimize OK (hideout.pas), line = 34
 14986
 14987 5EBE A9 03			lda #$03
 14988 5EC0 20 CB 15			jsr SYSTEM.RANDOM_02E9
 14989 5EC3 E8				inx
 14990 5EC4 A0 01			ldy #1
 14991 5EC6 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 14992 5EC9 D0 01			bne @+
 14993 5ECB 88				dey
 14994 				@
 14995 5ECC 94 94			sty :STACKORIGIN,x
 14996 5ECE E8				inx
 14997 5ECF AC 79 BA			ldy PL
 14998 5ED2 B9 60 E0			lda adr.PLJOB,y
 14999 5ED5 95 94			sta :STACKORIGIN,x
 15000 5ED7 E8				inx
 15001 5ED8 A0 01			ldy #1
 15002 5EDA B5 93			lda :STACKORIGIN-1,x
 15003 5EDC D0 01			bne @+
 15004 5EDE 88				dey
 15005 				@
 15006 5EDF CA				dex
 15007 5EE0 94 94			sty :STACKORIGIN,x
 15008 5EE2 CA				dex
 15009 5EE3 B5 94			lda :STACKORIGIN,x
 15010 5EE5 15 95			ora :STACKORIGIN+1,x
 15011 5EE7 95 94			sta :STACKORIGIN,x
 15012 5EE9 E8				inx
 15013 5EEA AC 79 BA			ldy PL
 15014 5EED B9 74 E0			lda adr.PLPRISON,y
 15015 5EF0 95 94			sta :STACKORIGIN,x
 15016 5EF2 E8				inx
 15017 5EF3 A0 01			ldy #1
 15018 5EF5 B5 93			lda :STACKORIGIN-1,x
 15019 5EF7 D0 01			bne @+
 15020 5EF9 88				dey
 15021 				@
 15022 5EFA CA				dex
 15023 5EFB 94 94			sty :STACKORIGIN,x
 15024 5EFD CA				dex
 15025 5EFE CA				dex
 15026 5EFF B5 95			lda :STACKORIGIN+1,x
 15027 5F01 15 96			ora :STACKORIGIN+2,x
 15028 5F03 F0 14			jeq l_3965
 15029
 15030 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 35
 15031
 15032 5F05 E8				inx
 15033 5F06 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 15034 5F0B AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 15035 5F10 20 80 21			jsr CRT_WRITELN
 15036
 15037 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 36
 15038
 15039 5F13 20 2E 21			jsr WAITFORKEY
 15040 5F16 4C 3D 64			jmp @exit
 15041 5F19			l_3965
 15042
 15043 				; optimize OK (hideout.pas), line = 42
 15044
 15045 5F19 AC 79 BA			ldy PL
 15046 5F1C B9 41 E4			lda adr.PLNGANGSTERS,y
 15047 5F1F 8D 04 EC			sta adr.FP_N+$01
 15048
 15049 				; optimize OK (hideout.pas), line = 43
 15050
 15051 5F22 98				tya
 15052 5F23 0A				asl @
 15053 5F24 A8				tay
 15054 5F25 B9 D8 B0			lda adr.PLGANG,y
 15055 5F28 85 88			sta @move.src
 15056 5F2A B9 D9 B0			lda adr.PLGANG+1,y
 15057 5F2D 85 89			sta @move.src+1
 15058 5F2F AD 7A B0			lda adr.FP_GANG+$02
 15059 5F32 85 8C			sta @move.dst
 15060 5F34 AD 7B B0			lda adr.FP_GANG+1+$02
 15061 5F37 85 8D			sta @move.dst+1
 15062 5F39 A0 00			ldy #$00
 15063 5F3B B1 88			lda (@move.src),y
 15064 5F3D 18 69 01			add #1
 15065 5F40 85 84			sta @move.cnt
 15066 5F42 90 01			scc
 15067 5F44 C8				iny
 15068 5F45 84 85			sty @move.cnt+1
 15069 5F47 20 35 10			jsr @move
 15070
 15071 				; optimize OK (hideout.pas), line = 44
 15072
 15073 5F4A A9 00			lda #$00
 15074 5F4C 8D 02 EC			sta adr.FP_AI+$01
 15075
 15076 				; optimize OK (hideout.pas), line = 46
 15077
 15078 5F4F 8D 74 BA			sta K
 15079
 15080 				; optimize OK (hideout.pas), line = 47
 15081
 15082 5F52 8D 75 BA			sta J
 15083
 15084 5F55			l_3991
 15085 				; --- ForToDoCondition
 15086 5F55 AC 75 BA			ldy J
 15087 5F58 C0 20			cpy #$20
 15088 5F5A 90 03 4C DD 5F		jcs l_399F
 15089
 15090 				; optimize OK (hideout.pas), line = 49
 15091
 15092 5F5F B9 21 E4			lda adr.PLGANGSTERS,y
 15093 5F62 CD 79 BA			cmp PL
 15094 5F65 D0 6E			jne l_39B6
 15095
 15096 				; optimize OK (hideout.pas), line = 51
 15097
 15098 5F67 AD 75 BA			lda J
 15099 5F6A 0A				asl @
 15100 5F6B A8				tay
 15101 5F6C B9 E0 B0			lda adr.GANGSTERNAMES,y
 15102 5F6F 85 88			sta @move.src
 15103 5F71 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 15104 5F74 85 89			sta @move.src+1
 15105 5F76 AD 74 BA			lda K
 15106 5F79 0A				asl @
 15107 5F7A A8				tay
 15108 5F7B B9 9C B0			lda adr.FP_NAME+$20,y
 15109 5F7E 85 8C			sta @move.dst
 15110 5F80 B9 9D B0			lda adr.FP_NAME+1+$20,y
 15111 5F83 85 8D			sta @move.dst+1
 15112 5F85 A0 00			ldy #$00
 15113 5F87 B1 88			lda (@move.src),y
 15114 5F89 18 69 01			add #1
 15115 5F8C 85 84			sta @move.cnt
 15116 5F8E 90 01			scc
 15117 5F90 C8				iny
 15118 5F91 84 85			sty @move.cnt+1
 15119 5F93 20 35 10			jsr @move
 15120
 15121 				; optimize OK (hideout.pas), line = 52
 15122
 15123 5F96 AC 75 BA			ldy J
 15124 5F99 B9 B8 E3			lda adr.GANGSTERHEALTH,y
 15125 5F9C AC 74 BA			ldy K
 15126 5F9F 99 95 EC			sta adr.FP_ENERGY+$10,y
 15127
 15128 				; optimize OK (hideout.pas), line = 53
 15129
 15130 5FA2 AC 75 BA			ldy J
 15131 5FA5 B9 D8 E3			lda adr.GANGSTERWEAPON,y
 15132 5FA8 AC 74 BA			ldy K
 15133 5FAB 99 55 EC			sta adr.FP_WEAPON+$10,y
 15134
 15135 				; optimize OK (hideout.pas), line = 54
 15136
 15137 5FAE AC 75 BA			ldy J
 15138 5FB1 B9 F8 E3			lda adr.GANGSTERSEX,y
 15139 5FB4 AC 74 BA			ldy K
 15140 5FB7 99 55 ED			sta adr.FP_SEX+$10,y
 15141
 15142 				; optimize OK (hideout.pas), line = 55
 15143
 15144 5FBA AC 75 BA			ldy J
 15145 5FBD B9 58 E3			lda adr.GANGSTERSTR,y
 15146 5FC0 AC 74 BA			ldy K
 15147 5FC3 99 D5 EC			sta adr.FP_STRENGTH+$10,y
 15148
 15149 				; optimize OK (hideout.pas), line = 56
 15150
 15151 5FC6 AC 75 BA			ldy J
 15152 5FC9 B9 98 E3			lda adr.GANGSTERBRUT,y
 15153 5FCC AC 74 BA			ldy K
 15154 5FCF 99 15 ED			sta adr.FP_BRUTALITY+$10,y
 15155
 15156 				; optimize OK (hideout.pas), line = 57
 15157
 15158 5FD2 EE 74 BA			inc K
 15159 5FD5			l_39B6
 15160
 15161 				; --- ForToDoEpilog
 15162 5FD5 EE 75 BA			inc J
 15163 5FD8 F0 03 4C 55 5F		jne l_3991
 15164 5FDD			l_399F
 15165
 15166 				; optimize FAIL ('DOFIGHT', hideout.pas), line = 61
 15167
 15168 5FDD 20 44 49			jsr DOFIGHT
 15169 5FE0 AD E6 B9			lda DOFIGHT.RESULT
 15170 5FE3 8D 76 BA			sta W
 15171
 15172 				; optimize FAIL ('ENABLECONSOLE', hideout.pas), line = 62
 15173
 15174 5FE6 20 97 25			jsr ENABLECONSOLE
 15175
 15176 				; optimize FAIL ('SHOWLOCATIONHEADER', hideout.pas), line = 64
 15177
 15178 5FE9 20 1D 26			jsr SHOWLOCATIONHEADER
 15179
 15180 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 65
 15181
 15182 5FEC 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15183
 15184 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', hideout.pas), line = 66
 15185
 15186 5FEF E8				inx
 15187 5FF0 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 15188 5FF5 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 15189 5FFA E8				inx
 15190 5FFB A9 04 95 94			mva #$04 :STACKORIGIN,x
 15191 5FFF 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 15192
 15193 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 67
 15194
 15195 6002 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15196
 15197 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 68
 15198
 15199 6005 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15200
 15201 				; optimize OK (hideout.pas), line = 70
 15202
 15203 6008 AD 76 BA			lda W
 15204 600B C9 01			cmp #$01
 15205 600D D0 60			jne l_3A46
 15206
 15207 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 73
 15208
 15209 600F E8				inx
 15210 6010 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 15211 6015 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 15212 601A 20 80 21			jsr CRT_WRITELN
 15213
 15214 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 74
 15215
 15216 601D E8				inx
 15217 601E AD 79 BA 95 94		mva PL :STACKORIGIN,x
 15218 6023 E8				inx
 15219 6024 A9 03 95 94			mva #$03 :STACKORIGIN,x
 15220 6028 20 87 0F			jsr shlEAX_CL.BYTE
 15221 602B CA				dex
 15222 602C B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 15223 602E 16 94			asl :STACKORIGIN,x
 15224 6030 2A				rol @
 15225 6031 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 15226 6033 B4 94			ldy :STACKORIGIN,x
 15227 6035 B9 E0 B0			lda adr.GANGSTERNAMES,y
 15228 6038 95 94			sta :STACKORIGIN,x
 15229 603A B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 15230 603D 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 15231 603F 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15232
 15233 				; optimize OK (hideout.pas), line = 75
 15234
 15235 6042 A9 00			lda #$00
 15236 6044 20 88 1C			jsr B_CRT.CRT_WRITE_054D
 15237
 15238 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 76
 15239
 15240 6047 E8				inx
 15241 6048 AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 15242 604D AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 15243 6052 20 80 21			jsr CRT_WRITELN
 15244
 15245 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 77
 15246
 15247 6055 E8				inx
 15248 6056 AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 15249 605B AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 15250 6060 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15251
 15252 				; optimize OK (hideout.pas), line = 78
 15253
 15254 6063 AD 79 BA			lda PL
 15255 6066 8D 77 BA			sta M
 15256
 15257 				; optimize OK (hideout.pas), line = 79
 15258
 15259 6069 AD 1A E4			lda CURRENTPLAYER
 15260 606C 4C C7 60			jmp l_3A71
 15261 606F			l_3A46
 15262
 15263 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 84
 15264
 15265 606F E8				inx
 15266 6070 AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 15267 6075 AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 15268 607A 20 80 21			jsr CRT_WRITELN
 15269
 15270 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 85
 15271
 15272 607D E8				inx
 15273 607E AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 15274 6083 AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 15275 6088 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15276
 15277 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 86
 15278
 15279 608B E8				inx
 15280 608C AD 79 BA 95 94		mva PL :STACKORIGIN,x
 15281 6091 E8				inx
 15282 6092 A9 03 95 94			mva #$03 :STACKORIGIN,x
 15283 6096 20 87 0F			jsr shlEAX_CL.BYTE
 15284 6099 CA				dex
 15285 609A B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 15286 609C 16 94			asl :STACKORIGIN,x
 15287 609E 2A				rol @
 15288 609F 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 15289 60A1 B4 94			ldy :STACKORIGIN,x
 15290 60A3 B9 E0 B0			lda adr.GANGSTERNAMES,y
 15291 60A6 95 94			sta :STACKORIGIN,x
 15292 60A8 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 15293 60AB 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 15294 60AD 20 80 21			jsr CRT_WRITELN
 15295
 15296 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 87
 15297
 15298 60B0 E8				inx
 15299 60B1 AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 15300 60B6 AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 15301 60BB 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15302
 15303 				; optimize OK (hideout.pas), line = 88
 15304
 15305 60BE AD 1A E4			lda CURRENTPLAYER
 15306 60C1 8D 77 BA			sta M
 15307
 15308 				; optimize OK (hideout.pas), line = 89
 15309
 15310 60C4 AD 79 BA			lda PL
 15311 60C7			l_3A71
 15312 60C7 8D 74 BA			sta K
 15313
 15314 				; optimize OK (hideout.pas), line = 92
 15315
 15316 60CA 0A				asl @
 15317 60CB 0A				asl @
 15318 60CC A8				tay
 15319 60CD B9 10 E0			lda adr.PLMONEY,y
 15320 60D0 85 9D			sta :STACKORIGIN+9
 15321 60D2 B9 11 E0			lda adr.PLMONEY+1,y
 15322 60D5 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 15323 60D7 B9 12 E0			lda adr.PLMONEY+2,y
 15324 60DA 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
 15325 60DC B9 13 E0			lda adr.PLMONEY+3,y
 15326 60DF 46 BD			lsr :STACKORIGIN+STACKWIDTH*2+9
 15327 60E1 66 AD			ror :STACKORIGIN+STACKWIDTH+9
 15328 60E3 66 9D			ror :STACKORIGIN+9
 15329 60E5 46 BD			lsr :STACKORIGIN+STACKWIDTH*2+9
 15330 60E7 66 AD			ror :STACKORIGIN+STACKWIDTH+9
 15331 60E9 66 9D			ror :STACKORIGIN+9
 15332 60EB A5 9D			lda :STACKORIGIN+9
 15333 60ED 8D 7A BA			sta Z
 15334 60F0 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 15335 60F2 8D 7B BA			sta Z+1
 15336
 15337 				; optimize FAIL (1, hideout.pas), line = 93
 15338
 15339 60F5 E8				inx
 15340 60F6 AD 7A BA 95 94		mva Z :STACKORIGIN,x
 15341 60FB AD 7B BA 95 A4		mva Z+1 :STACKORIGIN+STACKWIDTH,x
 15342 6100 A9 04			lda #$04
 15343 6102 20 CB 15			jsr SYSTEM.RANDOM_02E9
 15344 6105 E8				inx
 15345 6106 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 15346 610B E8				inx
 15347 610C AD 7A BA 95 94		mva Z :STACKORIGIN,x
 15348 6111 AD 7B BA 95 A4		mva Z+1 :STACKORIGIN+STACKWIDTH,x
 15349 6116 E8				inx
 15350 6117 A9 01 95 94			mva #$01 :STACKORIGIN,x
 15351 611B 20 B6 0F			jsr shrAX_CL.WORD
 15352 611E CA				dex
 15353 611F A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 15354 6123 20 10 12			jsr imulWORD
 15355 6126 CA				dex
 15356 6127 B5 93			lda :STACKORIGIN-1,x
 15357 6129 18 65 84			add :eax
 15358 612C 95 93			sta :STACKORIGIN-1,x
 15359 612E B5 A3			lda :STACKORIGIN-1+STACKWIDTH,x
 15360 6130 65 85			adc :eax+1
 15361 6132 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
 15362 6134 CA				dex
 15363 6135 B5 94			lda :STACKORIGIN,x
 15364 6137 8D 7A BA			sta Z
 15365 613A B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 15366 613C 8D 7B BA			sta Z+1
 15367 613F CA				dex
 15368
 15369 				; optimize OK (hideout.pas), line = 94
 15370
 15371 6140 AD 7A BA			lda Z
 15372 6143 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 15373 6146 AD 7B BA			lda Z+1
 15374 6149 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 15375 614C 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 15376
 15377 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 95
 15378
 15379 614F E8				inx
 15380 6150 A9 9D 95 94			mva #$9D :STACKORIGIN,x
 15381 6154 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 15382 6158 20 80 21			jsr CRT_WRITELN
 15383
 15384 				; optimize OK (hideout.pas), line = 96
 15385
 15386 615B AD 77 BA			lda M
 15387 615E 0A				asl @
 15388 615F 0A				asl @
 15389 6160 A8				tay
 15390 6161 B9 10 E0			lda adr.PLMONEY,y
 15391 6164 18 6D 7A BA			add Z
 15392 6168 85 9E			sta :STACKORIGIN+10
 15393 616A B9 11 E0			lda adr.PLMONEY+1,y
 15394 616D 6D 7B BA			adc Z+1
 15395 6170 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 15396 6172 B9 12 E0			lda adr.PLMONEY+2,y
 15397 6175 69 00			adc #$00
 15398 6177 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
 15399 6179 B9 13 E0			lda adr.PLMONEY+3,y
 15400 617C 69 00			adc #$00
 15401 617E 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
 15402 6180 A5 9E			lda :STACKORIGIN+10
 15403 6182 99 10 E0			sta adr.PLMONEY,y
 15404 6185 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
 15405 6187 99 11 E0			sta adr.PLMONEY+1,y
 15406 618A A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
 15407 618C 99 12 E0			sta adr.PLMONEY+2,y
 15408 618F A5 CE			lda :STACKORIGIN+STACKWIDTH*3+10
 15409 6191 99 13 E0			sta adr.PLMONEY+3,y
 15410
 15411 				; optimize OK (hideout.pas), line = 97
 15412
 15413 6194 AD 74 BA			lda K
 15414 6197 0A				asl @
 15415 6198 0A				asl @
 15416 6199 A8				tay
 15417 619A B9 10 E0			lda adr.PLMONEY,y
 15418 619D 38 ED 7A BA			sub Z
 15419 61A1 85 9E			sta :STACKORIGIN+10
 15420 61A3 B9 11 E0			lda adr.PLMONEY+1,y
 15421 61A6 ED 7B BA			sbc Z+1
 15422 61A9 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 15423 61AB B9 12 E0			lda adr.PLMONEY+2,y
 15424 61AE E9 00			sbc #$00
 15425 61B0 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
 15426 61B2 B9 13 E0			lda adr.PLMONEY+3,y
 15427 61B5 E9 00			sbc #$00
 15428 61B7 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
 15429 61B9 A5 9E			lda :STACKORIGIN+10
 15430 61BB 99 10 E0			sta adr.PLMONEY,y
 15431 61BE A5 AE			lda :STACKORIGIN+STACKWIDTH+10
 15432 61C0 99 11 E0			sta adr.PLMONEY+1,y
 15433 61C3 A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
 15434 61C5 99 12 E0			sta adr.PLMONEY+2,y
 15435 61C8 A5 CE			lda :STACKORIGIN+STACKWIDTH*3+10
 15436 61CA 99 13 E0			sta adr.PLMONEY+3,y
 15437
 15438 				; optimize OK (hideout.pas), line = 99
 15439
 15440 61CD AC 74 BA			ldy K
 15441 61D0 B9 24 E0			lda adr.PLALCOHOL,y
 15442 61D3 F0 5C			jeq l_3AE6
 15443
 15444 				; optimize OK (hideout.pas), line = 101
 15445
 15446 61D5 AD 76 BA			lda W
 15447 61D8 C9 01			cmp #$01
 15448 61DA D0 0E			jne l_3AF9
 15449
 15450 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 102
 15451
 15452 61DC E8				inx
 15453 61DD AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 15454 61E2 AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 15455 61E7 4C F5 61			jmp l_3B06
 15456 61EA			l_3AF9
 15457
 15458 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 104
 15459
 15460 61EA E8				inx
 15461 61EB AD 94 A3 95 94		mva LOC_STRING_23 :STACKORIGIN,x
 15462 61F0 AD 95 A3 95 A4		mva LOC_STRING_23+1 :STACKORIGIN+STACKWIDTH,x
 15463 61F5			l_3B06
 15464 61F5 20 80 21			jsr CRT_WRITELN
 15465
 15466 				; optimize OK (hideout.pas), line = 105
 15467
 15468 61F8 AC 77 BA			ldy M
 15469 61FB B9 24 E0			lda adr.PLALCOHOL,y
 15470 61FE AC 74 BA			ldy K
 15471 6201 18 79 24 E0			add adr.PLALCOHOL,y
 15472 6205 AC 77 BA			ldy M
 15473 6208 99 24 E0			sta adr.PLALCOHOL,y
 15474
 15475 				; optimize OK (hideout.pas), line = 106
 15476
 15477 620B AC 74 BA			ldy K
 15478 620E A9 00			lda #$00
 15479 6210 99 24 E0			sta adr.PLALCOHOL,y
 15480
 15481 				; optimize OK (hideout.pas), line = 107
 15482
 15483 6213 B9 2C E0			lda adr.PLCAR,y
 15484 6216 8D 73 BA			sta R
 15485
 15486 				; optimize OK (hideout.pas), line = 108
 15487
 15488 6219 AC 79 BA			ldy PL
 15489 621C B9 24 E0			lda adr.PLALCOHOL,y
 15490 621F 85 9D			sta :STACKORIGIN+9
 15491 6221 AC 73 BA			ldy R
 15492 6224 B9 06 E7			lda adr.CARCARGO,y
 15493 6227 C5 9D			cmp :STACKORIGIN+9
 15494 6229 B0 06			jcs l_3B48
 15495 622B AC 79 BA			ldy PL
 15496 622E 99 24 E0			sta adr.PLALCOHOL,y
 15497 6231			l_3B48
 15498 6231			l_3AE6
 15499
 15500 				; optimize OK (hideout.pas), line = 111
 15501
 15502 6231 AC 74 BA			ldy K
 15503 6234 B9 2C E0			lda adr.PLCAR,y
 15504 6237 F0 2B			jeq l_3B6E
 15505
 15506 				; optimize OK (hideout.pas), line = 113
 15507
 15508 6239 AD 76 BA			lda W
 15509 623C C9 01			cmp #$01
 15510 623E D0 0E			jne l_3B81
 15511
 15512 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 114
 15513
 15514 6240 E8				inx
 15515 6241 AD 96 A3 95 94		mva LOC_STRING_24 :STACKORIGIN,x
 15516 6246 AD 97 A3 95 A4		mva LOC_STRING_24+1 :STACKORIGIN+STACKWIDTH,x
 15517 624B 4C 59 62			jmp l_3B8E
 15518 624E			l_3B81
 15519
 15520 				; optimize FAIL ('CRT_WRITELN', hideout.pas), line = 116
 15521
 15522 624E E8				inx
 15523 624F AD 98 A3 95 94		mva LOC_STRING_25 :STACKORIGIN,x
 15524 6254 AD 99 A3 95 A4		mva LOC_STRING_25+1 :STACKORIGIN+STACKWIDTH,x
 15525 6259			l_3B8E
 15526 6259 20 80 21			jsr CRT_WRITELN
 15527
 15528 				; optimize OK (hideout.pas), line = 117
 15529
 15530 625C AC 74 BA			ldy K
 15531 625F A9 00			lda #$00
 15532 6261 99 2C E0			sta adr.PLCAR,y
 15533 6264			l_3B6E
 15534
 15535 				; optimize OK (hideout.pas), line = 119
 15536
 15537 6264 AC 77 BA			ldy M
 15538 6267 B9 80 E0			lda adr.PLNEWPOINTS,y
 15539 626A 18 69 03			add #$03
 15540 626D 99 80 E0			sta adr.PLNEWPOINTS,y
 15541
 15542 				; optimize OK (hideout.pas), line = 120
 15543
 15544 6270 AC 74 BA			ldy K
 15545 6273 B9 80 E0			lda adr.PLNEWPOINTS,y
 15546 6276 38 E9 01			sub #$01
 15547 6279 99 80 E0			sta adr.PLNEWPOINTS,y
 15548
 15549 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 121
 15550
 15551 627C 20 2E 21			jsr WAITFORKEY
 15552
 15553 				; optimize OK (hideout.pas), line = 122
 15554
 15555 627F A9 11			lda #$11
 15556 6281 8D 72 BA			sta RESULT
 15557 6284 4C 3D 64			jmp @exit
 15558 6287			l_38ED
 15559
 15560 				; optimize OK (hideout.pas), line = 128
 15561
 15562 6287 AC 71 BA 84 81		mvy CHOICE+1 :bp+1
 15563 628C AC 70 BA			ldy CHOICE
 15564 628F B1 80			lda (:bp),y
 15565 6291 C9 01			cmp #$01
 15566 6293 D0 67			jne l_3BD3
 15567
 15568 				; optimize OK (hideout.pas), line = 130
 15569
 15570 6295 AC AF B8			ldy CURRENTSUBLOCATION
 15571 6298 B9 1C E4			lda adr.PLRENT,y
 15572 629B C9 63			cmp #$63
 15573 629D F0 30			jeq l_3BE9
 15574
 15575 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 132
 15576
 15577 629F 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15578
 15579 				; optimize OK (hideout.pas), line = 133
 15580
 15581 62A2 AC AF B8			ldy CURRENTSUBLOCATION
 15582 62A5 B9 1C E4			lda adr.PLRENT,y
 15583 62A8 CD 1A E4			cmp CURRENTPLAYER
 15584 62AB D0 0E			jne l_3C02
 15585
 15586 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 134
 15587
 15588 62AD E8				inx
 15589 62AE AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 15590 62B3 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 15591 62B8 4C C6 62			jmp l_3C0F
 15592 62BB			l_3C02
 15593
 15594 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 136
 15595
 15596 62BB E8				inx
 15597 62BC AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 15598 62C1 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 15599 62C6			l_3C0F
 15600 62C6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15601
 15602 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 137
 15603
 15604 62C9 20 2E 21			jsr WAITFORKEY
 15605 62CC 4C 3D 64			jmp @exit
 15606 62CF			l_3BE9
 15607
 15608 				; optimize OK (hideout.pas), line = 143
 15609
 15610 62CF A9 00			lda #$00
 15611 62D1 8D 73 BA			sta R
 15612
 15613 62D4			l_3C1E
 15614 				; --- ForToDoCondition
 15615 62D4 AC 73 BA			ldy R
 15616 62D7 C0 04			cpy #$04
 15617 62D9 B0 21			jcs l_3C2C
 15618
 15619 				; optimize OK (hideout.pas), line = 144
 15620
 15621 62DB B9 1C E4			lda adr.PLRENT,y
 15622 62DE CD 1A E4			cmp CURRENTPLAYER
 15623 62E1 D0 14			jne l_3C43
 15624
 15625 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 146
 15626
 15627 62E3 E8				inx
 15628 62E4 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 15629 62E9 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 15630 62EE 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15631
 15632 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 147
 15633
 15634 62F1 20 2E 21			jsr WAITFORKEY
 15635 62F4 4C 3D 64			jmp @exit
 15636 62F7			l_3C43
 15637
 15638 				; --- ForToDoEpilog
 15639 62F7 EE 73 BA			inc R
 15640 62FA D0 D8			jne l_3C1E
 15641 62FC			l_3C2C
 15642 62FC			l_3BD3
 15643
 15644 				; optimize OK (hideout.pas), line = 152
 15645
 15646 62FC AC 71 BA 84 81		mvy CHOICE+1 :bp+1
 15647 6301 AC 70 BA			ldy CHOICE
 15648 6304 B1 80			lda (:bp),y
 15649 6306 C9 02			cmp #$02
 15650 6308 D0 1F			jne l_3C63
 15651
 15652 				; optimize OK (hideout.pas), line = 154
 15653
 15654 630A AC AF B8			ldy CURRENTSUBLOCATION
 15655 630D B9 1C E4			lda adr.PLRENT,y
 15656 6310 CD 1A E4			cmp CURRENTPLAYER
 15657 6313 F0 14			jeq l_3C7B
 15658
 15659 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 156
 15660
 15661 6315 E8				inx
 15662 6316 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 15663 631B AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 15664 6320 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15665
 15666 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 157
 15667
 15668 6323 20 2E 21			jsr WAITFORKEY
 15669 6326 4C 3D 64			jmp @exit
 15670 6329			l_3C7B
 15671 6329			l_3C63
 15672
 15673 				; optimize OK (hideout.pas), line = 162
 15674
 15675 6329 A9 32			lda #$32
 15676 632B 8D 78 BA			sta PRICE
 15677
 15678 				; optimize OK (hideout.pas), line = 163
 15679
 15680 632E AD AF B8			lda CURRENTSUBLOCATION
 15681 6331 C9 02			cmp #$02
 15682 6333 90 09			jcc l_3C9A
 15683
 15684 				; optimize OK (hideout.pas), line = 164
 15685
 15686 6335 AD 78 BA			lda PRICE
 15687 6338 18 69 32			add #$32
 15688 633B 8D 78 BA			sta PRICE
 15689 633E			l_3C9A
 15690
 15691 				; optimize OK (hideout.pas), line = 165
 15692
 15693 633E AD AF B8			lda CURRENTSUBLOCATION
 15694 6341 C9 01			cmp #$01
 15695 6343 D0 09			jne l_3CB9
 15696
 15697 				; optimize OK (hideout.pas), line = 166
 15698
 15699 6345 AD 78 BA			lda PRICE
 15700 6348 18 69 32			add #$32
 15701 634B 8D 78 BA			sta PRICE
 15702 634E			l_3CB9
 15703
 15704 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 168
 15705
 15706 634E E8				inx
 15707 634F AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 15708 6354 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 15709 6359 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15710
 15711 				; optimize OK (hideout.pas), line = 169
 15712
 15713 635C AD 78 BA			lda PRICE
 15714 635F 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 15715
 15716 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 170
 15717
 15718 6362 E8				inx
 15719 6363 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 15720 6368 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 15721 636D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15722
 15723 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 171
 15724
 15725 6370 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15726
 15727 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 172
 15728
 15729 6373 E8				inx
 15730 6374 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 15731 6379 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 15732 637E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15733
 15734 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 173
 15735
 15736 6381 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15737
 15738 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 174
 15739
 15740 6384 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15741
 15742 				; optimize OK (hideout.pas), line = 176
 15743
 15744 6387 AC 1A E4			ldy CURRENTPLAYER
 15745 638A B9 54 E0			lda adr.PLRENTMONTHS,y
 15746 638D F0 2B			jeq l_3CEB
 15747
 15748 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 178
 15749
 15750 638F 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15751
 15752 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 179
 15753
 15754 6392 E8				inx
 15755 6393 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 15756 6398 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 15757 639D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15758
 15759 				; optimize OK (hideout.pas), line = 180
 15760
 15761 63A0 AC 1A E4			ldy CURRENTPLAYER
 15762 63A3 B9 54 E0			lda adr.PLRENTMONTHS,y
 15763 63A6 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 15764
 15765 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 181
 15766
 15767 63A9 E8				inx
 15768 63AA AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 15769 63AF AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 15770 63B4 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15771
 15772 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 182
 15773
 15774 63B7 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15775 63BA			l_3CEB
 15776
 15777 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 184
 15778
 15779 63BA E8				inx
 15780 63BB AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 15781 63C0 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 15782 63C5 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15783
 15784 				; optimize OK (hideout.pas), line = 185
 15785
 15786 63C8 A9 00			lda #$00
 15787 63CA 8D 91 B6			sta READVALUE.MINVALUE
 15788 63CD 8D 92 B6			sta READVALUE.MINVALUE+1
 15789 63D0 A9 63			lda #$63
 15790 63D2 8D 93 B6			sta READVALUE.MAXVALUE
 15791 63D5 A9 00			lda #$00
 15792 63D7 8D 94 B6			sta READVALUE.MAXVALUE+1
 15793 63DA 20 EE 21			jsr READVALUE
 15794 63DD AD 95 B6			lda READVALUE.RESULT
 15795 63E0 8D 77 BA			sta M
 15796
 15797 				; optimize OK (hideout.pas), line = 187
 15798
 15799 63E3 D0 03			jne l_3D18
 15800 63E5 4C 3D 64			jmp @exit
 15801 63E8			l_3D18
 15802
 15803 				; optimize OK (hideout.pas), line = 189
 15804
 15805 63E8 AD 77 BA			lda M
 15806 63EB 85 8C			sta :ecx
 15807 63ED AD 78 BA			lda PRICE
 15808 63F0 85 84			sta :eax
 15809 					.ifdef fmulinit
 15810 					fmulu_8
 15811 					els
 15812 63F2 20 F8 11			imulCL
 15813 					eif
 15814 63F5 A5 84			lda :eax
 15815 63F7 8D 40 B9			sta PAYMONEY.PRICE
 15816 63FA A5 85			lda :eax+1
 15817 63FC 8D 41 B9			sta PAYMONEY.PRICE+1
 15818 63FF 20 98 2D			jsr PAYMONEY
 15819 6402 AD 42 B9			lda PAYMONEY.RESULT
 15820 6405 D0 03			jne l_3D34
 15821 6407 4C 3D 64			jmp @exit
 15822 640A			l_3D34
 15823
 15824 				; optimize OK (hideout.pas), line = 192
 15825
 15826 640A AC 1A E4			ldy CURRENTPLAYER
 15827 640D B9 54 E0			lda adr.PLRENTMONTHS,y
 15828 6410 18 6D 77 BA			add M
 15829 6414 99 54 E0			sta adr.PLRENTMONTHS,y
 15830
 15831 				; optimize OK (hideout.pas), line = 193
 15832
 15833 6417 AD 78 BA			lda PRICE
 15834 641A 99 58 E0			sta adr.PLRENTCOST,y
 15835
 15836 				; optimize OK (hideout.pas), line = 194
 15837
 15838 641D AC AF B8			ldy CURRENTSUBLOCATION
 15839 6420 AD 1A E4			lda CURRENTPLAYER
 15840 6423 99 1C E4			sta adr.PLRENT,y
 15841
 15842 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 196
 15843
 15844 6426 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15845
 15846 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', hideout.pas), line = 197
 15847
 15848 6429 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15849
 15850 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', hideout.pas), line = 198
 15851
 15852 642C E8				inx
 15853 642D AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 15854 6432 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 15855 6437 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15856
 15857 				; optimize FAIL ('WAITFORKEY', hideout.pas), line = 199
 15858
 15859 643A 20 2E 21			jsr WAITFORKEY
 15860 643D			@exit
 15861
 15862 				; ------------------------------------------------------------
 15863
 15864 = BA70			CHOICE	= DATAORIGIN+$15FB
 15865 = BA72			RESULT	= DATAORIGIN+$15FD
 15866 = BA73			R	= DATAORIGIN+$15FE
 15867 = BA74			K	= DATAORIGIN+$15FF
 15868 = BA75			J	= DATAORIGIN+$1600
 15869 = BA76			W	= DATAORIGIN+$1601
 15870 = BA77			M	= DATAORIGIN+$1602
 15871 = BA78			PRICE	= DATAORIGIN+$1603
 15872 = BA79			PL	= DATAORIGIN+$1604
 15873 = BA7A			Z	= DATAORIGIN+$1605
 15874
 15875 = BA70			@VarData	= CHOICE
 15876 = 000B			@VarDataSize	= 11
 15877
 15878 643D 60				rts						; ret
 15879 				.endl
 15880
 15881 643E			.local	LOANSHARKCHOICES				; FUNCTION
 15882
 15883 				; optimize OK (loanshark.pas), line = 10
 15884
 15885 643E A9 04			lda #$04
 15886 6440 8D 7E BA			sta RESULT
 15887
 15888 				; optimize FAIL ('SHOWLOCATIONHEADER', loanshark.pas), line = 11
 15889
 15890 6443 20 1D 26			jsr SHOWLOCATIONHEADER
 15891
 15892 				; optimize OK (loanshark.pas), line = 13
 15893
 15894 6446 AC 7D BA 84 81		mvy CHOICE+1 :bp+1
 15895 644B AC 7C BA			ldy CHOICE
 15896 644E B1 80			lda (:bp),y
 15897 6450 C9 01			cmp #$01
 15898 6452 F0 03 4C 8F 65		jne l_3D7C
 15899
 15900 				; optimize OK (loanshark.pas), line = 15
 15901
 15902 6457 AD 1A E4			lda CURRENTPLAYER
 15903 645A 0A				asl @
 15904 645B A8				tay
 15905 645C B9 45 E0			lda adr.PLLOAN+1,y
 15906 645F 30 19			jmi l_3D91
 15907 6461 19 44 E0			ora adr.PLLOAN,y
 15908 6464 F0 14			jeq l_3D91
 15909
 15910 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 17
 15911
 15912 6466 E8				inx
 15913 6467 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 15914 646C AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 15915 6471 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15916
 15917 				; optimize FAIL ('B_CRT.CRT_READCHAR', loanshark.pas), line = 18
 15918
 15919 6474 20 74 1D			jsr B_CRT.CRT_READCHAR
 15920 6477 4C BB 6B			jmp @exit
 15921 647A			l_3D91
 15922
 15923 				; optimize OK (loanshark.pas), line = 22
 15924
 15925 647A AC 1A E4			ldy CURRENTPLAYER
 15926 647D B9 50 E0			lda adr.PLLOANSHARK,y
 15927 6480 C9 63			cmp #$63
 15928 6482 F0 22			jeq l_3DAD
 15929
 15930 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 24
 15931
 15932 6484 E8				inx
 15933 6485 AD B0 A3 95 94		mva LOC_STRING_37 :STACKORIGIN,x
 15934 648A AD B1 A3 95 A4		mva LOC_STRING_37+1 :STACKORIGIN+STACKWIDTH,x
 15935 648F 20 80 21			jsr CRT_WRITELN
 15936
 15937 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 25
 15938
 15939 6492 E8				inx
 15940 6493 AD B2 A3 95 94		mva LOC_STRING_38 :STACKORIGIN,x
 15941 6498 AD B3 A3 95 A4		mva LOC_STRING_38+1 :STACKORIGIN+STACKWIDTH,x
 15942 649D 20 80 21			jsr CRT_WRITELN
 15943
 15944 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 26
 15945
 15946 64A0 20 2E 21			jsr WAITFORKEY
 15947 64A3 4C BB 6B			jmp @exit
 15948 64A6			l_3DAD
 15949
 15950 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 30
 15951
 15952 64A6 E8				inx
 15953 64A7 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 15954 64AC AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 15955 64B1 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15956
 15957 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 31
 15958
 15959 64B4 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15960
 15961 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 32
 15962
 15963 64B7 E8				inx
 15964 64B8 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 15965 64BD AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 15966 64C2 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 15967
 15968 				; optimize OK (loanshark.pas), line = 33
 15969
 15970 64C5 A9 00			lda #$00
 15971 64C7 8D 91 B6			sta READVALUE.MINVALUE
 15972 64CA 8D 92 B6			sta READVALUE.MINVALUE+1
 15973 64CD A9 88			lda #$88
 15974 64CF 8D 93 B6			sta READVALUE.MAXVALUE
 15975 64D2 A9 13			lda #$13
 15976 64D4 8D 94 B6			sta READVALUE.MAXVALUE+1
 15977 64D7 20 EE 21			jsr READVALUE
 15978 64DA AD 95 B6			lda READVALUE.RESULT
 15979 64DD 8D 82 BA			sta LOAN
 15980 64E0 AD 96 B6			lda READVALUE.RESULT+1
 15981 64E3 8D 83 BA			sta LOAN+1
 15982
 15983 				; optimize OK (loanshark.pas), line = 34
 15984
 15985 64E6 0D 82 BA			ora LOAN
 15986 64E9 D0 03			jne l_3DD5
 15987 64EB 4C BB 6B			jmp @exit
 15988 64EE			l_3DD5
 15989
 15990 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 37
 15991
 15992 64EE 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15993
 15994 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 38
 15995
 15996 64F1 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 15997
 15998 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 39
 15999
 16000 64F4 E8				inx
 16001 64F5 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 16002 64FA AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 16003 64FF 20 80 21			jsr CRT_WRITELN
 16004
 16005 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 40
 16006
 16007 6502 E8				inx
 16008 6503 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 16009 6508 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 16010 650D 20 80 21			jsr CRT_WRITELN
 16011
 16012 				; optimize OK (loanshark.pas), line = 41
 16013
 16014 6510 AD 82 BA			lda LOAN
 16015 6513 85 9F			sta :STACKORIGIN+11
 16016 6515 A0 00			ldy #$00
 16017 6517 AD 83 BA			lda LOAN+1
 16018 651A 10 01			spl
 16019 651C 88				dey
 16020 651D 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 16021 651F 84 BF			sty :STACKORIGIN+STACKWIDTH*2+11
 16022 6521 84 CF			sty :STACKORIGIN+STACKWIDTH*3+11
 16023 6523 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+11
 16024 6525 66 BF			ror :STACKORIGIN+STACKWIDTH*2+11
 16025 6527 66 AF			ror :STACKORIGIN+STACKWIDTH+11
 16026 6529 66 9F			ror :STACKORIGIN+11
 16027 652B 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+11
 16028 652D 66 BF			ror :STACKORIGIN+STACKWIDTH*2+11
 16029 652F 66 AF			ror :STACKORIGIN+STACKWIDTH+11
 16030 6531 66 9F			ror :STACKORIGIN+11
 16031 6533 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+11
 16032 6535 66 BF			ror :STACKORIGIN+STACKWIDTH*2+11
 16033 6537 66 AF			ror :STACKORIGIN+STACKWIDTH+11
 16034 6539 66 9F			ror :STACKORIGIN+11
 16035 653B 46 CF			lsr :STACKORIGIN+STACKWIDTH*3+11
 16036 653D 66 BF			ror :STACKORIGIN+STACKWIDTH*2+11
 16037 653F 66 AF			ror :STACKORIGIN+STACKWIDTH+11
 16038 6541 66 9F			ror :STACKORIGIN+11
 16039 6543 AD 1A E4			lda CURRENTPLAYER
 16040 6546 0A				asl @
 16041 6547 A8				tay
 16042 6548 AD 82 BA			lda LOAN
 16043 654B 18 65 9F			add :STACKORIGIN+11
 16044 654E 99 44 E0			sta adr.PLLOAN,y
 16045 6551 AD 83 BA			lda LOAN+1
 16046 6554 65 AF			adc :STACKORIGIN+STACKWIDTH+11
 16047 6556 99 45 E0			sta adr.PLLOAN+1,y
 16048
 16049 				; optimize FAIL (2, loanshark.pas), line = 42
 16050
 16051 6559 E8				inx
 16052 655A AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 16053 655F A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 16054 6563 E8				inx
 16055 6564 A9 06 95 94			mva #$06 :STACKORIGIN,x
 16056 6568 A9 04			lda #$04
 16057 656A 20 CB 15			jsr SYSTEM.RANDOM_02E9
 16058 656D B5 94			lda :STACKORIGIN,x
 16059 656F 18 6D 81 A4			add SYSTEM.RANDOM_02E9.RESULT
 16060 6573 B4 93			ldy :STACKORIGIN-1,x
 16061 6575 99 4C E0			sta adr.PLLOANTIME,y
 16062 6578 CA				dex
 16063 6579 CA				dex
 16064
 16065 				; optimize OK (loanshark.pas), line = 43
 16066
 16067 657A AD 82 BA			lda LOAN
 16068 657D 8D 35 B9			sta ADDMONEY.AMOUNT
 16069 6580 AD 83 BA			lda LOAN+1
 16070 6583 8D 36 B9			sta ADDMONEY.AMOUNT+1
 16071 6586 20 E3 2A			jsr ADDMONEY
 16072
 16073 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 44
 16074
 16075 6589 20 2E 21			jsr WAITFORKEY
 16076 658C 4C BB 6B			jmp @exit
 16077 658F			l_3D7C
 16078
 16079 				; optimize OK (loanshark.pas), line = 48
 16080
 16081 658F AC 7D BA 84 81		mvy CHOICE+1 :bp+1
 16082 6594 AC 7C BA			ldy CHOICE
 16083 6597 B1 80			lda (:bp),y
 16084 6599 C9 02			cmp #$02
 16085 659B F0 03 4C E7 66		jne l_3E15
 16086
 16087 				; optimize OK (loanshark.pas), line = 50
 16088
 16089 65A0 AD 1A E4			lda CURRENTPLAYER
 16090 65A3 0A				asl @
 16091 65A4 A8				tay
 16092 65A5 B9 45 E0			lda adr.PLLOAN+1,y
 16093 65A8 D0 03			bne @+
 16094 65AA B9 44 E0			lda adr.PLLOAN,y
 16095 				@
 16096 65AD D0 14			jne l_3E2A
 16097
 16098 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 52
 16099
 16100 65AF E8				inx
 16101 65B0 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 16102 65B5 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 16103 65BA 20 80 21			jsr CRT_WRITELN
 16104
 16105 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 53
 16106
 16107 65BD 20 2E 21			jsr WAITFORKEY
 16108 65C0 4C BB 6B			jmp @exit
 16109 65C3			l_3E2A
 16110
 16111 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 57
 16112
 16113 65C3 E8				inx
 16114 65C4 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 16115 65C9 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 16116 65CE 20 80 21			jsr CRT_WRITELN
 16117
 16118 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 58
 16119
 16120 65D1 E8				inx
 16121 65D2 A9 31 95 94			mva #$31 :STACKORIGIN,x
 16122 65D6 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 16123 65DA 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16124
 16125 				; optimize OK (loanshark.pas), line = 59
 16126
 16127 65DD AD 1A E4			lda CURRENTPLAYER
 16128 65E0 0A				asl @
 16129 65E1 A8				tay
 16130 65E2 B9 44 E0			lda adr.PLLOAN,y
 16131 65E5 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 16132 65E8 B9 45 E0			lda adr.PLLOAN+1,y
 16133 65EB 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 16134 65ED A0 00			ldy #$00
 16135 65EF A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 16136 65F1 10 01			spl
 16137 65F3 88				dey
 16138 65F4 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 16139 65F7 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 16140 65FA 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 16141 65FD 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 16142
 16143 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 60
 16144
 16145 6600 E8				inx
 16146 6601 A9 26 95 94			mva #$26 :STACKORIGIN,x
 16147 6605 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 16148 6609 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16149
 16150 				; optimize OK (loanshark.pas), line = 61
 16151
 16152 660C AD 1A E4			lda CURRENTPLAYER
 16153 660F 0A				asl @
 16154 6610 A8				tay
 16155 6611 B9 44 E0			lda adr.PLLOAN,y
 16156 6614 8D 93 B6			sta READVALUE.MAXVALUE
 16157 6617 B9 45 E0			lda adr.PLLOAN+1,y
 16158 661A 8D 94 B6			sta READVALUE.MAXVALUE+1
 16159 661D A9 00			lda #$00
 16160 661F 8D 91 B6			sta READVALUE.MINVALUE
 16161 6622 8D 92 B6			sta READVALUE.MINVALUE+1
 16162 6625 20 EE 21			jsr READVALUE
 16163 6628 AD 95 B6			lda READVALUE.RESULT
 16164 662B 8D 82 BA			sta LOAN
 16165 662E AD 96 B6			lda READVALUE.RESULT+1
 16166 6631 8D 83 BA			sta LOAN+1
 16167
 16168 				; optimize OK (loanshark.pas), line = 62
 16169
 16170 6634 0D 82 BA			ora LOAN
 16171 6637 D0 03			jne l_3E59
 16172 6639 4C BB 6B			jmp @exit
 16173 663C			l_3E59
 16174
 16175 				; optimize OK (loanshark.pas), line = 65
 16176
 16177 663C AD 82 BA			lda LOAN
 16178 663F 8D 40 B9			sta PAYMONEY.PRICE
 16179 6642 AD 83 BA			lda LOAN+1
 16180 6645 8D 41 B9			sta PAYMONEY.PRICE+1
 16181 6648 20 98 2D			jsr PAYMONEY
 16182 664B AD 42 B9			lda PAYMONEY.RESULT
 16183 664E D0 03			jne l_3E6E
 16184 6650 4C BB 6B			jmp @exit
 16185 6653			l_3E6E
 16186
 16187 				; optimize OK (loanshark.pas), line = 66
 16188
 16189 6653 AD 1A E4			lda CURRENTPLAYER
 16190 6656 0A				asl @
 16191 6657 A8				tay
 16192 6658 B9 44 E0			lda adr.PLLOAN,y
 16193 665B 38 ED 82 BA			sub LOAN
 16194 665F 99 44 E0			sta adr.PLLOAN,y
 16195 6662 B9 45 E0			lda adr.PLLOAN+1,y
 16196 6665 ED 83 BA			sbc LOAN+1
 16197 6668 99 45 E0			sta adr.PLLOAN+1,y
 16198
 16199 				; optimize OK (loanshark.pas), line = 67
 16200
 16201 666B C9 00			cmp #$00
 16202 666D D0 03			bne @+
 16203 666F B9 44 E0			lda adr.PLLOAN,y
 16204 				@
 16205 6672 D0 1F			jne l_3E95
 16206
 16207 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 69
 16208
 16209 6674 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16210
 16211 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 70
 16212
 16213 6677 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16214
 16215 				; optimize OK (loanshark.pas), line = 71
 16216
 16217 667A AC 1A E4			ldy CURRENTPLAYER
 16218 667D A9 00			lda #$00
 16219 667F 99 4C E0			sta adr.PLLOANTIME,y
 16220
 16221 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 72
 16222
 16223 6682 E8				inx
 16224 6683 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 16225 6688 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 16226 668D 20 80 21			jsr CRT_WRITELN
 16227 6690 4C E4 66			jmp l_3EAB
 16228 6693			l_3E95
 16229
 16230 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 76
 16231
 16232 6693 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16233
 16234 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 77
 16235
 16236 6696 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16237
 16238 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 78
 16239
 16240 6699 E8				inx
 16241 669A AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 16242 669F AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 16243 66A4 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16244
 16245 				; optimize OK (loanshark.pas), line = 79
 16246
 16247 66A7 AD 1A E4			lda CURRENTPLAYER
 16248 66AA 0A				asl @
 16249 66AB A8				tay
 16250 66AC B9 44 E0			lda adr.PLLOAN,y
 16251 66AF 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 16252 66B2 B9 45 E0			lda adr.PLLOAN+1,y
 16253 66B5 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 16254 66B7 A0 00			ldy #$00
 16255 66B9 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 16256 66BB 10 01			spl
 16257 66BD 88				dey
 16258 66BE 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 16259 66C1 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 16260 66C4 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 16261 66C7 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 16262
 16263 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 80
 16264
 16265 66CA E8				inx
 16266 66CB A9 FC 95 94			mva #$FC :STACKORIGIN,x
 16267 66CF A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 16268 66D3 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16269
 16270 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 81
 16271
 16272 66D6 E8				inx
 16273 66D7 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 16274 66DC AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 16275 66E1 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16276 66E4			l_3EAB
 16277
 16278 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 83
 16279
 16280 66E4 20 2E 21			jsr WAITFORKEY
 16281 66E7			l_3E15
 16282
 16283 				; optimize OK (loanshark.pas), line = 87
 16284
 16285 66E7 AC 7D BA 84 81		mvy CHOICE+1 :bp+1
 16286 66EC AC 7C BA			ldy CHOICE
 16287 66EF B1 80			lda (:bp),y
 16288 66F1 C9 03			cmp #$03
 16289 66F3 F0 03 4C DA 68		jne l_3ED0
 16290
 16291 				; optimize OK (loanshark.pas), line = 90
 16292
 16293 66F8 AD 1A E4			lda CURRENTPLAYER
 16294 66FB 0A				asl @
 16295 66FC A8				tay
 16296 66FD B9 45 E0			lda adr.PLLOAN+1,y
 16297 6700 D0 03			bne @+
 16298 6702 B9 44 E0			lda adr.PLLOAN,y
 16299 				@
 16300 6705 F0 14			jeq l_3EE5
 16301
 16302 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 91
 16303
 16304 6707 E8				inx
 16305 6708 AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 16306 670D AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 16307 6712 20 80 21			jsr CRT_WRITELN
 16308
 16309 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 92
 16310
 16311 6715 20 2E 21			jsr WAITFORKEY
 16312 6718 4C BB 6B			jmp @exit
 16313 671B			l_3EE5
 16314
 16315 				; optimize OK (loanshark.pas), line = 96
 16316
 16317 671B AC 1A E4			ldy CURRENTPLAYER
 16318 671E B9 50 E0			lda adr.PLLOANSHARK,y
 16319 6721 CD AF B8			cmp CURRENTSUBLOCATION
 16320 6724 F0 03 4C C5 67		jne l_3F03
 16321
 16322 				; optimize OK (loanshark.pas), line = 99
 16323
 16324 6729 A9 0B			lda #$0B
 16325 672B 20 CB 15			jsr SYSTEM.RANDOM_02E9
 16326 672E E8				inx
 16327 672F AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 16328 6734 E8				inx
 16329 6735 A9 64 95 94			mva #$64 :STACKORIGIN,x
 16330 6739 20 E7 11			jsr imulBYTE
 16331 673C A5 84			lda :eax
 16332 673E 18 69 94			add #$94
 16333 6741 95 93			sta :STACKORIGIN-1,x
 16334 6743 A5 85			lda :eax+1
 16335 6745 69 11			adc #$11
 16336 6747 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
 16337 6749 CA				dex
 16338 674A B5 94			lda :STACKORIGIN,x
 16339 674C 8D 84 BA			sta P
 16340 674F B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 16341 6751 8D 85 BA			sta P+1
 16342
 16343 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 100
 16344
 16345 6754 AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 16346 6759 AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 16347 675E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16348
 16349 				; optimize OK (loanshark.pas), line = 101
 16350
 16351 6761 AD 84 BA			lda P
 16352 6764 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 16353 6767 AD 85 BA			lda P+1
 16354 676A 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 16355 676D 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 16356
 16357 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 102
 16358
 16359 6770 E8				inx
 16360 6771 AD 94 A3 95 94		mva LOC_STRING_23 :STACKORIGIN,x
 16361 6776 AD 95 A3 95 A4		mva LOC_STRING_23+1 :STACKORIGIN+STACKWIDTH,x
 16362 677B 20 80 21			jsr CRT_WRITELN
 16363
 16364 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 103
 16365
 16366 677E E8				inx
 16367 677F AD 96 A3 95 94		mva LOC_STRING_24 :STACKORIGIN,x
 16368 6784 AD 97 A3 95 A4		mva LOC_STRING_24+1 :STACKORIGIN+STACKWIDTH,x
 16369 6789 20 80 21			jsr CRT_WRITELN
 16370
 16371 				; optimize FAIL ('GETYESNO', loanshark.pas), line = 104
 16372
 16373 678C 20 DA 21			jsr GETYESNO
 16374 678F AD 90 B6			lda GETYESNO.RESULT
 16375 6792 D0 03			jne l_3F2D
 16376 6794 4C BB 6B			jmp @exit
 16377 6797			l_3F2D
 16378
 16379 				; optimize OK (loanshark.pas), line = 105
 16380
 16381 6797 AD 84 BA			lda P
 16382 679A 8D 35 B9			sta ADDMONEY.AMOUNT
 16383 679D AD 85 BA			lda P+1
 16384 67A0 8D 36 B9			sta ADDMONEY.AMOUNT+1
 16385 67A3 20 E3 2A			jsr ADDMONEY
 16386
 16387 				; optimize OK (loanshark.pas), line = 106
 16388
 16389 67A6 AC 1A E4			ldy CURRENTPLAYER
 16390 67A9 A9 63			lda #$63
 16391 67AB 99 50 E0			sta adr.PLLOANSHARK,y
 16392
 16393 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 107
 16394
 16395 67AE 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16396
 16397 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 108
 16398
 16399 67B1 E8				inx
 16400 67B2 AD 98 A3 95 94		mva LOC_STRING_25 :STACKORIGIN,x
 16401 67B7 AD 99 A3 95 A4		mva LOC_STRING_25+1 :STACKORIGIN+STACKWIDTH,x
 16402 67BC 20 80 21			jsr CRT_WRITELN
 16403
 16404 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 109
 16405
 16406 67BF 20 2E 21			jsr WAITFORKEY
 16407 67C2 4C BB 6B			jmp @exit
 16408 67C5			l_3F03
 16409
 16410 				; optimize OK (loanshark.pas), line = 114
 16411
 16412 67C5 AC 1A E4			ldy CURRENTPLAYER
 16413 67C8 B9 50 E0			lda adr.PLLOANSHARK,y
 16414 67CB C9 63			cmp #$63
 16415 67CD F0 14			jeq l_3F5D
 16416
 16417 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 116
 16418
 16419 67CF E8				inx
 16420 67D0 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 16421 67D5 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 16422 67DA 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16423
 16424 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 117
 16425
 16426 67DD 20 2E 21			jsr WAITFORKEY
 16427 67E0 4C BB 6B			jmp @exit
 16428 67E3			l_3F5D
 16429
 16430 				; optimize OK (loanshark.pas), line = 120
 16431
 16432 67E3 A9 00			lda #$00
 16433 67E5 8D 7F BA			sta R
 16434
 16435 67E8			l_3F6D
 16436 				; --- ForToDoCondition
 16437 67E8 AC 7F BA			ldy R
 16438 67EB C0 04			cpy #$04
 16439 67ED B0 49			jcs l_3F7B
 16440
 16441 				; optimize OK (loanshark.pas), line = 122
 16442
 16443 67EF B9 50 E0			lda adr.PLLOANSHARK,y
 16444 67F2 CD AF B8			cmp CURRENTSUBLOCATION
 16445 67F5 D0 3C			jne l_3F92
 16446
 16447 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 123
 16448
 16449 67F7 E8				inx
 16450 67F8 AD 9A A3 95 94		mva LOC_STRING_26 :STACKORIGIN,x
 16451 67FD AD 9B A3 95 A4		mva LOC_STRING_26+1 :STACKORIGIN+STACKWIDTH,x
 16452 6802 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16453
 16454 				; optimize OK (loanshark.pas), line = 124
 16455
 16456 6805 AD 7F BA			lda R
 16457 6808 0A				asl @
 16458 6809 0A				asl @
 16459 680A 0A				asl @
 16460 680B 8D 80 BA			sta K
 16461
 16462 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 125
 16463
 16464 680E E8				inx
 16465 680F AD 80 BA			lda K
 16466 6812 0A				asl @
 16467 6813 A8				tay
 16468 6814 B9 E0 B0			lda adr.GANGSTERNAMES,y
 16469 6817 95 94			sta :STACKORIGIN,x
 16470 6819 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 16471 681C 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 16472 681E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16473
 16474 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 126
 16475
 16476 6821 E8				inx
 16477 6822 A9 36 95 94			mva #$36 :STACKORIGIN,x
 16478 6826 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 16479 682A 20 80 21			jsr CRT_WRITELN
 16480
 16481 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 127
 16482
 16483 682D 20 2E 21			jsr WAITFORKEY
 16484 6830 4C BB 6B			jmp @exit
 16485 6833			l_3F92
 16486
 16487 				; --- ForToDoEpilog
 16488 6833 EE 7F BA			inc R
 16489 6836 D0 B0			jne l_3F6D
 16490 6838			l_3F7B
 16491
 16492 				; optimize OK (loanshark.pas), line = 133
 16493
 16494 6838 A9 0B			lda #$0B
 16495 683A 20 CB 15			jsr SYSTEM.RANDOM_02E9
 16496 683D E8				inx
 16497 683E AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 16498 6843 E8				inx
 16499 6844 A9 64 95 94			mva #$64 :STACKORIGIN,x
 16500 6848 20 E7 11			jsr imulBYTE
 16501 684B A5 84			lda :eax
 16502 684D 18 69 88			add #$88
 16503 6850 95 93			sta :STACKORIGIN-1,x
 16504 6852 A5 85			lda :eax+1
 16505 6854 69 13			adc #$13
 16506 6856 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
 16507 6858 CA				dex
 16508 6859 B5 94			lda :STACKORIGIN,x
 16509 685B 8D 84 BA			sta P
 16510 685E B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 16511 6860 8D 85 BA			sta P+1
 16512
 16513 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 134
 16514
 16515 6863 AD 9C A3 95 94		mva LOC_STRING_27 :STACKORIGIN,x
 16516 6868 AD 9D A3 95 A4		mva LOC_STRING_27+1 :STACKORIGIN+STACKWIDTH,x
 16517 686D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16518
 16519 				; optimize OK (loanshark.pas), line = 135
 16520
 16521 6870 AD 84 BA			lda P
 16522 6873 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 16523 6876 AD 85 BA			lda P+1
 16524 6879 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 16525 687C 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 16526
 16527 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 136
 16528
 16529 687F E8				inx
 16530 6880 AD 9E A3 95 94		mva LOC_STRING_28 :STACKORIGIN,x
 16531 6885 AD 9F A3 95 A4		mva LOC_STRING_28+1 :STACKORIGIN+STACKWIDTH,x
 16532 688A 20 80 21			jsr CRT_WRITELN
 16533
 16534 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 137
 16535
 16536 688D E8				inx
 16537 688E AD A0 A3 95 94		mva LOC_STRING_29 :STACKORIGIN,x
 16538 6893 AD A1 A3 95 A4		mva LOC_STRING_29+1 :STACKORIGIN+STACKWIDTH,x
 16539 6898 20 80 21			jsr CRT_WRITELN
 16540
 16541 				; optimize FAIL ('GETYESNO', loanshark.pas), line = 138
 16542
 16543 689B 20 DA 21			jsr GETYESNO
 16544 689E AD 90 B6			lda GETYESNO.RESULT
 16545 68A1 D0 03			jne l_3FD9
 16546 68A3 4C BB 6B			jmp @exit
 16547 68A6			l_3FD9
 16548
 16549 				; optimize OK (loanshark.pas), line = 139
 16550
 16551 68A6 AD 84 BA			lda P
 16552 68A9 8D 40 B9			sta PAYMONEY.PRICE
 16553 68AC AD 85 BA			lda P+1
 16554 68AF 8D 41 B9			sta PAYMONEY.PRICE+1
 16555 68B2 20 98 2D			jsr PAYMONEY
 16556 68B5 AD 42 B9			lda PAYMONEY.RESULT
 16557 68B8 D0 03			jne l_3FEE
 16558 68BA 4C BB 6B			jmp @exit
 16559 68BD			l_3FEE
 16560
 16561 				; optimize OK (loanshark.pas), line = 140
 16562
 16563 68BD AC 1A E4			ldy CURRENTPLAYER
 16564 68C0 AD AF B8			lda CURRENTSUBLOCATION
 16565 68C3 99 50 E0			sta adr.PLLOANSHARK,y
 16566
 16567 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 141
 16568
 16569 68C6 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16570
 16571 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 142
 16572
 16573 68C9 E8				inx
 16574 68CA AD A2 A3 95 94		mva LOC_STRING_30 :STACKORIGIN,x
 16575 68CF AD A3 A3 95 A4		mva LOC_STRING_30+1 :STACKORIGIN+STACKWIDTH,x
 16576 68D4 20 80 21			jsr CRT_WRITELN
 16577
 16578 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 143
 16579
 16580 68D7 20 2E 21			jsr WAITFORKEY
 16581 68DA			l_3F48
 16582 68DA			l_3ED0
 16583
 16584 				; optimize OK (loanshark.pas), line = 148
 16585
 16586 68DA AC 7D BA 84 81		mvy CHOICE+1 :bp+1
 16587 68DF AC 7C BA			ldy CHOICE
 16588 68E2 B1 80			lda (:bp),y
 16589 68E4 C9 04			cmp #$04
 16590 68E6 F0 03 4C 05 6A		jne l_4013
 16591
 16592 				; optimize OK (loanshark.pas), line = 150
 16593
 16594 68EB AC 1A E4			ldy CURRENTPLAYER
 16595 68EE B9 50 E0			lda adr.PLLOANSHARK,y
 16596 68F1 CD AF B8			cmp CURRENTSUBLOCATION
 16597 68F4 F0 14			jeq l_402B
 16598
 16599 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 152
 16600
 16601 68F6 E8				inx
 16602 68F7 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 16603 68FC AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 16604 6901 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16605
 16606 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 153
 16607
 16608 6904 20 2E 21			jsr WAITFORKEY
 16609 6907 4C BB 6B			jmp @exit
 16610 690A			l_402B
 16611
 16612 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 156
 16613
 16614 690A E8				inx
 16615 690B AD A4 A3 95 94		mva LOC_STRING_31 :STACKORIGIN,x
 16616 6910 AD A5 A3 95 A4		mva LOC_STRING_31+1 :STACKORIGIN+STACKWIDTH,x
 16617 6915 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16618
 16619 				; optimize OK (loanshark.pas), line = 157
 16620
 16621 6918 AD 1A E4			lda CURRENTPLAYER
 16622 691B 0A				asl @
 16623 691C A8				tay
 16624 691D B9 84 E0			lda adr.PLLOANINVEST,y
 16625 6920 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 16626 6923 B9 85 E0			lda adr.PLLOANINVEST+1,y
 16627 6926 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 16628 6929 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 16629
 16630 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 158
 16631
 16632 692C E8				inx
 16633 692D AD A6 A3 95 94		mva LOC_STRING_32 :STACKORIGIN,x
 16634 6932 AD A7 A3 95 A4		mva LOC_STRING_32+1 :STACKORIGIN+STACKWIDTH,x
 16635 6937 20 80 21			jsr CRT_WRITELN
 16636
 16637 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 159
 16638
 16639 693A E8				inx
 16640 693B AD A8 A3 95 94		mva LOC_STRING_33 :STACKORIGIN,x
 16641 6940 AD A9 A3 95 A4		mva LOC_STRING_33+1 :STACKORIGIN+STACKWIDTH,x
 16642 6945 20 80 21			jsr CRT_WRITELN
 16643
 16644 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 160
 16645
 16646 6948 E8				inx
 16647 6949 AD AA A3 95 94		mva LOC_STRING_34 :STACKORIGIN,x
 16648 694E AD AB A3 95 A4		mva LOC_STRING_34+1 :STACKORIGIN+STACKWIDTH,x
 16649 6953 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16650
 16651 				; optimize OK (loanshark.pas), line = 162
 16652
 16653 6956 AD 1A E4			lda CURRENTPLAYER
 16654 6959 0A				asl @
 16655 695A A8				tay
 16656 695B A9 88			lda #$88
 16657 695D 38 F9 84 E0			sub adr.PLLOANINVEST,y
 16658 6961 8D 93 B6			sta READVALUE.MAXVALUE
 16659 6964 A9 13			lda #$13
 16660 6966 F9 85 E0			sbc adr.PLLOANINVEST+1,y
 16661 6969 8D 94 B6			sta READVALUE.MAXVALUE+1
 16662 696C A9 00			lda #$00
 16663 696E 38 F9 84 E0			sub adr.PLLOANINVEST,y
 16664 6972 8D 91 B6			sta READVALUE.MINVALUE
 16665 6975 A9 00			lda #$00
 16666 6977 F9 85 E0			sbc adr.PLLOANINVEST+1,y
 16667 697A 8D 92 B6			sta READVALUE.MINVALUE+1
 16668 697D 20 EE 21			jsr READVALUE
 16669 6980 AD 95 B6			lda READVALUE.RESULT
 16670 6983 8D 82 BA			sta LOAN
 16671 6986 AD 96 B6			lda READVALUE.RESULT+1
 16672 6989 8D 83 BA			sta LOAN+1
 16673
 16674 				; optimize OK (loanshark.pas), line = 163
 16675
 16676 698C 0D 82 BA			ora LOAN
 16677 698F D0 03			jne l_406A
 16678 6991 4C BB 6B			jmp @exit
 16679 6994			l_406A
 16680
 16681 				; optimize OK (loanshark.pas), line = 164
 16682
 16683 6994 AD 82 BA			lda LOAN
 16684 6997 8D 40 B9			sta PAYMONEY.PRICE
 16685 699A AD 83 BA			lda LOAN+1
 16686 699D 8D 41 B9			sta PAYMONEY.PRICE+1
 16687 69A0 20 98 2D			jsr PAYMONEY
 16688 69A3 AD 42 B9			lda PAYMONEY.RESULT
 16689 69A6 D0 03			jne l_407F
 16690 69A8 4C BB 6B			jmp @exit
 16691 69AB			l_407F
 16692
 16693 				; optimize OK (loanshark.pas), line = 165
 16694
 16695 69AB AD 1A E4			lda CURRENTPLAYER
 16696 69AE 0A				asl @
 16697 69AF A8				tay
 16698 69B0 B9 84 E0			lda adr.PLLOANINVEST,y
 16699 69B3 18 6D 82 BA			add LOAN
 16700 69B7 99 84 E0			sta adr.PLLOANINVEST,y
 16701 69BA B9 85 E0			lda adr.PLLOANINVEST+1,y
 16702 69BD 6D 83 BA			adc LOAN+1
 16703 69C0 99 85 E0			sta adr.PLLOANINVEST+1,y
 16704
 16705 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 166
 16706
 16707 69C3 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16708
 16709 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 167
 16710
 16711 69C6 E8				inx
 16712 69C7 AD AC A3 95 94		mva LOC_STRING_35 :STACKORIGIN,x
 16713 69CC AD AD A3 95 A4		mva LOC_STRING_35+1 :STACKORIGIN+STACKWIDTH,x
 16714 69D1 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16715
 16716 				; optimize OK (loanshark.pas), line = 168
 16717
 16718 69D4 AD 1A E4			lda CURRENTPLAYER
 16719 69D7 0A				asl @
 16720 69D8 A8				tay
 16721 69D9 B9 84 E0			lda adr.PLLOANINVEST,y
 16722 69DC 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 16723 69DF B9 85 E0			lda adr.PLLOANINVEST+1,y
 16724 69E2 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 16725 69E5 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 16726
 16727 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 169
 16728
 16729 69E8 E8				inx
 16730 69E9 A9 FC 95 94			mva #$FC :STACKORIGIN,x
 16731 69ED A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 16732 69F1 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16733
 16734 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 170
 16735
 16736 69F4 E8				inx
 16737 69F5 AD AE A3 95 94		mva LOC_STRING_36 :STACKORIGIN,x
 16738 69FA AD AF A3 95 A4		mva LOC_STRING_36+1 :STACKORIGIN+STACKWIDTH,x
 16739 69FF 20 80 21			jsr CRT_WRITELN
 16740
 16741 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 171
 16742
 16743 6A02 20 2E 21			jsr WAITFORKEY
 16744 6A05			l_4013
 16745
 16746 				; optimize OK (loanshark.pas), line = 174
 16747
 16748 6A05 AC 7D BA 84 81		mvy CHOICE+1 :bp+1
 16749 6A0A AC 7C BA			ldy CHOICE
 16750 6A0D B1 80			lda (:bp),y
 16751 6A0F C9 05			cmp #$05
 16752 6A11 F0 03 4C BB 6B		jne l_40B6
 16753
 16754 				; optimize OK (loanshark.pas), line = 176
 16755
 16756 6A16 AC 1A E4			ldy CURRENTPLAYER
 16757 6A19 B9 50 E0			lda adr.PLLOANSHARK,y
 16758 6A1C CD AF B8			cmp CURRENTSUBLOCATION
 16759 6A1F F0 14			jeq l_40CE
 16760
 16761 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 178
 16762
 16763 6A21 E8				inx
 16764 6A22 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 16765 6A27 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 16766 6A2C 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16767
 16768 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 179
 16769
 16770 6A2F 20 2E 21			jsr WAITFORKEY
 16771 6A32 4C BB 6B			jmp @exit
 16772 6A35			l_40CE
 16773
 16774 				; optimize OK (loanshark.pas), line = 184
 16775
 16776 6A35 A9 00			lda #$00
 16777 6A37 8D 81 BA			sta ALLPAID
 16778
 16779 				; optimize OK (loanshark.pas), line = 185
 16780
 16781 6A3A A9 03			lda #$03
 16782 6A3C 20 CB 15			jsr SYSTEM.RANDOM_02E9
 16783 6A3F E8				inx
 16784 6A40 A0 01			ldy #1
 16785 6A42 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 16786 6A45 D0 01			bne @+
 16787 6A47 88				dey
 16788 				@
 16789 6A48 94 94			sty :STACKORIGIN,x
 16790 6A4A E8				inx
 16791 6A4B AD 1A E4			lda CURRENTPLAYER
 16792 6A4E 0A				asl @
 16793 6A4F A8				tay
 16794 6A50 B9 84 E0			lda adr.PLLOANINVEST,y
 16795 6A53 95 94			sta :STACKORIGIN,x
 16796 6A55 B9 85 E0			lda adr.PLLOANINVEST+1,y
 16797 6A58 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 16798 6A5A E8				inx
 16799 6A5B A0 01			ldy #1
 16800 6A5D B5 A3			lda :STACKORIGIN-1+STACKWIDTH,x
 16801 6A5F 15 93			ora :STACKORIGIN-1,x
 16802 6A61 D0 01			bne @+
 16803 6A63 88				dey
 16804 				@
 16805 6A64 CA				dex
 16806 6A65 94 94			sty :STACKORIGIN,x
 16807 6A67 CA				dex
 16808 6A68 CA				dex
 16809 6A69 B5 95			lda :STACKORIGIN+1,x
 16810 6A6B 35 96			and :STACKORIGIN+2,x
 16811 6A6D F0 05			jeq l_40F8
 16812 6A6F A9 01			lda #$01
 16813 6A71 8D 81 BA			sta ALLPAID
 16814 6A74			l_40F8
 16815
 16816 				; optimize OK (loanshark.pas), line = 186
 16817
 16818 6A74 AD 81 BA			lda ALLPAID
 16819 6A77 D0 14			jne l_4111
 16820
 16821 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 188
 16822
 16823 6A79 E8				inx
 16824 6A7A AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 16825 6A7F AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 16826 6A84 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16827
 16828 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 189
 16829
 16830 6A87 20 2E 21			jsr WAITFORKEY
 16831 6A8A 4C BB 6B			jmp @exit
 16832 6A8D			l_4111
 16833
 16834 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 193
 16835
 16836 6A8D E8				inx
 16837 6A8E AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 16838 6A93 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 16839 6A98 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16840
 16841 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 194
 16842
 16843 6A9B E8				inx
 16844 6A9C AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 16845 6AA1 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 16846 6AA6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16847
 16848 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 195
 16849
 16850 6AA9 E8				inx
 16851 6AAA AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 16852 6AAF AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 16853 6AB4 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16854
 16855 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 196
 16856
 16857 6AB7 20 2E 21			jsr WAITFORKEY
 16858
 16859 				; -------------------  ASM Block 00000168  -------------------
 16860
 16861 				; 
 16862 6ABA AD 88 A3		            lda loc_string_17
 16863 6ABD 8D 7A B0		            sta adr.FP_GANG+$02
 16864 6AC0 AD 89 A3		            lda loc_string_17+1
 16865 6AC3 8D 7B B0		            sta adr.FP_GANG+1+$02
 16866 				        
 16867 				; optimize OK (loanshark.pas), line = 205
 16868
 16869 6AC6 A9 01			lda #$01
 16870 6AC8 8D 02 EC			sta adr.FP_AI+$01
 16871
 16872 				; optimize OK (loanshark.pas), line = 206
 16873
 16874 6ACB 8D 04 EC			sta adr.FP_N+$01
 16875
 16876 				; optimize OK (loanshark.pas), line = 207
 16877
 16878 6ACE AD 9C B0			lda adr.FP_NAME+$20
 16879 6AD1 85 8C			sta @move.dst
 16880 6AD3 AD 9D B0			lda adr.FP_NAME+1+$20
 16881 6AD6 85 8D			sta @move.dst+1
 16882 6AD8 AD 88 A3			lda LOC_STRING_17
 16883 6ADB 85 88			sta @move.src
 16884 6ADD AD 89 A3			lda LOC_STRING_17+1
 16885 6AE0 85 89			sta @move.src+1
 16886 6AE2 A0 00			ldy #$00
 16887 6AE4 B1 88			lda (@move.src),y
 16888 6AE6 18 69 01			add #1
 16889 6AE9 85 84			sta @move.cnt
 16890 6AEB 90 01			scc
 16891 6AED C8				iny
 16892 6AEE 84 85			sty @move.cnt+1
 16893 6AF0 20 35 10			jsr @move
 16894
 16895 				; optimize OK (loanshark.pas), line = 208
 16896
 16897 6AF3 A9 06			lda #$06
 16898 6AF5 8D 55 EC			sta adr.FP_WEAPON+$10
 16899
 16900 				; optimize FAIL (1, loanshark.pas), line = 209
 16901
 16902 6AF8 E8				inx
 16903 6AF9 A9 10 95 94			mva #$10 :STACKORIGIN,x
 16904 6AFD A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 16905 6B01 A9 02			lda #$02
 16906 6B03 20 CB 15			jsr SYSTEM.RANDOM_02E9
 16907 6B06 B4 94			ldy :STACKORIGIN,x
 16908 6B08 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 16909 6B0B 99 45 ED			sta adr.FP_SEX,y
 16910 6B0E CA				dex
 16911
 16912 				; optimize OK (loanshark.pas), line = 210
 16913
 16914 6B0F A9 23			lda #$23
 16915 6B11 8D 95 EC			sta adr.FP_ENERGY+$10
 16916
 16917 				; optimize FAIL ('DOFIGHT', loanshark.pas), line = 213
 16918
 16919 6B14 20 44 49			jsr DOFIGHT
 16920 6B17 AD E6 B9			lda DOFIGHT.RESULT
 16921 6B1A C9 01			cmp #$01
 16922 6B1C D0 03			jne l_4152
 16923 6B1E 4C BB 6B			jmp @exit
 16924 6B21			l_4152
 16925
 16926 				; optimize FAIL (1, loanshark.pas), line = 215
 16927
 16928 6B21 E8				inx
 16929 6B22 A9 F4 95 94			mva #$F4 :STACKORIGIN,x
 16930 6B26 A9 01 95 A4			mva #$01 :STACKORIGIN+STACKWIDTH,x
 16931 6B2A A9 00			lda #$00
 16932 6B2C 20 CB 15			jsr SYSTEM.RANDOM_02E9
 16933 6B2F E8				inx
 16934 6B30 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 16935 6B35 E8				inx
 16936 6B36 A9 02 95 94			mva #$02 :STACKORIGIN,x
 16937 6B3A 20 87 0F			jsr shlEAX_CL.BYTE
 16938 6B3D CA				dex
 16939 6B3E A9 00 95 B3			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
 16940 6B42 95 C3			sta :STACKORIGIN-1+STACKWIDTH*3,x
 16941 6B44 20 70 0F			jsr addAX_CX
 16942 6B47 CA				dex
 16943 6B48 B5 94			lda :STACKORIGIN,x
 16944 6B4A 8D 82 BA			sta LOAN
 16945 6B4D B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 16946 6B4F 8D 83 BA			sta LOAN+1
 16947 6B52 CA				dex
 16948
 16949 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', loanshark.pas), line = 216
 16950
 16951 6B53 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 16952
 16953 				; optimize FAIL ('SHOWLOCATIONHEADER', loanshark.pas), line = 219
 16954
 16955 6B56 20 1D 26			jsr SHOWLOCATIONHEADER
 16956
 16957 				; optimize FAIL ('CRT_WRITELN', loanshark.pas), line = 220
 16958
 16959 6B59 E8				inx
 16960 6B5A AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 16961 6B5F AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 16962 6B64 20 80 21			jsr CRT_WRITELN
 16963
 16964 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 221
 16965
 16966 6B67 E8				inx
 16967 6B68 AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 16968 6B6D AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 16969 6B72 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16970
 16971 				; optimize OK (loanshark.pas), line = 222
 16972
 16973 6B75 AD 82 BA			lda LOAN
 16974 6B78 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 16975 6B7B A0 00			ldy #$00
 16976 6B7D AD 83 BA			lda LOAN+1
 16977 6B80 10 01			spl
 16978 6B82 88				dey
 16979 6B83 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 16980 6B86 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 16981 6B89 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 16982 6B8C 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 16983
 16984 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', loanshark.pas), line = 223
 16985
 16986 6B8F E8				inx
 16987 6B90 AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 16988 6B95 AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 16989 6B9A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 16990
 16991 				; optimize FAIL ('WAITFORKEY', loanshark.pas), line = 224
 16992
 16993 6B9D 20 2E 21			jsr WAITFORKEY
 16994
 16995 				; optimize OK (loanshark.pas), line = 225
 16996
 16997 6BA0 AC 1A E4			ldy CURRENTPLAYER
 16998 6BA3 B9 80 E0			lda adr.PLNEWPOINTS,y
 16999 6BA6 18 69 02			add #$02
 17000 6BA9 99 80 E0			sta adr.PLNEWPOINTS,y
 17001
 17002 				; optimize OK (loanshark.pas), line = 226
 17003
 17004 6BAC AD 82 BA			lda LOAN
 17005 6BAF 8D 35 B9			sta ADDMONEY.AMOUNT
 17006 6BB2 AD 83 BA			lda LOAN+1
 17007 6BB5 8D 36 B9			sta ADDMONEY.AMOUNT+1
 17008 6BB8 20 E3 2A			jsr ADDMONEY
 17009 6BBB			l_40B6
 17010 6BBB			@exit
 17011
 17012 				; ------------------------------------------------------------
 17013
 17014 = BA7C			CHOICE	= DATAORIGIN+$1607
 17015 = BA7E			RESULT	= DATAORIGIN+$1609
 17016 = BA7F			R	= DATAORIGIN+$160A
 17017 = BA80			K	= DATAORIGIN+$160B
 17018 = BA81			ALLPAID	= DATAORIGIN+$160C
 17019 = BA82			LOAN	= DATAORIGIN+$160D
 17020 = BA84			P	= DATAORIGIN+$160F
 17021 = BA86			LN	= DATAORIGIN+$1611
 17022
 17023 = BA7C			@VarData	= CHOICE
 17024 = 000A			@VarDataSize	= 10
 17025
 17026 6BBB 60				rts						; ret
 17027 				.endl
 17028
 17029 6BBC			.local	POLICECHOICES					; FUNCTION
 17030
 17031 				; optimize OK (police.pas), line = 8
 17032
 17033 6BBC A9 05			lda #$05
 17034 6BBE 8D 89 BA			sta RESULT
 17035
 17036 				; optimize OK (police.pas), line = 9
 17037
 17038 6BC1 AC 88 BA 84 81		mvy CHOICE+1 :bp+1
 17039 6BC6 AC 87 BA			ldy CHOICE
 17040 6BC9 B1 80			lda (:bp),y
 17041 6BCB C9 01			cmp #$01
 17042 6BCD D0 0B			jne l_41A0
 17043
 17044 				; optimize FAIL ('GOTOCOURT', police.pas), line = 11
 17045
 17046 6BCF 20 71 30			jsr GOTOCOURT
 17047
 17048 				; optimize OK (police.pas), line = 12
 17049
 17050 6BD2 A9 11			lda #$11
 17051 6BD4 8D 89 BA			sta RESULT
 17052 6BD7 4C 32 6E			jmp @exit
 17053 6BDA			l_41A0
 17054
 17055 				; optimize OK (police.pas), line = 16
 17056
 17057 6BDA AC 88 BA 84 81		mvy CHOICE+1 :bp+1
 17058 6BDF AC 87 BA			ldy CHOICE
 17059 6BE2 B1 80			lda (:bp),y
 17060 6BE4 C9 02			cmp #$02
 17061 6BE6 F0 03 4C 94 6C		jne l_41BA
 17062
 17063 				; optimize FAIL ('SHOWLOCATIONHEADER', police.pas), line = 18
 17064
 17065 6BEB 20 1D 26			jsr SHOWLOCATIONHEADER
 17066
 17067 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 19
 17068
 17069 6BEE E8				inx
 17070 6BEF AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 17071 6BF4 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 17072 6BF9 20 80 21			jsr CRT_WRITELN
 17073
 17074 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', police.pas), line = 20
 17075
 17076 6BFC E8				inx
 17077 6BFD AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 17078 6C02 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 17079 6C07 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17080
 17081 				; optimize OK (police.pas), line = 21
 17082
 17083 6C0A A9 00			lda #$00
 17084 6C0C 8D 91 B6			sta READVALUE.MINVALUE
 17085 6C0F 8D 92 B6			sta READVALUE.MINVALUE+1
 17086 6C12 A9 64			lda #$64
 17087 6C14 8D 93 B6			sta READVALUE.MAXVALUE
 17088 6C17 A9 00			lda #$00
 17089 6C19 8D 94 B6			sta READVALUE.MAXVALUE+1
 17090 6C1C 20 EE 21			jsr READVALUE
 17091 6C1F AD 95 B6			lda READVALUE.RESULT
 17092 6C22 8D 8B BA			sta M
 17093
 17094 				; optimize OK (police.pas), line = 22
 17095
 17096 6C25 D0 03			jne l_41DA
 17097 6C27 4C 32 6E			jmp @exit
 17098 6C2A			l_41DA
 17099
 17100 				; optimize OK (police.pas), line = 23
 17101
 17102 6C2A A9 E8			lda #$E8
 17103 6C2C 85 8C			sta :ecx
 17104 6C2E A9 03			lda #$03
 17105 6C30 85 8D			sta :ecx+1
 17106 6C32 AD 8B BA			lda M
 17107 6C35 85 84			sta :eax
 17108 6C37 A9 00			lda #$00
 17109 6C39 85 85			sta :eax+1
 17110 					.ifdef fmulinit
 17111 					fmulu_16
 17112 					els
 17113 6C3B 20 63 12			imulCX_AL
 17114 					eif
 17115 6C3E A5 84			lda :eax
 17116 6C40 8D 40 B9			sta PAYMONEY.PRICE
 17117 6C43 A5 85			lda :eax+1
 17118 6C45 8D 41 B9			sta PAYMONEY.PRICE+1
 17119 6C48 20 98 2D			jsr PAYMONEY
 17120 6C4B AD 42 B9			lda PAYMONEY.RESULT
 17121 6C4E D0 03			jne l_41F4
 17122 6C50 4C 32 6E			jmp @exit
 17123 6C53			l_41F4
 17124
 17125 				; optimize OK (police.pas), line = 26
 17126
 17127 6C53 AC 1A E4			ldy CURRENTPLAYER
 17128 6C56 B9 5C E0			lda adr.PLBRIBE,y
 17129 6C59 18 6D 8B BA			add M
 17130 6C5D 18 69 01			add #$01
 17131 6C60 99 5C E0			sta adr.PLBRIBE,y
 17132
 17133 				; optimize OK (police.pas), line = 27
 17134
 17135 6C63 B9 80 E0			lda adr.PLNEWPOINTS,y
 17136 6C66 18 69 02			add #$02
 17137 6C69 99 80 E0			sta adr.PLNEWPOINTS,y
 17138
 17139 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 29
 17140
 17141 6C6C 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17142
 17143 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 30
 17144
 17145 6C6F 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17146
 17147 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 31
 17148
 17149 6C72 E8				inx
 17150 6C73 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 17151 6C78 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 17152 6C7D 20 80 21			jsr CRT_WRITELN
 17153
 17154 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 32
 17155
 17156 6C80 E8				inx
 17157 6C81 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 17158 6C86 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 17159 6C8B 20 80 21			jsr CRT_WRITELN
 17160
 17161 				; optimize FAIL ('WAITFORKEY', police.pas), line = 33
 17162
 17163 6C8E 20 2E 21			jsr WAITFORKEY
 17164 6C91 4C 32 6E			jmp @exit
 17165 6C94			l_41BA
 17166
 17167 				; optimize OK (police.pas), line = 37
 17168
 17169 6C94 AC 88 BA 84 81		mvy CHOICE+1 :bp+1
 17170 6C99 AC 87 BA			ldy CHOICE
 17171 6C9C B1 80			lda (:bp),y
 17172 6C9E C9 03			cmp #$03
 17173 6CA0 F0 03 4C 32 6E		jne l_423A
 17174
 17175 				; optimize FAIL ('SHOWLOCATIONHEADER', police.pas), line = 39
 17176
 17177 6CA5 20 1D 26			jsr SHOWLOCATIONHEADER
 17178
 17179 				; optimize FAIL ('CRT_WRITELN2', police.pas), line = 41
 17180
 17181 6CA8 E8				inx
 17182 6CA9 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 17183 6CAE AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 17184 6CB3 20 4C 21			jsr CRT_WRITELN2
 17185
 17186 				; optimize OK (police.pas), line = 42
 17187
 17188 6CB6 A9 00			lda #$00
 17189 6CB8 8D 8A BA			sta R
 17190
 17191 				; optimize OK (police.pas), line = 43
 17192
 17193 6CBB 8D 8B BA			sta M
 17194 6CBE AC 00 E0			ldy NPLAYERS
 17195 6CC1 88				dey
 17196 6CC2 8C C6 6C			sty @FORTMP_424F_0
 17197
 17198 6CC5			l_4252
 17199 				; --- ForToDoCondition
 17200 6CC5 A9 00			lda @FORTMP_424F_0::#$00
 17201 6CC7 CD 8B BA			cmp M
 17202 6CCA 90 59			jcc l_4260
 17203
 17204 				; optimize OK (police.pas), line = 45
 17205
 17206 6CCC AC 8B BA			ldy M
 17207 6CCF B9 74 E0			lda adr.PLPRISON,y
 17208 6CD2 F0 4C			jeq l_4275
 17209
 17210 				; optimize OK (police.pas), line = 46
 17211
 17212 6CD4 A9 00			lda #$00
 17213 6CD6 20 88 1C			jsr B_CRT.CRT_WRITE_054D
 17214
 17215 				; optimize OK (police.pas), line = 47
 17216
 17217 6CD9 AD 8B BA			lda M
 17218 6CDC 18 69 01			add #$01
 17219 6CDF 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 17220 6CE2 A9 00			lda #$00
 17221 6CE4 69 00			adc #$00
 17222 6CE6 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 17223 6CE9 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 17224
 17225 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', police.pas), line = 48
 17226
 17227 6CEC E8				inx
 17228 6CED A9 A1 95 94			mva #$A1 :STACKORIGIN,x
 17229 6CF1 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 17230 6CF5 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17231
 17232 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 49
 17233
 17234 6CF8 E8				inx
 17235 6CF9 AD 8B BA 95 94		mva M :STACKORIGIN,x
 17236 6CFE E8				inx
 17237 6CFF A9 03 95 94			mva #$03 :STACKORIGIN,x
 17238 6D03 20 87 0F			jsr shlEAX_CL.BYTE
 17239 6D06 CA				dex
 17240 6D07 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 17241 6D09 16 94			asl :STACKORIGIN,x
 17242 6D0B 2A				rol @
 17243 6D0C 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 17244 6D0E B4 94			ldy :STACKORIGIN,x
 17245 6D10 B9 E0 B0			lda adr.GANGSTERNAMES,y
 17246 6D13 95 94			sta :STACKORIGIN,x
 17247 6D15 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 17248 6D18 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 17249 6D1A 20 80 21			jsr CRT_WRITELN
 17250
 17251 				; optimize OK (police.pas), line = 50
 17252
 17253 6D1D EE 8A BA			inc R
 17254 6D20			l_4275
 17255
 17256 				; --- ForToDoEpilog
 17257 6D20 EE 8B BA			inc M
 17258 6D23 D0 A0			jne l_4252
 17259 6D25			l_4260
 17260
 17261 				; optimize OK (police.pas), line = 53
 17262
 17263 6D25 AD 8A BA			lda R
 17264 6D28 D0 14			jne l_42AF
 17265
 17266 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 54
 17267
 17268 6D2A E8				inx
 17269 6D2B AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 17270 6D30 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 17271 6D35 20 80 21			jsr CRT_WRITELN
 17272
 17273 				; optimize FAIL ('WAITFORKEY', police.pas), line = 55
 17274
 17275 6D38 20 2E 21			jsr WAITFORKEY
 17276 6D3B 4C 32 6E			jmp @exit
 17277 6D3E			l_42AF
 17278
 17279 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 59
 17280
 17281 6D3E 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17282
 17283 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 60
 17284
 17285 6D41 E8				inx
 17286 6D42 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 17287 6D47 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 17288 6D4C 20 80 21			jsr CRT_WRITELN
 17289
 17290 				; --- RepeatUntilProlog
 17291 6D4F			l_42BB
 17292
 17293 				; optimize OK (police.pas), line = 62
 17294
 17295 6D4F A9 01			lda #$01
 17296 6D51 8D 9B B7			sta READVALUENOZERO.MINVALUE
 17297 6D54 A9 00			lda #$00
 17298 6D56 8D 9C B7			sta READVALUENOZERO.MINVALUE+1
 17299 6D59 AD 00 E0			lda NPLAYERS
 17300 6D5C 8D 9D B7			sta READVALUENOZERO.MAXVALUE
 17301 6D5F A9 00			lda #$00
 17302 6D61 8D 9E B7			sta READVALUENOZERO.MAXVALUE+1
 17303 6D64 20 E7 22			jsr READVALUENOZERO
 17304 6D67 AD 9F B7			lda READVALUENOZERO.RESULT
 17305 6D6A 8D 8A BA			sta R
 17306
 17307 				; optimize OK (police.pas), line = 63
 17308
 17309 6D6D A8				tay
 17310 6D6E B9 73 E0			lda adr.PLPRISON-$01,y
 17311 6D71 F0 DC			jeq l_42BB
 17312
 17313 				; optimize OK (police.pas), line = 64
 17314
 17315 6D73 CE 8A BA			dec R
 17316
 17317 				; optimize OK (police.pas), line = 65
 17318
 17319 6D76 A9 05			lda #$05
 17320 6D78 20 CB 15			jsr SYSTEM.RANDOM_02E9
 17321 6D7B E8				inx
 17322 6D7C AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 17323 6D81 E8				inx
 17324 6D82 A9 09 95 94			mva #$09 :STACKORIGIN,x
 17325 6D86 20 87 0F			jsr shlEAX_CL.BYTE
 17326 6D89 A9 B8 95 94			mva #$B8 :STACKORIGIN,x
 17327 6D8D A9 0B 95 A4			mva #$0B :STACKORIGIN+STACKWIDTH,x
 17328 6D91 A9 00 95 B4			mva #$00 :STACKORIGIN+STACKWIDTH*2,x
 17329 6D95 95 C4			sta :STACKORIGIN+STACKWIDTH*3,x
 17330 6D97 20 70 0F			jsr addAX_CX
 17331 6D9A CA				dex
 17332 6D9B B5 94			lda :STACKORIGIN,x
 17333 6D9D 8D 8C BA			sta P
 17334 6DA0 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 17335 6DA2 8D 8D BA			sta P+1
 17336 6DA5 CA				dex
 17337
 17338 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 66
 17339
 17340 6DA6 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17341
 17342 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 67
 17343
 17344 6DA9 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17345
 17346 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', police.pas), line = 68
 17347
 17348 6DAC E8				inx
 17349 6DAD AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 17350 6DB2 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 17351 6DB7 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17352
 17353 				; optimize OK (police.pas), line = 69
 17354
 17355 6DBA AD 8C BA			lda P
 17356 6DBD 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 17357 6DC0 AD 8D BA			lda P+1
 17358 6DC3 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 17359 6DC6 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 17360
 17361 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 70
 17362
 17363 6DC9 E8				inx
 17364 6DCA AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 17365 6DCF AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 17366 6DD4 20 80 21			jsr CRT_WRITELN
 17367
 17368 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 71
 17369
 17370 6DD7 E8				inx
 17371 6DD8 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 17372 6DDD AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 17373 6DE2 20 80 21			jsr CRT_WRITELN
 17374
 17375 				; optimize FAIL ('WAITFORKEY', police.pas), line = 72
 17376
 17377 6DE5 20 2E 21			jsr WAITFORKEY
 17378
 17379 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 73
 17380
 17381 6DE8 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17382
 17383 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', police.pas), line = 74
 17384
 17385 6DEB 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17386
 17387 				; optimize OK (police.pas), line = 75
 17388
 17389 6DEE AD 8C BA			lda P
 17390 6DF1 8D 40 B9			sta PAYMONEY.PRICE
 17391 6DF4 AD 8D BA			lda P+1
 17392 6DF7 8D 41 B9			sta PAYMONEY.PRICE+1
 17393 6DFA 20 98 2D			jsr PAYMONEY
 17394 6DFD AD 42 B9			lda PAYMONEY.RESULT
 17395 6E00 D0 03			jne l_4311
 17396 6E02 4C 32 6E			jmp @exit
 17397 6E05			l_4311
 17398
 17399 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 76
 17400
 17401 6E05 E8				inx
 17402 6E06 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 17403 6E0B AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 17404 6E10 20 80 21			jsr CRT_WRITELN
 17405
 17406 				; optimize FAIL ('CRT_WRITELN', police.pas), line = 77
 17407
 17408 6E13 E8				inx
 17409 6E14 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 17410 6E19 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 17411 6E1E 20 80 21			jsr CRT_WRITELN
 17412
 17413 				; optimize FAIL ('WAITFORKEY', police.pas), line = 78
 17414
 17415 6E21 20 2E 21			jsr WAITFORKEY
 17416
 17417 				; optimize OK (police.pas), line = 79
 17418
 17419 6E24 AC 8A BA			ldy R
 17420 6E27 AD 1A E4			lda CURRENTPLAYER
 17421 6E2A 99 8C E0			sta adr.PLFREED,y
 17422
 17423 				; optimize OK (police.pas), line = 80
 17424
 17425 6E2D A9 00			lda #$00
 17426 6E2F 99 74 E0			sta adr.PLPRISON,y
 17427 6E32			l_423A
 17428 6E32			@exit
 17429
 17430 				; ------------------------------------------------------------
 17431
 17432 = BA87			CHOICE	= DATAORIGIN+$1612
 17433 = BA89			RESULT	= DATAORIGIN+$1614
 17434 = BA8A			R	= DATAORIGIN+$1615
 17435 = BA8B			M	= DATAORIGIN+$1616
 17436 = BA8C			P	= DATAORIGIN+$1617
 17437
 17438 = BA87			@VarData	= CHOICE
 17439 = 0006			@VarDataSize	= 6
 17440
 17441 6E32 60				rts						; ret
 17442 				.endl
 17443
 17444 6E33			.local	PUBCHOICES					; FUNCTION
 17445
 17446 				; optimize OK (pub.pas), line = 13
 17447
 17448 6E33 A9 07			lda #$07
 17449 6E35 8D 91 BA			sta RESULT
 17450
 17451 				; optimize FAIL ('SHOWLOCATIONHEADER', pub.pas), line = 14
 17452
 17453 6E38 20 1D 26			jsr SHOWLOCATIONHEADER
 17454
 17455 				; optimize OK (pub.pas), line = 17
 17456
 17457 6E3B AC 90 BA 84 81		mvy CHOICE+1 :bp+1
 17458 6E40 AC 8F BA			ldy CHOICE
 17459 6E43 B1 80			lda (:bp),y
 17460 6E45 C9 01			cmp #$01
 17461 6E47 F0 03 4C E3 70		jne l_4348
 17462
 17463 				; optimize OK (pub.pas), line = 19
 17464
 17465 6E4C AD AF B8			lda CURRENTSUBLOCATION
 17466 6E4F C9 02			cmp #$02
 17467 6E51 B0 03 4C 7A 6F		jcc l_435B
 17468
 17469 				; optimize OK (pub.pas), line = 21
 17470
 17471 6E56 A9 02			lda #$02
 17472 6E58 20 CB 15			jsr SYSTEM.RANDOM_02E9
 17473 6E5B E8				inx
 17474 6E5C A0 01			ldy #1
 17475 6E5E AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 17476 6E61 F0 01			beq @+
 17477 6E63 88				dey
 17478 				@
 17479 6E64 94 94			sty :STACKORIGIN,x
 17480 6E66 E8				inx
 17481 6E67 AC 1A E4			ldy CURRENTPLAYER
 17482 6E6A B9 24 E0			lda adr.PLALCOHOL,y
 17483 6E6D 95 94			sta :STACKORIGIN,x
 17484 6E6F E8				inx
 17485 6E70 A0 01			ldy #1
 17486 6E72 B5 93			lda :STACKORIGIN-1,x
 17487 6E74 D0 01			bne @+
 17488 6E76 88				dey
 17489 				@
 17490 6E77 CA				dex
 17491 6E78 94 94			sty :STACKORIGIN,x
 17492 6E7A CA				dex
 17493 6E7B CA				dex
 17494 6E7C B5 95			lda :STACKORIGIN+1,x
 17495 6E7E 35 96			and :STACKORIGIN+2,x
 17496 6E80 D0 03 4C 66 6F		jeq l_437C
 17497
 17498 				; optimize OK (pub.pas), line = 23
 17499
 17500 6E85 A9 14			lda #$14
 17501 6E87 20 CB 15			jsr SYSTEM.RANDOM_02E9
 17502 6E8A E8				inx
 17503 6E8B AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 17504 6E8E 18 69 0A			add #$0A
 17505 6E91 8D 9C BA			sta P
 17506 6E94 A9 00			lda #$00
 17507 6E96 69 00			adc #$00
 17508 6E98 8D 9D BA			sta P+1
 17509
 17510 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 24
 17511
 17512 6E9B AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 17513 6EA0 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 17514 6EA5 20 80 21			jsr CRT_WRITELN
 17515
 17516 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 25
 17517
 17518 6EA8 E8				inx
 17519 6EA9 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 17520 6EAE AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 17521 6EB3 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17522
 17523 				; optimize OK (pub.pas), line = 26
 17524
 17525 6EB6 AD 9C BA			lda P
 17526 6EB9 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 17527 6EBC AD 9D BA			lda P+1
 17528 6EBF 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 17529 6EC2 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 17530
 17531 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 27
 17532
 17533 6EC5 E8				inx
 17534 6EC6 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 17535 6ECB AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 17536 6ED0 20 80 21			jsr CRT_WRITELN
 17537
 17538 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 29
 17539
 17540 6ED3 E8				inx
 17541 6ED4 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 17542 6ED9 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 17543 6EDE 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17544
 17545 				; optimize OK (pub.pas), line = 30
 17546
 17547 6EE1 AC 1A E4			ldy CURRENTPLAYER
 17548 6EE4 B9 24 E0			lda adr.PLALCOHOL,y
 17549 6EE7 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 17550
 17551 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 31
 17552
 17553 6EEA E8				inx
 17554 6EEB A9 3A 95 94			mva #$3A :STACKORIGIN,x
 17555 6EEF A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 17556 6EF3 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17557
 17558 				; optimize OK (pub.pas), line = 32
 17559
 17560 6EF6 AC 1A E4			ldy CURRENTPLAYER
 17561 6EF9 B9 24 E0			lda adr.PLALCOHOL,y
 17562 6EFC 8D 93 B6			sta READVALUE.MAXVALUE
 17563 6EFF A9 00			lda #$00
 17564 6F01 8D 91 B6			sta READVALUE.MINVALUE
 17565 6F04 8D 92 B6			sta READVALUE.MINVALUE+1
 17566 6F07 8D 94 B6			sta READVALUE.MAXVALUE+1
 17567 6F0A 20 EE 21			jsr READVALUE
 17568 6F0D AD 95 B6			lda READVALUE.RESULT
 17569 6F10 8D 9E BA			sta AL
 17570 6F13 AD 96 B6			lda READVALUE.RESULT+1
 17571 6F16 8D 9F BA			sta AL+1
 17572
 17573 				; optimize OK (pub.pas), line = 33
 17574
 17575 6F19 0D 9E BA			ora AL
 17576 6F1C D0 03			jne l_43BA
 17577 6F1E 4C BC 77			jmp @exit
 17578 6F21			l_43BA
 17579
 17580 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', pub.pas), line = 35
 17581
 17582 6F21 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17583
 17584 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 36
 17585
 17586 6F24 E8				inx
 17587 6F25 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 17588 6F2A AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 17589 6F2F 20 80 21			jsr CRT_WRITELN
 17590
 17591 				; optimize OK (pub.pas), line = 37
 17592
 17593 6F32 AD 9C BA			lda P
 17594 6F35 85 8C			sta :ecx
 17595 6F37 AD 9D BA			lda P+1
 17596 6F3A 85 8D			sta :ecx+1
 17597 6F3C AD 9E BA			lda AL
 17598 6F3F 85 84			sta :eax
 17599 6F41 AD 9F BA			lda AL+1
 17600 6F44 85 85			sta :eax+1
 17601 					.ifdef fmulinit
 17602 					fmulu_16
 17603 					els
 17604 6F46 20 23 12			imulCX
 17605 					eif
 17606 6F49 A5 84			lda :eax
 17607 6F4B 8D 35 B9			sta ADDMONEY.AMOUNT
 17608 6F4E A5 85			lda :eax+1
 17609 6F50 8D 36 B9			sta ADDMONEY.AMOUNT+1
 17610 6F53 20 E3 2A			jsr ADDMONEY
 17611
 17612 				; optimize OK (pub.pas), line = 38
 17613
 17614 6F56 AC 1A E4			ldy CURRENTPLAYER
 17615 6F59 B9 24 E0			lda adr.PLALCOHOL,y
 17616 6F5C 38 ED 9E BA			sub AL
 17617 6F60 99 24 E0			sta adr.PLALCOHOL,y
 17618 6F63 4C 74 6F			jmp l_43E3
 17619 6F66			l_437C
 17620
 17621 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 42
 17622
 17623 6F66 E8				inx
 17624 6F67 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 17625 6F6C AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 17626 6F71 20 80 21			jsr CRT_WRITELN
 17627 6F74			l_43E3
 17628
 17629 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 44
 17630
 17631 6F74 20 2E 21			jsr WAITFORKEY
 17632 6F77 4C BC 77			jmp @exit
 17633 6F7A			l_435B
 17634
 17635 				; optimize OK (pub.pas), line = 47
 17636
 17637 6F7A A9 C8			lda #$C8
 17638 6F7C 20 CB 15			jsr SYSTEM.RANDOM_02E9
 17639 6F7F E8				inx
 17640 6F80 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 17641 6F83 18 69 64			add #$64
 17642 6F86 8D 9E BA			sta AL
 17643 6F89 A9 00			lda #$00
 17644 6F8B 69 00			adc #$00
 17645 6F8D 8D 9F BA			sta AL+1
 17646 6F90 CA				dex
 17647
 17648 				; optimize OK (pub.pas), line = 48
 17649
 17650 6F91 A9 0A			lda #$0A
 17651 6F93 20 CB 15			jsr SYSTEM.RANDOM_02E9
 17652 6F96 E8				inx
 17653 6F97 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 17654 6F9A 18 69 05			add #$05
 17655 6F9D 8D 9C BA			sta P
 17656 6FA0 A9 00			lda #$00
 17657 6FA2 69 00			adc #$00
 17658 6FA4 8D 9D BA			sta P+1
 17659
 17660 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 49
 17661
 17662 6FA7 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 17663 6FAC AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 17664 6FB1 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17665
 17666 				; optimize OK (pub.pas), line = 50
 17667
 17668 6FB4 AD 9C BA			lda P
 17669 6FB7 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 17670 6FBA AD 9D BA			lda P+1
 17671 6FBD 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 17672 6FC0 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 17673
 17674 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 51
 17675
 17676 6FC3 E8				inx
 17677 6FC4 A9 1E 95 94			mva #$1E :STACKORIGIN,x
 17678 6FC8 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 17679 6FCC 20 80 21			jsr CRT_WRITELN
 17680
 17681 				; optimize OK (pub.pas), line = 54
 17682
 17683 6FCF AC 1A E4			ldy CURRENTPLAYER
 17684 6FD2 B9 2C E0			lda adr.PLCAR,y
 17685 6FD5 A8				tay
 17686 6FD6 B9 06 E7			lda adr.CARCARGO,y
 17687 6FD9 AC 1A E4			ldy CURRENTPLAYER
 17688 6FDC 38 F9 24 E0			sub adr.PLALCOHOL,y
 17689 6FE0 8D A0 BA			sta W
 17690 6FE3 A9 00			lda #$00
 17691 6FE5 E9 00			sbc #$00
 17692 6FE7 8D A1 BA			sta W+1
 17693
 17694 				; optimize OK (pub.pas), line = 55
 17695
 17696 6FEA 30 05			bmi @+
 17697 6FEC 0D A0 BA			ora W
 17698 6FEF D0 25			jne l_4429
 17699 				@
 17700
 17701 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', pub.pas), line = 56
 17702
 17703 6FF1 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 17704
 17705 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 57
 17706
 17707 6FF4 E8				inx
 17708 6FF5 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 17709 6FFA AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 17710 6FFF 20 80 21			jsr CRT_WRITELN
 17711
 17712 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 58
 17713
 17714 7002 E8				inx
 17715 7003 AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 17716 7008 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 17717 700D 20 80 21			jsr CRT_WRITELN
 17718
 17719 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 59
 17720
 17721 7010 20 2E 21			jsr WAITFORKEY
 17722 7013 4C BC 77			jmp @exit
 17723 7016			l_4429
 17724
 17725 				; optimize OK (pub.pas), line = 62
 17726
 17727 7016 AD A0 BA			lda W
 17728 7019 CD 9E BA			cmp AL
 17729 701C AD A1 BA			lda W+1
 17730 701F ED 9F BA			sbc AL+1
 17731 7022 50 02			svc
 17732 7024 49 80			eor #$80
 17733 7026 10 0C			jpl l_4446
 17734 7028 AD A0 BA			lda W
 17735 702B 8D 9E BA			sta AL
 17736 702E AD A1 BA			lda W+1
 17737 7031 8D 9F BA			sta AL+1
 17738 7034			l_4446
 17739
 17740 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 63
 17741
 17742 7034 E8				inx
 17743 7035 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 17744 703A AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 17745 703F 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17746
 17747 				; optimize OK (pub.pas), line = 64
 17748
 17749 7042 AD 9E BA			lda AL
 17750 7045 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 17751 7048 A0 00			ldy #$00
 17752 704A AD 9F BA			lda AL+1
 17753 704D 10 01			spl
 17754 704F 88				dey
 17755 7050 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 17756 7053 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 17757 7056 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 17758 7059 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 17759
 17760 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 65
 17761
 17762 705C E8				inx
 17763 705D A9 3A 95 94			mva #$3A :STACKORIGIN,x
 17764 7061 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 17765 7065 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17766
 17767 				; optimize OK (pub.pas), line = 66
 17768
 17769 7068 A9 00			lda #$00
 17770 706A 8D 91 B6			sta READVALUE.MINVALUE
 17771 706D 8D 92 B6			sta READVALUE.MINVALUE+1
 17772 7070 AD 9E BA			lda AL
 17773 7073 8D 93 B6			sta READVALUE.MAXVALUE
 17774 7076 AD 9F BA			lda AL+1
 17775 7079 8D 94 B6			sta READVALUE.MAXVALUE+1
 17776 707C 20 EE 21			jsr READVALUE
 17777 707F AD 95 B6			lda READVALUE.RESULT
 17778 7082 8D A0 BA			sta W
 17779 7085 AD 96 B6			lda READVALUE.RESULT+1
 17780 7088 8D A1 BA			sta W+1
 17781
 17782 				; optimize OK (pub.pas), line = 67
 17783
 17784 708B 30 05			bmi @+
 17785 708D 0D A0 BA			ora W
 17786 7090 D0 03			jne l_446E
 17787 				@
 17788 7092 4C BC 77			jmp @exit
 17789 7095			l_446E
 17790
 17791 				; optimize OK (pub.pas), line = 68
 17792
 17793 7095 AD 9C BA			lda P
 17794 7098 85 8C			sta :ecx
 17795 709A AD 9D BA			lda P+1
 17796 709D 85 8D			sta :ecx+1
 17797 709F AD A0 BA			lda W
 17798 70A2 85 84			sta :eax
 17799 70A4 AD A1 BA			lda W+1
 17800 70A7 85 85			sta :eax+1
 17801 					.ifdef fmulinit
 17802 					fmulu_16
 17803 					els
 17804 70A9 20 23 12			imulCX
 17805 					eif
 17806 70AC A5 84			lda :eax
 17807 70AE 8D 9C BA			sta P
 17808 70B1 A5 85			lda :eax+1
 17809 70B3 8D 9D BA			sta P+1
 17810
 17811 				; optimize OK (pub.pas), line = 69
 17812
 17813 70B6 AD 9C BA			lda P
 17814 70B9 8D 40 B9			sta PAYMONEY.PRICE
 17815 70BC AD 9D BA			lda P+1
 17816 70BF 8D 41 B9			sta PAYMONEY.PRICE+1
 17817 70C2 20 98 2D			jsr PAYMONEY
 17818 70C5 AD 42 B9			lda PAYMONEY.RESULT
 17819 70C8 D0 03			jne l_448D
 17820 70CA 4C BC 77			jmp @exit
 17821 70CD			l_448D
 17822
 17823 				; optimize OK (pub.pas), line = 70
 17824
 17825 70CD AC 1A E4			ldy CURRENTPLAYER
 17826 70D0 B9 24 E0			lda adr.PLALCOHOL,y
 17827 70D3 18 6D A0 BA			add W
 17828 70D7 99 24 E0			sta adr.PLALCOHOL,y
 17829
 17830 				; optimize OK (pub.pas), line = 71
 17831
 17832 70DA B9 80 E0			lda adr.PLNEWPOINTS,y
 17833 70DD 18 69 02			add #$02
 17834 70E0 99 80 E0			sta adr.PLNEWPOINTS,y
 17835 70E3			l_4348
 17836
 17837 				; optimize OK (pub.pas), line = 75
 17838
 17839 70E3 AC 90 BA 84 81		mvy CHOICE+1 :bp+1
 17840 70E8 AC 8F BA			ldy CHOICE
 17841 70EB B1 80			lda (:bp),y
 17842 70ED C9 02			cmp #$02
 17843 70EF F0 03 4C 2E 73		jne l_44C5
 17844
 17845 				; optimize FAIL ('SHOWLOCATIONHEADER', pub.pas), line = 77
 17846
 17847 70F4 20 1D 26			jsr SHOWLOCATIONHEADER
 17848
 17849 				; optimize OK (pub.pas), line = 79
 17850
 17851 70F7 AC 1A E4			ldy CURRENTPLAYER
 17852 70FA B9 78 E0			lda adr.PLRANK,y
 17853 70FD C9 05			cmp #$05
 17854 70FF B0 46			jcs l_44DC
 17855
 17856 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 81
 17857
 17858 7101 E8				inx
 17859 7102 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 17860 7107 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 17861 710C 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17862
 17863 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 82
 17864
 17865 710F E8				inx
 17866 7110 AC 1A E4			ldy CURRENTPLAYER
 17867 7113 B9 78 E0			lda adr.PLRANK,y
 17868 7116 0A				asl @
 17869 7117 A8				tay
 17870 7118 B9 E0 AF			lda adr.RANKNAMES,y
 17871 711B 95 94			sta :STACKORIGIN,x
 17872 711D B9 E1 AF			lda adr.RANKNAMES+1,y
 17873 7120 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 17874 7122 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 17875
 17876 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 83
 17877
 17878 7125 E8				inx
 17879 7126 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 17880 712B AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 17881 7130 20 80 21			jsr CRT_WRITELN
 17882
 17883 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 84
 17884
 17885 7133 E8				inx
 17886 7134 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 17887 7139 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 17888 713E 20 80 21			jsr CRT_WRITELN
 17889
 17890 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 85
 17891
 17892 7141 20 2E 21			jsr WAITFORKEY
 17893 7144 4C BC 77			jmp @exit
 17894 7147			l_44DC
 17895
 17896 				; optimize OK (pub.pas), line = 91
 17897
 17898 7147 A9 00			lda #$00
 17899 7149 A8				tay
 17900
 17901 714A			l_44FB
 17902 				; --- ForToDoCondition
 17903 714A C0 04			cpy #$04
 17904 714C B0 10			jcs l_4509
 17905
 17906 				; optimize OK (pub.pas), line = 92
 17907
 17908 714E B9 1C E4			lda adr.PLRENT,y
 17909 7151 CD 1A E4			cmp CURRENTPLAYER
 17910 7154 D0 05			jne l_4520
 17911 7156 A9 01			lda #$01
 17912 7158 8D 9B BA			sta HASHIDEOUT
 17913 715B			l_4520
 17914
 17915 				; --- ForToDoEpilog
 17916 715B C8				iny
 17917 715C D0 EC			jne l_44FB
 17918 715E			l_4509
 17919 715E 8C 92 BA			sty R
 17920
 17921 				; optimize OK (pub.pas), line = 94
 17922
 17923 7161 AD 9B BA			lda HASHIDEOUT
 17924 7164 D0 22			jne l_453E
 17925
 17926 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 96
 17927
 17928 7166 E8				inx
 17929 7167 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 17930 716C AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 17931 7171 20 80 21			jsr CRT_WRITELN
 17932
 17933 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 97
 17934
 17935 7174 E8				inx
 17936 7175 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 17937 717A AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 17938 717F 20 80 21			jsr CRT_WRITELN
 17939
 17940 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 98
 17941
 17942 7182 20 2E 21			jsr WAITFORKEY
 17943 7185 4C BC 77			jmp @exit
 17944 7188			l_453E
 17945
 17946 				; optimize OK (pub.pas), line = 102
 17947
 17948 7188 AC 1A E4			ldy CURRENTPLAYER
 17949 718B B9 41 E4			lda adr.PLNGANGSTERS,y
 17950 718E C9 08			cmp #$08
 17951 7190 90 22			jcc l_455D
 17952
 17953 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 104
 17954
 17955 7192 E8				inx
 17956 7193 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 17957 7198 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 17958 719D 20 80 21			jsr CRT_WRITELN
 17959
 17960 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 105
 17961
 17962 71A0 E8				inx
 17963 71A1 AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 17964 71A6 AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 17965 71AB 20 80 21			jsr CRT_WRITELN
 17966
 17967 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 106
 17968
 17969 71AE 20 2E 21			jsr WAITFORKEY
 17970 71B1 4C BC 77			jmp @exit
 17971 71B4			l_455D
 17972
 17973 				; optimize OK (pub.pas), line = 114
 17974
 17975 71B4 A9 63			lda #$63
 17976 71B6 8D 97 BA			sta G
 17977
 17978 				; optimize OK (pub.pas), line = 115
 17979
 17980 71B9 A9 00			lda #$00
 17981 71BB 8D 98 BA			sta K
 17982
 17983 71BE			l_4574
 17984 				; --- ForToDoCondition
 17985 71BE AD 98 BA			lda K
 17986 71C1 C9 05			cmp #$05
 17987 71C3 B0 2A			jcs l_4582
 17988
 17989 				; optimize OK (pub.pas), line = 117
 17990
 17991 71C5 A9 2A			lda #$2A
 17992 71C7 20 CB 15			jsr SYSTEM.RANDOM_02E9
 17993 71CA AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 17994 71CD 8D 92 BA			sta R
 17995
 17996 				; optimize OK (pub.pas), line = 118
 17997
 17998 71D0 C9 20			cmp #$20
 17999 71D2 90 03			jcc l_4599
 18000 71D4 4C EF 71			jmp b_4574					; break
 18001 71D7			l_4599
 18002
 18003 				; optimize OK (pub.pas), line = 119
 18004
 18005 71D7 AC 92 BA			ldy R
 18006 71DA B9 21 E4			lda adr.PLGANGSTERS,y
 18007 71DD C9 63			cmp #$63
 18008 71DF D0 09			jne l_45B1
 18009
 18010 				; optimize OK (pub.pas), line = 120
 18011
 18012 71E1 AD 92 BA			lda R
 18013 71E4 8D 97 BA			sta G
 18014 71E7 4C EF 71			jmp b_4574					; break
 18015 71EA			l_45B1
 18016
 18017 				; --- ForToDoEpilog
 18018 71EA EE 98 BA			inc K
 18019 71ED D0 CF			jne l_4574
 18020 71EF			l_4582
 18021 71EF			b_4574
 18022
 18023 				; optimize OK (pub.pas), line = 125
 18024
 18025 71EF AD 97 BA			lda G
 18026 71F2 C9 63			cmp #$63
 18027 71F4 D0 14			jne l_45D1
 18028
 18029 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 127
 18030
 18031 71F6 E8				inx
 18032 71F7 AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 18033 71FC AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 18034 7201 20 80 21			jsr CRT_WRITELN
 18035
 18036 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 128
 18037
 18038 7204 20 2E 21			jsr WAITFORKEY
 18039 7207 4C BC 77			jmp @exit
 18040 720A			l_45D1
 18041
 18042 				; optimize OK (pub.pas), line = 133
 18043
 18044 720A AD 97 BA			lda G
 18045 720D 20 C6 23			jsr LOADGANGSTER
 18046
 18047 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', pub.pas), line = 134
 18048
 18049 7210 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 18050
 18051 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 135
 18052
 18053 7213 E8				inx
 18054 7214 AD B4 A3 95 94		mva LOC_STRING_39 :STACKORIGIN,x
 18055 7219 AD B5 A3 95 A4		mva LOC_STRING_39+1 :STACKORIGIN+STACKWIDTH,x
 18056 721E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18057
 18058 				; optimize OK (pub.pas), line = 136
 18059
 18060 7221 AD ED E6			lda BUF_GANGSTERPRICE
 18061 7224 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 18062 7227 AD EE E6			lda BUF_GANGSTERPRICE+1
 18063 722A 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 18064 722D 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 18065
 18066 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 137
 18067
 18068 7230 E8				inx
 18069 7231 AD B6 A3 95 94		mva LOC_STRING_40 :STACKORIGIN,x
 18070 7236 AD B7 A3 95 A4		mva LOC_STRING_40+1 :STACKORIGIN+STACKWIDTH,x
 18071 723B 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18072
 18073 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 138
 18074
 18075 723E E8				inx
 18076 723F AD 24 A4 95 94		mva BUF_GANGSTERANREDE :STACKORIGIN,x
 18077 7244 AD 25 A4 95 A4		mva BUF_GANGSTERANREDE+1 :STACKORIGIN+STACKWIDTH,x
 18078 7249 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18079
 18080 				; optimize FAIL ('CRT_WRITELN2', pub.pas), line = 139
 18081
 18082 724C E8				inx
 18083 724D AD B8 A3 95 94		mva LOC_STRING_41 :STACKORIGIN,x
 18084 7252 AD B9 A3 95 A4		mva LOC_STRING_41+1 :STACKORIGIN+STACKWIDTH,x
 18085 7257 20 4C 21			jsr CRT_WRITELN2
 18086
 18087 				; optimize FAIL ('GETYESNO', pub.pas), line = 140
 18088
 18089 725A 20 DA 21			jsr GETYESNO
 18090 725D AD 90 B6			lda GETYESNO.RESULT
 18091 7260 D0 03			jne l_45FC
 18092 7262 4C BC 77			jmp @exit
 18093 7265			l_45FC
 18094
 18095 				; optimize OK (pub.pas), line = 141
 18096
 18097 7265 AD ED E6			lda BUF_GANGSTERPRICE
 18098 7268 8D 40 B9			sta PAYMONEY.PRICE
 18099 726B AD EE E6			lda BUF_GANGSTERPRICE+1
 18100 726E 8D 41 B9			sta PAYMONEY.PRICE+1
 18101 7271 20 98 2D			jsr PAYMONEY
 18102 7274 AD 42 B9			lda PAYMONEY.RESULT
 18103 7277 D0 03			jne l_4611
 18104 7279 4C BC 77			jmp @exit
 18105 727C			l_4611
 18106
 18107 				; optimize OK (pub.pas), line = 142
 18108
 18109 727C AC 97 BA			ldy G
 18110 727F AD 1A E4			lda CURRENTPLAYER
 18111 7282 99 21 E4			sta adr.PLGANGSTERS,y
 18112
 18113 				; optimize OK (pub.pas), line = 143
 18114
 18115 7285 AC 1A E4			ldy CURRENTPLAYER
 18116 7288 B9 41 E4			lda adr.PLNGANGSTERS,y
 18117 728B 8D 99 BA			sta Z
 18118
 18119 				; optimize OK (pub.pas), line = 144
 18120
 18121 728E 18 69 01			add #$01
 18122 7291 99 41 E4			sta adr.PLNGANGSTERS,y
 18123
 18124 				; optimize OK (pub.pas), line = 145
 18125
 18126 7294 AC 97 BA			ldy G
 18127 7297 A9 0A			lda #$0A
 18128 7299 99 B8 E3			sta adr.GANGSTERHEALTH,y
 18129
 18130 				; optimize OK (pub.pas), line = 146
 18131
 18132 729C 98				tya
 18133 729D 0A				asl @
 18134 729E A8				tay
 18135 729F B9 E0 B0			lda adr.GANGSTERNAMES,y
 18136 72A2 85 8C			sta @move.dst
 18137 72A4 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 18138 72A7 85 8D			sta @move.dst+1
 18139 72A9 AD 26 A4			lda BUF_GANGSTERNAME
 18140 72AC 85 88			sta @move.src
 18141 72AE AD 27 A4			lda BUF_GANGSTERNAME+1
 18142 72B1 85 89			sta @move.src+1
 18143 72B3 A0 00			ldy #$00
 18144 72B5 B1 88			lda (@move.src),y
 18145 72B7 18 69 01			add #1
 18146 72BA 85 84			sta @move.cnt
 18147 72BC 90 01			scc
 18148 72BE C8				iny
 18149 72BF 84 85			sty @move.cnt+1
 18150 72C1 20 35 10			jsr @move
 18151
 18152 				; optimize OK (pub.pas), line = 147
 18153
 18154 72C4 AC 97 BA			ldy G
 18155 72C7 AD D9 E6			lda BUF_GANGSTERSTR
 18156 72CA 99 58 E3			sta adr.GANGSTERSTR,y
 18157
 18158 				; optimize OK (pub.pas), line = 148
 18159
 18160 72CD AD DA E6			lda BUF_GANGSTERBRUT
 18161 72D0 99 98 E3			sta adr.GANGSTERBRUT,y
 18162
 18163 				; optimize OK (pub.pas), line = 149
 18164
 18165 72D3 AD DB E6			lda BUF_GANGSTERINT
 18166 72D6 99 78 E3			sta adr.GANGSTERINT,y
 18167
 18168 				; optimize OK (pub.pas), line = 150
 18169
 18170 72D9 AD DC E6			lda BUF_GANGSTERWEAPON
 18171 72DC 99 D8 E3			sta adr.GANGSTERWEAPON,y
 18172
 18173 				; optimize OK (pub.pas), line = 151
 18174
 18175 72DF AD D8 E6			lda BUF_GANGSTERSEX
 18176 72E2 99 F8 E3			sta adr.GANGSTERSEX,y
 18177
 18178 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 153
 18179
 18180 72E5 E8				inx
 18181 72E6 AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 18182 72EB AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 18183 72F0 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18184
 18185 				; optimize OK (pub.pas), line = 154
 18186
 18187 72F3 A9 00			lda #$00
 18188 72F5 20 88 1C			jsr B_CRT.CRT_WRITE_054D
 18189
 18190 				; optimize OK (pub.pas), line = 155
 18191
 18192 72F8 AC 1A E4			ldy CURRENTPLAYER
 18193 72FB B9 41 E4			lda adr.PLNGANGSTERS,y
 18194 72FE 38 E9 01			sub #$01
 18195 7301 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 18196 7304 A9 00			lda #$00
 18197 7306 E9 00			sbc #$00
 18198 7308 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 18199 730A A0 00			ldy #$00
 18200 730C A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 18201 730E 10 01			spl
 18202 7310 88				dey
 18203 7311 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 18204 7314 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 18205 7317 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 18206 731A 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 18207
 18208 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 156
 18209
 18210 731D E8				inx
 18211 731E AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 18212 7323 AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 18213 7328 20 80 21			jsr CRT_WRITELN
 18214
 18215 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 157
 18216
 18217 732B 20 2E 21			jsr WAITFORKEY
 18218 732E			l_44C5
 18219
 18220 				; optimize OK (pub.pas), line = 161
 18221
 18222 732E AC 90 BA 84 81		mvy CHOICE+1 :bp+1
 18223 7333 AC 8F BA			ldy CHOICE
 18224 7336 B1 80			lda (:bp),y
 18225 7338 C9 03			cmp #$03
 18226 733A F0 03 4C 35 75		jne l_4697
 18227
 18228 				; optimize OK (pub.pas), line = 164
 18229
 18230 733F AC 1A E4			ldy CURRENTPLAYER
 18231 7342 B9 78 E0			lda adr.PLRANK,y
 18232 7345 C9 04			cmp #$04
 18233 7347 B0 14			jcs l_46AD
 18234
 18235 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 166
 18236
 18237 7349 E8				inx
 18238 734A AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 18239 734F AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 18240 7354 20 80 21			jsr CRT_WRITELN
 18241
 18242 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 167
 18243
 18244 7357 20 2E 21			jsr WAITFORKEY
 18245 735A 4C BC 77			jmp @exit
 18246 735D			l_46AD
 18247
 18248 				; optimize OK (pub.pas), line = 172
 18249
 18250 735D A9 03			lda #$03
 18251 735F 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18252 7362 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 18253 7365 D0 14			jne l_46C5
 18254
 18255 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 173
 18256
 18257 7367 E8				inx
 18258 7368 AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 18259 736D AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 18260 7372 20 80 21			jsr CRT_WRITELN
 18261
 18262 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 174
 18263
 18264 7375 20 2E 21			jsr WAITFORKEY
 18265 7378 4C BC 77			jmp @exit
 18266 737B			l_46C5
 18267
 18268 				; optimize OK (pub.pas), line = 178
 18269
 18270 737B A9 04			lda #$04
 18271 737D 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18272 7380 E8				inx
 18273 7381 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 18274 7386 E8				inx
 18275 7387 A9 F4 95 94			mva #$F4 :STACKORIGIN,x
 18276 738B A9 01 95 A4			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18277 738F A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 18278 7393 20 10 12			jsr imulWORD
 18279 7396 CA				dex
 18280 7397 A5 84			lda :eax
 18281 7399 18 69 E8			add #$E8
 18282 739C 8D 9C BA			sta P
 18283 739F A5 85			lda :eax+1
 18284 73A1 69 03			adc #$03
 18285 73A3 8D 9D BA			sta P+1
 18286
 18287 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 179
 18288
 18289 73A6 AD 94 A3 95 94		mva LOC_STRING_23 :STACKORIGIN,x
 18290 73AB AD 95 A3 95 A4		mva LOC_STRING_23+1 :STACKORIGIN+STACKWIDTH,x
 18291 73B0 20 80 21			jsr CRT_WRITELN
 18292
 18293 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 180
 18294
 18295 73B3 E8				inx
 18296 73B4 AD 96 A3 95 94		mva LOC_STRING_24 :STACKORIGIN,x
 18297 73B9 AD 97 A3 95 A4		mva LOC_STRING_24+1 :STACKORIGIN+STACKWIDTH,x
 18298 73BE 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18299
 18300 				; optimize OK (pub.pas), line = 181
 18301
 18302 73C1 AD 9C BA			lda P
 18303 73C4 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 18304 73C7 AD 9D BA			lda P+1
 18305 73CA 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 18306 73CD 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 18307
 18308 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 182
 18309
 18310 73D0 E8				inx
 18311 73D1 AD 98 A3 95 94		mva LOC_STRING_25 :STACKORIGIN,x
 18312 73D6 AD 99 A3 95 A4		mva LOC_STRING_25+1 :STACKORIGIN+STACKWIDTH,x
 18313 73DB 20 80 21			jsr CRT_WRITELN
 18314
 18315 				; optimize FAIL ('GETYESNO', pub.pas), line = 183
 18316
 18317 73DE 20 DA 21			jsr GETYESNO
 18318 73E1 AD 90 B6			lda GETYESNO.RESULT
 18319 73E4 D0 03			jne l_46F5
 18320 73E6 4C BC 77			jmp @exit
 18321 73E9			l_46F5
 18322
 18323 				; optimize OK (pub.pas), line = 184
 18324
 18325 73E9 AD 9C BA			lda P
 18326 73EC 8D 40 B9			sta PAYMONEY.PRICE
 18327 73EF AD 9D BA			lda P+1
 18328 73F2 8D 41 B9			sta PAYMONEY.PRICE+1
 18329 73F5 20 98 2D			jsr PAYMONEY
 18330 73F8 AD 42 B9			lda PAYMONEY.RESULT
 18331 73FB D0 03			jne l_470A
 18332 73FD 4C BC 77			jmp @exit
 18333 7400			l_470A
 18334
 18335 				; optimize OK (pub.pas), line = 186
 18336
 18337 7400 A9 05			lda #$05
 18338 7402 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18339 7405 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 18340 7408 8D 9A BA			sta TIPP
 18341
 18342 				; optimize OK (pub.pas), line = 187
 18343
 18344 740B 8D A2 BA			sta @CASETMP_0012
 18345 740E C9 00			cmp #$00
 18346 7410 D0 1F			jne l_471D
 18347 				@
 18348
 18349 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 189
 18350
 18351 7412 E8				inx
 18352 7413 AD 9A A3 95 94		mva LOC_STRING_26 :STACKORIGIN,x
 18353 7418 AD 9B A3 95 A4		mva LOC_STRING_26+1 :STACKORIGIN+STACKWIDTH,x
 18354 741D 20 80 21			jsr CRT_WRITELN
 18355
 18356 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 190
 18357
 18358 7420 E8				inx
 18359 7421 AD 9C A3 95 94		mva LOC_STRING_27 :STACKORIGIN,x
 18360 7426 AD 9D A3 95 A4		mva LOC_STRING_27+1 :STACKORIGIN+STACKWIDTH,x
 18361 742B 20 80 21			jsr CRT_WRITELN
 18362 742E 4C 06 75			jmp a_0012
 18363 7431			l_471D
 18364 7431 C9 01			cmp #$01
 18365 7433 D0 1F			jne l_472C
 18366
 18367 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 193
 18368
 18369 7435 E8				inx
 18370 7436 AD 9E A3 95 94		mva LOC_STRING_28 :STACKORIGIN,x
 18371 743B AD 9F A3 95 A4		mva LOC_STRING_28+1 :STACKORIGIN+STACKWIDTH,x
 18372 7440 20 80 21			jsr CRT_WRITELN
 18373
 18374 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 194
 18375
 18376 7443 E8				inx
 18377 7444 AD A0 A3 95 94		mva LOC_STRING_29 :STACKORIGIN,x
 18378 7449 AD A1 A3 95 A4		mva LOC_STRING_29+1 :STACKORIGIN+STACKWIDTH,x
 18379 744E 20 80 21			jsr CRT_WRITELN
 18380 7451 4C 06 75			jmp a_0012
 18381 7454			l_472C
 18382 7454 C9 02			cmp #$02
 18383 7456 D0 2D			jne l_473B
 18384
 18385 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 197
 18386
 18387 7458 E8				inx
 18388 7459 AD A2 A3 95 94		mva LOC_STRING_30 :STACKORIGIN,x
 18389 745E AD A3 A3 95 A4		mva LOC_STRING_30+1 :STACKORIGIN+STACKWIDTH,x
 18390 7463 20 80 21			jsr CRT_WRITELN
 18391
 18392 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 198
 18393
 18394 7466 E8				inx
 18395 7467 AD A4 A3 95 94		mva LOC_STRING_31 :STACKORIGIN,x
 18396 746C AD A5 A3 95 A4		mva LOC_STRING_31+1 :STACKORIGIN+STACKWIDTH,x
 18397 7471 20 80 21			jsr CRT_WRITELN
 18398
 18399 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 199
 18400
 18401 7474 E8				inx
 18402 7475 AD A6 A3 95 94		mva LOC_STRING_32 :STACKORIGIN,x
 18403 747A AD A7 A3 95 A4		mva LOC_STRING_32+1 :STACKORIGIN+STACKWIDTH,x
 18404 747F 20 80 21			jsr CRT_WRITELN
 18405 7482 4C 06 75			jmp a_0012
 18406 7485			l_473B
 18407 7485 C9 03			cmp #$03
 18408 7487 D0 4F			jne l_474D
 18409
 18410 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 202
 18411
 18412 7489 E8				inx
 18413 748A AD A8 A3 95 94		mva LOC_STRING_33 :STACKORIGIN,x
 18414 748F AD A9 A3 95 A4		mva LOC_STRING_33+1 :STACKORIGIN+STACKWIDTH,x
 18415 7494 20 80 21			jsr CRT_WRITELN
 18416
 18417 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 203
 18418
 18419 7497 E8				inx
 18420 7498 AD AA A3 95 94		mva LOC_STRING_34 :STACKORIGIN,x
 18421 749D AD AB A3 95 A4		mva LOC_STRING_34+1 :STACKORIGIN+STACKWIDTH,x
 18422 74A2 20 80 21			jsr CRT_WRITELN
 18423
 18424 				; optimize FAIL ('GETYESNO', pub.pas), line = 204
 18425
 18426 74A5 20 DA 21			jsr GETYESNO
 18427 74A8 AD 90 B6			lda GETYESNO.RESULT
 18428 74AB D0 03			jne l_4763
 18429 74AD 4C BC 77			jmp @exit
 18430 74B0			l_4763
 18431
 18432 				; optimize OK (pub.pas), line = 205
 18433
 18434 74B0 AD 9C BA			lda P
 18435 74B3 8D 40 B9			sta PAYMONEY.PRICE
 18436 74B6 AD 9D BA			lda P+1
 18437 74B9 8D 41 B9			sta PAYMONEY.PRICE+1
 18438 74BC 20 98 2D			jsr PAYMONEY
 18439 74BF AD 42 B9			lda PAYMONEY.RESULT
 18440 74C2 D0 03			jne l_4778
 18441 74C4 4C BC 77			jmp @exit
 18442 74C7			l_4778
 18443
 18444 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 206
 18445
 18446 74C7 E8				inx
 18447 74C8 AD AC A3 95 94		mva LOC_STRING_35 :STACKORIGIN,x
 18448 74CD AD AD A3 95 A4		mva LOC_STRING_35+1 :STACKORIGIN+STACKWIDTH,x
 18449 74D2 20 80 21			jsr CRT_WRITELN
 18450 74D5 4C 06 75			jmp a_0012
 18451 74D8			l_474D
 18452 74D8 C9 04			cmp #$04
 18453 74DA D0 2A			jne l_4787
 18454
 18455 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 209
 18456
 18457 74DC E8				inx
 18458 74DD AD AE A3 95 94		mva LOC_STRING_36 :STACKORIGIN,x
 18459 74E2 AD AF A3 95 A4		mva LOC_STRING_36+1 :STACKORIGIN+STACKWIDTH,x
 18460 74E7 20 80 21			jsr CRT_WRITELN
 18461
 18462 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 210
 18463
 18464 74EA E8				inx
 18465 74EB AD B0 A3 95 94		mva LOC_STRING_37 :STACKORIGIN,x
 18466 74F0 AD B1 A3 95 A4		mva LOC_STRING_37+1 :STACKORIGIN+STACKWIDTH,x
 18467 74F5 20 80 21			jsr CRT_WRITELN
 18468
 18469 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 211
 18470
 18471 74F8 E8				inx
 18472 74F9 AD B2 A3 95 94		mva LOC_STRING_38 :STACKORIGIN,x
 18473 74FE AD B3 A3 95 A4		mva LOC_STRING_38+1 :STACKORIGIN+STACKWIDTH,x
 18474 7503 20 80 21			jsr CRT_WRITELN
 18475 7506			l_4787
 18476 7506			a_0012
 18477
 18478 				; optimize OK (pub.pas), line = 214
 18479
 18480 7506 AC 1A E4			ldy CURRENTPLAYER
 18481 7509 B9 40 E0			lda adr.PLOPPORTUNITY,y
 18482 750C 85 9E			sta :STACKORIGIN+10
 18483 750E A9 00			lda #$00
 18484 7510 85 CF			sta :STACKORIGIN+STACKWIDTH*3+11
 18485 7512 85 BF			sta :STACKORIGIN+STACKWIDTH*2+11
 18486 7514 85 AF			sta :STACKORIGIN+STACKWIDTH+11
 18487 7516 A9 01			lda #$01
 18488 7518 AC 9A BA			ldy TIPP
 18489 751B F0 0A			beq l_0000_e
 18490 751D			l_0000_b
 18491 751D 0A				asl @
 18492 751E 26 AF			rol :STACKORIGIN+STACKWIDTH+11
 18493 7520 26 BF			rol :STACKORIGIN+STACKWIDTH*2+11
 18494 7522 26 CF			rol :STACKORIGIN+STACKWIDTH*3+11
 18495 7524 88				dey
 18496 7525 D0 F6			bne l_0000_b
 18497 7527			l_0000_e
 18498 7527 05 9E			ora :STACKORIGIN+10
 18499 7529 AC 1A E4			ldy CURRENTPLAYER
 18500 752C 99 40 E0			sta adr.PLOPPORTUNITY,y
 18501
 18502 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 215
 18503
 18504 752F 20 2E 21			jsr WAITFORKEY
 18505 7532 4C BC 77			jmp @exit
 18506 7535			l_4697
 18507
 18508 				; optimize OK (pub.pas), line = 221
 18509
 18510 7535 AC 90 BA 84 81		mvy CHOICE+1 :bp+1
 18511 753A AC 8F BA			ldy CHOICE
 18512 753D B1 80			lda (:bp),y
 18513 753F C9 04			cmp #$04
 18514 7541 F0 03 4C BC 77		jne l_47C4
 18515
 18516 				; optimize OK (pub.pas), line = 224
 18517
 18518 7546 A9 14			lda #$14
 18519 7548 20 B3 26			jsr LOADLOCATION
 18520
 18521 				; optimize OK (pub.pas), line = 226
 18522
 18523 754B AC 1A E4			ldy CURRENTPLAYER
 18524 754E B9 78 E0			lda adr.PLRANK,y
 18525 7551 C9 04			cmp #$04
 18526 7553 90 38			jcc l_47DC
 18527
 18528 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 228
 18529
 18530 7555 E8				inx
 18531 7556 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 18532 755B AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 18533 7560 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18534
 18535 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 229
 18536
 18537 7563 E8				inx
 18538 7564 AC 1A E4			ldy CURRENTPLAYER
 18539 7567 B9 78 E0			lda adr.PLRANK,y
 18540 756A 0A				asl @
 18541 756B A8				tay
 18542 756C B9 E0 AF			lda adr.RANKNAMES,y
 18543 756F 95 94			sta :STACKORIGIN,x
 18544 7571 B9 E1 AF			lda adr.RANKNAMES+1,y
 18545 7574 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 18546 7576 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18547
 18548 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 230
 18549
 18550 7579 E8				inx
 18551 757A AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 18552 757F AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 18553 7584 20 80 21			jsr CRT_WRITELN
 18554
 18555 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 231
 18556
 18557 7587 20 2E 21			jsr WAITFORKEY
 18558 758A 4C BC 77			jmp @exit
 18559 758D			l_47DC
 18560
 18561 				; optimize OK (pub.pas), line = 236
 18562
 18563 758D A9 05			lda #$05
 18564 758F 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18565 7592 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 18566 7595 D0 14			jne l_4800
 18567
 18568 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 238
 18569
 18570 7597 E8				inx
 18571 7598 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 18572 759D AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 18573 75A2 20 80 21			jsr CRT_WRITELN
 18574
 18575 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 239
 18576
 18577 75A5 20 2E 21			jsr WAITFORKEY
 18578 75A8 4C BC 77			jmp @exit
 18579 75AB			l_4800
 18580
 18581 				; optimize OK (pub.pas), line = 244
 18582
 18583 75AB A9 04			lda #$04
 18584 75AD 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18585 75B0 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 18586 75B3 8D A3 BA			sta @CASETMP_0013
 18587 75B6 D0 63			jne l_4811
 18588 				@
 18589
 18590 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 247
 18591
 18592 75B8 E8				inx
 18593 75B9 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 18594 75BE AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 18595 75C3 20 80 21			jsr CRT_WRITELN
 18596
 18597 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 248
 18598
 18599 75C6 E8				inx
 18600 75C7 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 18601 75CC AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 18602 75D1 20 80 21			jsr CRT_WRITELN
 18603
 18604 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 249
 18605
 18606 75D4 E8				inx
 18607 75D5 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 18608 75DA AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 18609 75DF 20 80 21			jsr CRT_WRITELN
 18610
 18611 				; optimize OK (pub.pas), line = 250
 18612
 18613 75E2 A9 07			lda #$07
 18614 75E4 8D 96 BA			sta JOBLOCATION
 18615
 18616 				; optimize OK (pub.pas), line = 251
 18617
 18618 75E7 A9 03			lda #$03
 18619 75E9 8D 95 BA			sta DURATION
 18620
 18621 				; optimize OK (pub.pas), line = 252
 18622
 18623 75EC A9 02			lda #$02
 18624 75EE 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18625 75F1 E8				inx
 18626 75F2 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 18627 75F7 E8				inx
 18628 75F8 A9 E8 95 94			mva #$E8 :STACKORIGIN,x
 18629 75FC A9 03 95 A4			mva #$03 :STACKORIGIN+STACKWIDTH,x
 18630 7600 A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 18631 7604 20 10 12			jsr imulWORD
 18632 7607 CA				dex
 18633 7608 A5 84			lda :eax
 18634 760A 18 69 D0			add #$D0
 18635 760D 8D 93 BA			sta WAGE
 18636 7610 A5 85			lda :eax+1
 18637 7612 69 07			adc #$07
 18638 7614 8D 94 BA			sta WAGE+1
 18639 7617 CA				dex
 18640 7618 4C 31 77			jmp a_0013
 18641 761B			l_4811
 18642 761B C9 01			cmp #$01
 18643 761D D0 55			jne l_4838
 18644
 18645 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 256
 18646
 18647 761F E8				inx
 18648 7620 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 18649 7625 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 18650 762A 20 80 21			jsr CRT_WRITELN
 18651
 18652 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 257
 18653
 18654 762D E8				inx
 18655 762E AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 18656 7633 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 18657 7638 20 80 21			jsr CRT_WRITELN
 18658
 18659 				; optimize OK (pub.pas), line = 258
 18660
 18661 763B A9 02			lda #$02
 18662 763D 8D 95 BA			sta DURATION
 18663
 18664 				; optimize OK (pub.pas), line = 259
 18665
 18666 7640 A9 03			lda #$03
 18667 7642 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18668 7645 E8				inx
 18669 7646 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 18670 764B E8				inx
 18671 764C A9 F4 95 94			mva #$F4 :STACKORIGIN,x
 18672 7650 A9 01 95 A4			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18673 7654 A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 18674 7658 20 10 12			jsr imulWORD
 18675 765B CA				dex
 18676 765C A5 84			lda :eax
 18677 765E 18 69 E8			add #$E8
 18678 7661 8D 93 BA			sta WAGE
 18679 7664 A5 85			lda :eax+1
 18680 7666 69 03			adc #$03
 18681 7668 8D 94 BA			sta WAGE+1
 18682 766B CA				dex
 18683
 18684 				; optimize OK (pub.pas), line = 260
 18685
 18686 766C A9 0B			lda #$0B
 18687 766E 8D 96 BA			sta JOBLOCATION
 18688 7671 4C 31 77			jmp a_0013
 18689 7674			l_4838
 18690 7674 C9 02			cmp #$02
 18691 7676 D0 55			jne l_485C
 18692
 18693 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 264
 18694
 18695 7678 E8				inx
 18696 7679 AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 18697 767E AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 18698 7683 20 80 21			jsr CRT_WRITELN
 18699
 18700 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 265
 18701
 18702 7686 E8				inx
 18703 7687 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 18704 768C AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 18705 7691 20 80 21			jsr CRT_WRITELN
 18706
 18707 				; optimize OK (pub.pas), line = 266
 18708
 18709 7694 A9 02			lda #$02
 18710 7696 8D 95 BA			sta DURATION
 18711
 18712 				; optimize OK (pub.pas), line = 267
 18713
 18714 7699 A9 03			lda #$03
 18715 769B 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18716 769E E8				inx
 18717 769F AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 18718 76A4 E8				inx
 18719 76A5 A9 F4 95 94			mva #$F4 :STACKORIGIN,x
 18720 76A9 A9 01 95 A4			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18721 76AD A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 18722 76B1 20 10 12			jsr imulWORD
 18723 76B4 CA				dex
 18724 76B5 A5 84			lda :eax
 18725 76B7 18 69 D0			add #$D0
 18726 76BA 8D 93 BA			sta WAGE
 18727 76BD A5 85			lda :eax+1
 18728 76BF 69 07			adc #$07
 18729 76C1 8D 94 BA			sta WAGE+1
 18730 76C4 CA				dex
 18731
 18732 				; optimize OK (pub.pas), line = 268
 18733
 18734 76C5 A9 0A			lda #$0A
 18735 76C7 8D 96 BA			sta JOBLOCATION
 18736 76CA 4C 31 77			jmp a_0013
 18737 76CD			l_485C
 18738 76CD C9 03			cmp #$03
 18739 76CF D0 60			jne l_4880
 18740
 18741 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 272
 18742
 18743 76D1 E8				inx
 18744 76D2 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 18745 76D7 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 18746 76DC 20 80 21			jsr CRT_WRITELN
 18747
 18748 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 273
 18749
 18750 76DF E8				inx
 18751 76E0 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 18752 76E5 AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 18753 76EA 20 80 21			jsr CRT_WRITELN
 18754
 18755 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 274
 18756
 18757 76ED E8				inx
 18758 76EE AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 18759 76F3 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 18760 76F8 20 80 21			jsr CRT_WRITELN
 18761
 18762 				; optimize OK (pub.pas), line = 275
 18763
 18764 76FB A9 01			lda #$01
 18765 76FD 8D 95 BA			sta DURATION
 18766
 18767 				; optimize OK (pub.pas), line = 276
 18768
 18769 7700 A9 02			lda #$02
 18770 7702 20 CB 15			jsr SYSTEM.RANDOM_02E9
 18771 7705 E8				inx
 18772 7706 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 18773 770B E8				inx
 18774 770C A9 F4 95 94			mva #$F4 :STACKORIGIN,x
 18775 7710 A9 01 95 A4			mva #$01 :STACKORIGIN+STACKWIDTH,x
 18776 7714 A9 00 95 A3			mva #$00 :STACKORIGIN-1+STACKWIDTH,x
 18777 7718 20 10 12			jsr imulWORD
 18778 771B CA				dex
 18779 771C A5 84			lda :eax
 18780 771E 18 69 D0			add #$D0
 18781 7721 8D 93 BA			sta WAGE
 18782 7724 A5 85			lda :eax+1
 18783 7726 69 07			adc #$07
 18784 7728 8D 94 BA			sta WAGE+1
 18785 772B CA				dex
 18786
 18787 				; optimize OK (pub.pas), line = 277
 18788
 18789 772C A9 10			lda #$10
 18790 772E 8D 96 BA			sta JOBLOCATION
 18791 7731			l_4880
 18792 7731			a_0013
 18793
 18794 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', pub.pas), line = 281
 18795
 18796 7731 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 18797
 18798 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', pub.pas), line = 282
 18799
 18800 7734 E8				inx
 18801 7735 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 18802 773A AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 18803 773F 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 18804
 18805 				; optimize OK (pub.pas), line = 283
 18806
 18807 7742 AD 93 BA			lda WAGE
 18808 7745 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 18809 7748 A0 00			ldy #$00
 18810 774A AD 94 BA			lda WAGE+1
 18811 774D 10 01			spl
 18812 774F 88				dey
 18813 7750 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 18814 7753 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 18815 7756 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 18816 7759 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 18817
 18818 				; optimize FAIL ('CRT_WRITELN2', pub.pas), line = 284
 18819
 18820 775C E8				inx
 18821 775D A9 1E 95 94			mva #$1E :STACKORIGIN,x
 18822 7761 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 18823 7765 20 4C 21			jsr CRT_WRITELN2
 18824
 18825 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 285
 18826
 18827 7768 E8				inx
 18828 7769 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 18829 776E AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 18830 7773 20 80 21			jsr CRT_WRITELN
 18831
 18832 				; optimize FAIL ('GETYESNO', pub.pas), line = 286
 18833
 18834 7776 20 DA 21			jsr GETYESNO
 18835 7779 AD 90 B6			lda GETYESNO.RESULT
 18836 777C C9 01			cmp #$01
 18837 777E D0 3C			jne l_48C2
 18838
 18839 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', pub.pas), line = 288
 18840
 18841 7780 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 18842
 18843 				; optimize FAIL ('CRT_WRITELN', pub.pas), line = 289
 18844
 18845 7783 E8				inx
 18846 7784 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 18847 7789 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 18848 778E 20 80 21			jsr CRT_WRITELN
 18849
 18850 				; optimize FAIL ('WAITFORKEY', pub.pas), line = 290
 18851
 18852 7791 20 2E 21			jsr WAITFORKEY
 18853
 18854 				; optimize OK (pub.pas), line = 292
 18855
 18856 7794 AC 1A E4			ldy CURRENTPLAYER
 18857 7797 AD 95 BA			lda DURATION
 18858 779A 99 60 E0			sta adr.PLJOB,y
 18859
 18860 				; optimize OK (pub.pas), line = 293
 18861
 18862 779D 98				tya
 18863 779E 0A				asl @
 18864 779F A8				tay
 18865 77A0 AD 93 BA			lda WAGE
 18866 77A3 99 64 E0			sta adr.PLJOBWAGE,y
 18867 77A6 AD 94 BA			lda WAGE+1
 18868 77A9 99 65 E0			sta adr.PLJOBWAGE+1,y
 18869
 18870 				; optimize OK (pub.pas), line = 294
 18871
 18872 77AC AD 96 BA			lda JOBLOCATION
 18873 77AF 99 6C E0			sta adr.PLJOBLOCATION,y
 18874 77B2 A9 00			lda #$00
 18875 77B4 99 6D E0			sta adr.PLJOBLOCATION+1,y
 18876
 18877 				; optimize OK (pub.pas), line = 295
 18878
 18879 77B7 A9 11			lda #$11
 18880 77B9 8D 91 BA			sta RESULT
 18881 77BC			l_48C2
 18882 77BC			l_47C4
 18883 77BC			@exit
 18884
 18885 				; ------------------------------------------------------------
 18886
 18887 = BA8F			CHOICE	= DATAORIGIN+$161A
 18888 = BA91			RESULT	= DATAORIGIN+$161C
 18889 = BA92			R	= DATAORIGIN+$161D
 18890 = BA93			WAGE	= DATAORIGIN+$161E
 18891 = BA95			DURATION	= DATAORIGIN+$1620
 18892 = BA96			JOBLOCATION	= DATAORIGIN+$1621
 18893 = BA97			G	= DATAORIGIN+$1622
 18894 = BA98			K	= DATAORIGIN+$1623
 18895 = BA99			Z	= DATAORIGIN+$1624
 18896 = BA9A			TIPP	= DATAORIGIN+$1625
 18897 = BA9B			HASHIDEOUT	= DATAORIGIN+$1626
 18898 = BA9C			P	= DATAORIGIN+$1627
 18899 = BA9E			AL	= DATAORIGIN+$1629
 18900 = BAA0			W	= DATAORIGIN+$162B
 18901 = BAA2			@CASETMP_0012	= DATAORIGIN+$162D
 18902 = BAA3			@CASETMP_0013	= DATAORIGIN+$162E
 18903
 18904 = BA8F			@VarData	= CHOICE
 18905 = 0014			@VarDataSize	= 20
 18906
 18907 77BC 60				rts						; ret
 18908 				.endl
 18909
 18910 77BD			.local	STORECHOICES					; FUNCTION
 18911
 18912 				; optimize FAIL ('SHOWLOCATIONHEADER', store.pas), line = 7
 18913
 18914 77BD 20 1D 26			jsr SHOWLOCATIONHEADER
 18915
 18916 				; optimize OK (store.pas), line = 8
 18917
 18918 77C0 A9 09			lda #$09
 18919 77C2 8D A6 BA			sta RESULT
 18920
 18921 				; optimize OK (store.pas), line = 12
 18922
 18923 77C5 AC 1A E4			ldy CURRENTPLAYER
 18924 77C8 B9 78 E0			lda adr.PLRANK,y
 18925 77CB C9 02			cmp #$02
 18926 77CD B0 14			jcs l_4908
 18927
 18928 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 14
 18929
 18930 77CF E8				inx
 18931 77D0 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 18932 77D5 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 18933 77DA 20 80 21			jsr CRT_WRITELN
 18934
 18935 				; optimize FAIL ('WAITFORKEY', store.pas), line = 15
 18936
 18937 77DD 20 2E 21			jsr WAITFORKEY
 18938 77E0 4C EA 7D			jmp @exit
 18939 77E3			l_4908
 18940
 18941 				; optimize OK (store.pas), line = 22
 18942
 18943 77E3 AD EC B9			lda LASTLOCATION
 18944 77E6 C9 09			cmp #$09
 18945 77E8 D0 0C			jne l_4921
 18946
 18947 				; optimize FAIL ('FIGHTPOLICE', store.pas), line = 24
 18948
 18949 77EA 20 AD 4A			jsr FIGHTPOLICE
 18950 77ED AD EB B9			lda FIGHTPOLICE.RESULT
 18951 77F0 8D A6 BA			sta RESULT
 18952 77F3 4C EA 7D			jmp @exit
 18953 77F6			l_4921
 18954
 18955 				; optimize OK (store.pas), line = 29
 18956
 18957 77F6 AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 18958 77FB AC A4 BA			ldy CHOICE
 18959 77FE B1 80			lda (:bp),y
 18960 7800 C9 01			cmp #$01
 18961 7802 D0 5A			jne l_493A
 18962
 18963 				; optimize OK (store.pas), line = 31
 18964
 18965 7804 AD 1A E4			lda CURRENTPLAYER
 18966 7807 85 9D			sta :STACKORIGIN+9
 18967 7809 A9 00			lda #$00
 18968 780B 06 9D			asl :STACKORIGIN+9
 18969 780D 2A				rol @
 18970 780E 06 9D			asl :STACKORIGIN+9
 18971 7810 2A				rol @
 18972 7811 06 9D			asl :STACKORIGIN+9
 18973 7813 2A				rol @
 18974 7814 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 18975 7816 A5 9D			lda :STACKORIGIN+9
 18976 7818 18 69 00			add #$00
 18977 781B A8				tay
 18978 781C A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 18979 781E 69 00			adc #$00
 18980 7820 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 18981 7822 B9 98 E3			lda adr.GANGSTERBRUT,y
 18982 7825 C9 1E			cmp #$1E
 18983 7827 90 07			jcc l_4960x
 18984 7829 AD AF B8			lda CURRENTSUBLOCATION
 18985 782C C9 01			cmp #$01
 18986 782E D0 2E			jne l_4960
 18987 7830			l_4960x
 18988
 18989 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 32
 18990
 18991 7830 E8				inx
 18992 7831 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 18993 7836 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 18994 783B 20 80 21			jsr CRT_WRITELN
 18995
 18996 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', store.pas), line = 33
 18997
 18998 783E 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 18999
 19000 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 34
 19001
 19002 7841 E8				inx
 19003 7842 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 19004 7847 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 19005 784C 20 80 21			jsr CRT_WRITELN
 19006
 19007 				; optimize FAIL ('WAITFORKEY', store.pas), line = 35
 19008
 19009 784F 20 2E 21			jsr WAITFORKEY
 19010
 19011 				; optimize FAIL ('FIGHTPOLICE', store.pas), line = 36
 19012
 19013 7852 20 AD 4A			jsr FIGHTPOLICE
 19014 7855 AD EB B9			lda FIGHTPOLICE.RESULT
 19015 7858 8D A6 BA			sta RESULT
 19016 785B 4C EA 7D			jmp @exit
 19017 785E			l_4960
 19018 785E			l_493A
 19019
 19020 				; optimize OK (store.pas), line = 42
 19021
 19022 785E AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19023 7863 AC A4 BA			ldy CHOICE
 19024 7866 B1 80			lda (:bp),y
 19025 7868 C9 02			cmp #$02
 19026 786A D0 1C			jne l_4983
 19027
 19028 				; optimize OK (store.pas), line = 44
 19029
 19030 786C AD AF B8			lda CURRENTSUBLOCATION
 19031 786F C9 04			cmp #$04
 19032 7871 F0 04			jeq l_49A2x
 19033 7873 C9 03			cmp #$03
 19034 7875 D0 11			jne l_49A2
 19035 7877			l_49A2x
 19036
 19037 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 45
 19038
 19039 7877 E8				inx
 19040 7878 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 19041 787D AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 19042 7882 20 80 21			jsr CRT_WRITELN
 19043 7885 4C EA 7D			jmp @exit
 19044 7888			l_49A2
 19045 7888			l_4983
 19046
 19047 				; optimize OK (store.pas), line = 51
 19048
 19049 7888 AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19050 788D AC A4 BA			ldy CHOICE
 19051 7890 B1 80			lda (:bp),y
 19052 7892 C9 03			cmp #$03
 19053 7894 F0 03 4C 73 79		jne l_49BC
 19054
 19055 				; optimize OK (store.pas), line = 52
 19056
 19057 7899 AD AF B8			lda CURRENTSUBLOCATION
 19058 789C C9 02			cmp #$02
 19059 789E F0 07			jeq l_49DBx
 19060 78A0 C9 01			cmp #$01
 19061 78A2 F0 03 4C 73 79		jne l_49DB
 19062 78A7			l_49DBx
 19063
 19064 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 53
 19065
 19066 78A7 E8				inx
 19067 78A8 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 19068 78AD AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 19069 78B2 20 80 21			jsr CRT_WRITELN
 19070
 19071 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 54
 19072
 19073 78B5 E8				inx
 19074 78B6 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 19075 78BB AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 19076 78C0 20 80 21			jsr CRT_WRITELN
 19077
 19078 				; optimize FAIL ('WAITFORKEY', store.pas), line = 55
 19079
 19080 78C3 20 2E 21			jsr WAITFORKEY
 19081
 19082 				; -------------------  ASM Block 00000169  -------------------
 19083
 19084 				; 
 19085 78C6 AD AC A3		                lda loc_string_35
 19086 78C9 8D 7A B0		                sta adr.FP_GANG+$02
 19087 78CC AD AD A3		                lda loc_string_35+1
 19088 78CF 8D 7B B0		                sta adr.FP_GANG+1+$02
 19089 				            
 19090 				; optimize OK (store.pas), line = 65
 19091
 19092 78D2 A9 01			lda #$01
 19093 78D4 8D 02 EC			sta adr.FP_AI+$01
 19094
 19095 				; optimize OK (store.pas), line = 66
 19096
 19097 78D7 AC 1A E4			ldy CURRENTPLAYER
 19098 78DA B9 78 E0			lda adr.PLRANK,y
 19099 78DD A0 01			ldy #1
 19100 78DF C9 06			cmp #$06
 19101 78E1 B0 01			bcs @+
 19102 78E3 88				dey
 19103 				@
 19104 78E4 98				tya
 19105 78E5 0A				asl @
 19106 78E6 18 69 03			add #$03
 19107 78E9 8D 04 EC			sta adr.FP_N+$01
 19108
 19109 				; optimize OK (store.pas), line = 67
 19110
 19111 78EC A9 00			lda #$00
 19112 78EE 8D A8 BA			sta K
 19113 78F1 AD 04 EC			lda adr.FP_N+$01
 19114 78F4 38 E9 01			sub #$01
 19115 78F7 8D FB 78			sta @FORTMP_4A0D_0
 19116
 19117 78FA			l_4A10
 19118 				; --- ForToDoCondition
 19119 78FA A9 00			lda @FORTMP_4A0D_0::#$00
 19120 78FC CD A8 BA			cmp K
 19121 78FF 90 1D			jcc l_4A1E
 19122
 19123 				; optimize FAIL (1, store.pas), line = 68
 19124
 19125 7901 E8				inx
 19126 7902 AD A8 BA 95 94		mva K :STACKORIGIN,x
 19127 7907 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 19128 790B A9 02			lda #$02
 19129 790D 20 CB 15			jsr SYSTEM.RANDOM_02E9
 19130 7910 B4 94			ldy :STACKORIGIN,x
 19131 7912 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 19132 7915 99 45 ED			sta adr.FP_SEX,y
 19133 7918 CA				dex
 19134
 19135 				; --- ForToDoEpilog
 19136 7919 EE A8 BA			inc K
 19137 791C D0 DC			jne l_4A10
 19138 791E			l_4A1E
 19139
 19140 				; -------------------  ASM Block 00000170  -------------------
 19141
 19142 791E A0 00		                ldy #$00
 19143 				            @:
 19144 7920 98			                tya 
 19145 7921 0A			                asl 
 19146 7922 A8			                tay
 19147
 19148 7923 AD AE A3		                lda loc_string_36
 19149 7926 99 9C B0		                sta adr.FP_NAME+$20,y
 19150 7929 AD AF A3		                lda loc_string_36+1
 19151 792C 99 9D B0		                sta adr.FP_NAME+1+$20,y
 19152
 19153 792F 98			                tya
 19154 7930 4A			                lsr 
 19155 7931 A8			                tay
 19156
 19157 7932 A9 1E		                lda #30
 19158 7934 99 95 EC		                sta adr.FP_ENERGY+$10,y
 19159 7937 A9 07		                lda #07
 19160 7939 99 55 EC		                sta adr.FP_WEAPON+$10,y
 19161 793C C8			                iny
 19162 793D CC 04 EC		                cpy adr.FP_N+$01
 19163 7940 D0 DE		                bne @- 
 19164 				            
 19165 				; optimize FAIL ('DOFIGHT', store.pas), line = 102
 19166
 19167 7942 20 44 49			jsr DOFIGHT
 19168 7945 AD E6 B9			lda DOFIGHT.RESULT
 19169 7948 C9 01			cmp #$01
 19170 794A D0 08			jne l_4A3B
 19171
 19172 				; optimize OK (store.pas), line = 104
 19173
 19174 794C A9 11			lda #$11
 19175 794E 8D A6 BA			sta RESULT
 19176 7951 4C EA 7D			jmp @exit
 19177 7954			l_4A3B
 19178
 19179 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 107
 19180
 19181 7954 E8				inx
 19182 7955 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 19183 795A AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 19184 795F 20 80 21			jsr CRT_WRITELN
 19185
 19186 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 108
 19187
 19188 7962 E8				inx
 19189 7963 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 19190 7968 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 19191 796D 20 80 21			jsr CRT_WRITELN
 19192
 19193 				; optimize FAIL ('WAITFORKEY', store.pas), line = 109
 19194
 19195 7970 20 2E 21			jsr WAITFORKEY
 19196 7973			l_49DB
 19197 7973			l_49BC
 19198
 19199 				; optimize OK (store.pas), line = 114
 19200
 19201 7973 AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19202 7978 AC A4 BA			ldy CHOICE
 19203 797B B1 80			lda (:bp),y
 19204 797D C9 04			cmp #$04
 19205 797F D0 4E			jne l_4A5F
 19206
 19207 				; optimize OK (store.pas), line = 115
 19208
 19209 7981 AD AF B8			lda CURRENTSUBLOCATION
 19210 7984 C9 03			cmp #$03
 19211 7986 F0 25			jeq l_4A85x
 19212 7988 AD 1A E4			lda CURRENTPLAYER
 19213 798B 85 9E			sta :STACKORIGIN+10
 19214 798D A9 00			lda #$00
 19215 798F 06 9E			asl :STACKORIGIN+10
 19216 7991 2A				rol @
 19217 7992 06 9E			asl :STACKORIGIN+10
 19218 7994 2A				rol @
 19219 7995 06 9E			asl :STACKORIGIN+10
 19220 7997 2A				rol @
 19221 7998 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 19222 799A A5 9E			lda :STACKORIGIN+10
 19223 799C 18 69 00			add #$00
 19224 799F A8				tay
 19225 79A0 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
 19226 79A2 69 00			adc #$00
 19227 79A4 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 19228 79A6 B9 78 E3			lda adr.GANGSTERINT,y
 19229 79A9 C9 1E			cmp #$1E
 19230 79AB B0 22			jcs l_4A85
 19231 79AD			l_4A85x
 19232
 19233 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 116
 19234
 19235 79AD E8				inx
 19236 79AE AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 19237 79B3 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 19238 79B8 20 80 21			jsr CRT_WRITELN
 19239
 19240 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 117
 19241
 19242 79BB E8				inx
 19243 79BC AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 19244 79C1 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 19245 79C6 20 80 21			jsr CRT_WRITELN
 19246
 19247 				; optimize FAIL ('WAITFORKEY', store.pas), line = 118
 19248
 19249 79C9 20 2E 21			jsr WAITFORKEY
 19250 79CC 4C EA 7D			jmp @exit
 19251 79CF			l_4A85
 19252 79CF			l_4A5F
 19253
 19254 				; optimize OK (store.pas), line = 124
 19255
 19256 79CF AC 1A E4			ldy CURRENTPLAYER
 19257 79D2 B9 80 E0			lda adr.PLNEWPOINTS,y
 19258 79D5 18 69 02			add #$02
 19259 79D8 99 80 E0			sta adr.PLNEWPOINTS,y
 19260
 19261 				; optimize OK (store.pas), line = 125
 19262
 19263 79DB A9 C8			lda #$C8
 19264 79DD 20 CB 15			jsr SYSTEM.RANDOM_02E9
 19265 79E0 E8				inx
 19266 79E1 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 19267 79E4 18 69 20			add #$20
 19268 79E7 8D A9 BA			sta P
 19269 79EA A9 00			lda #$00
 19270 79EC 69 03			adc #$03
 19271 79EE 8D AA BA			sta P+1
 19272 79F1 CA				dex
 19273
 19274 				; optimize OK (store.pas), line = 126
 19275
 19276 79F2 AD AF B8			lda CURRENTSUBLOCATION
 19277 79F5 C9 02			cmp #$02
 19278 79F7 F0 04			jeq l_4AC8x
 19279 79F9 C9 03			cmp #$03
 19280 79FB D0 0E			jne l_4AC8
 19281 79FD			l_4AC8x
 19282
 19283 				; optimize OK (store.pas), line = 127
 19284
 19285 79FD AD A9 BA			lda P
 19286 7A00 38 E9 C8			sub #$C8
 19287 7A03 8D A9 BA			sta P
 19288 7A06 B0 03			scs
 19289 7A08 CE AA BA			dec P+1
 19290 7A0B			l_4AC8
 19291
 19292 				; optimize OK (store.pas), line = 128
 19293
 19294 7A0B AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19295 7A10 AC A4 BA			ldy CHOICE
 19296 7A13 B1 80			lda (:bp),y
 19297 7A15 C9 02			cmp #$02
 19298 7A17 D0 11			jne l_4AE6
 19299 7A19 AD A9 BA			lda P
 19300 7A1C 18 69 58			add #$58
 19301 7A1F 8D A9 BA			sta P
 19302 7A22 AD AA BA			lda P+1
 19303 7A25 69 02			adc #$02
 19304 7A27 8D AA BA			sta P+1
 19305 7A2A			l_4AE6
 19306
 19307 				; optimize OK (store.pas), line = 130
 19308
 19309 7A2A AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19310 7A2F AC A4 BA			ldy CHOICE
 19311 7A32 B1 80			lda (:bp),y
 19312 7A34 C9 01			cmp #$01
 19313 7A36 D0 37			jne l_4B04
 19314
 19315 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 131
 19316
 19317 7A38 E8				inx
 19318 7A39 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 19319 7A3E AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 19320 7A43 20 80 21			jsr CRT_WRITELN
 19321
 19322 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', store.pas), line = 132
 19323
 19324 7A46 E8				inx
 19325 7A47 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 19326 7A4C AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 19327 7A51 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 19328
 19329 				; optimize OK (store.pas), line = 133
 19330
 19331 7A54 AD A9 BA			lda P
 19332 7A57 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 19333 7A5A AD AA BA			lda P+1
 19334 7A5D 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 19335 7A60 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 19336
 19337 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 134
 19338
 19339 7A63 E8				inx
 19340 7A64 A9 9D 95 94			mva #$9D :STACKORIGIN,x
 19341 7A68 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 19342 7A6C 20 80 21			jsr CRT_WRITELN
 19343 7A6F			l_4B04
 19344
 19345 				; optimize OK (store.pas), line = 137
 19346
 19347 7A6F AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19348 7A74 AC A4 BA			ldy CHOICE
 19349 7A77 B1 80			lda (:bp),y
 19350 7A79 C9 02			cmp #$02
 19351 7A7B D0 29			jne l_4B24
 19352
 19353 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 138
 19354
 19355 7A7D E8				inx
 19356 7A7E AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 19357 7A83 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 19358 7A88 20 80 21			jsr CRT_WRITELN
 19359
 19360 				; optimize OK (store.pas), line = 139
 19361
 19362 7A8B AD A9 BA			lda P
 19363 7A8E 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 19364 7A91 AD AA BA			lda P+1
 19365 7A94 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 19366 7A97 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 19367
 19368 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 140
 19369
 19370 7A9A E8				inx
 19371 7A9B A9 9D 95 94			mva #$9D :STACKORIGIN,x
 19372 7A9F A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 19373 7AA3 20 80 21			jsr CRT_WRITELN
 19374 7AA6			l_4B24
 19375
 19376 				; optimize OK (store.pas), line = 144
 19377
 19378 7AA6 AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19379 7AAB AC A4 BA			ldy CHOICE
 19380 7AAE B1 80			lda (:bp),y
 19381 7AB0 C9 03			cmp #$03
 19382 7AB2 D0 2B			jne l_4B41
 19383
 19384 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', store.pas), line = 145
 19385
 19386 7AB4 E8				inx
 19387 7AB5 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 19388 7ABA AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 19389 7ABF 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 19390
 19391 				; optimize OK (store.pas), line = 146
 19392
 19393 7AC2 AD A9 BA			lda P
 19394 7AC5 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 19395 7AC8 AD AA BA			lda P+1
 19396 7ACB 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 19397 7ACE 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 19398
 19399 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 147
 19400
 19401 7AD1 E8				inx
 19402 7AD2 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 19403 7AD7 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 19404 7ADC 20 80 21			jsr CRT_WRITELN
 19405 7ADF			l_4B41
 19406
 19407 				; optimize OK (store.pas), line = 150
 19408
 19409 7ADF AC A5 BA 84 81		mvy CHOICE+1 :bp+1
 19410 7AE4 AC A4 BA			ldy CHOICE
 19411 7AE7 B1 80			lda (:bp),y
 19412 7AE9 C9 04			cmp #$04
 19413 7AEB D0 37			jne l_4B5F
 19414
 19415 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 151
 19416
 19417 7AED E8				inx
 19418 7AEE AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 19419 7AF3 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 19420 7AF8 20 80 21			jsr CRT_WRITELN
 19421
 19422 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', store.pas), line = 152
 19423
 19424 7AFB E8				inx
 19425 7AFC AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 19426 7B01 AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 19427 7B06 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 19428
 19429 				; optimize OK (store.pas), line = 153
 19430
 19431 7B09 AD A9 BA			lda P
 19432 7B0C 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 19433 7B0F AD AA BA			lda P+1
 19434 7B12 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 19435 7B15 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 19436
 19437 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 154
 19438
 19439 7B18 E8				inx
 19440 7B19 A9 9D 95 94			mva #$9D :STACKORIGIN,x
 19441 7B1D A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 19442 7B21 20 80 21			jsr CRT_WRITELN
 19443 7B24			l_4B5F
 19444
 19445 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', store.pas), line = 158
 19446
 19447 7B24 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 19448
 19449 				; optimize FAIL ('CRT_WRITELN2', store.pas), line = 159
 19450
 19451 7B27 E8				inx
 19452 7B28 AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 19453 7B2D AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 19454 7B32 20 4C 21			jsr CRT_WRITELN2
 19455
 19456 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 160
 19457
 19458 7B35 E8				inx
 19459 7B36 AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 19460 7B3B AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 19461 7B40 20 80 21			jsr CRT_WRITELN
 19462
 19463 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 161
 19464
 19465 7B43 E8				inx
 19466 7B44 AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 19467 7B49 AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 19468 7B4E 20 80 21			jsr CRT_WRITELN
 19469
 19470 				; optimize FAIL ('CRT_WRITELN2', store.pas), line = 162
 19471
 19472 7B51 E8				inx
 19473 7B52 AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 19474 7B57 AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 19475 7B5C 20 4C 21			jsr CRT_WRITELN2
 19476
 19477 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', store.pas), line = 163
 19478
 19479 7B5F E8				inx
 19480 7B60 AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 19481 7B65 AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 19482 7B6A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 19483
 19484 				; optimize OK (store.pas), line = 164
 19485
 19486 7B6D A9 01			lda #$01
 19487 7B6F 8D 91 B6			sta READVALUE.MINVALUE
 19488 7B72 A9 00			lda #$00
 19489 7B74 8D 92 B6			sta READVALUE.MINVALUE+1
 19490 7B77 A9 03			lda #$03
 19491 7B79 8D 93 B6			sta READVALUE.MAXVALUE
 19492 7B7C A9 00			lda #$00
 19493 7B7E 8D 94 B6			sta READVALUE.MAXVALUE+1
 19494 7B81 20 EE 21			jsr READVALUE
 19495 7B84 AD 95 B6			lda READVALUE.RESULT
 19496 7B87 8D A7 BA			sta R
 19497
 19498 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', store.pas), line = 165
 19499
 19500 7B8A 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 19501
 19502 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', store.pas), line = 166
 19503
 19504 7B8D 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 19505
 19506 				; optimize OK (store.pas), line = 169
 19507
 19508 7B90 AD A7 BA			lda R
 19509 7B93 C9 01			cmp #$01
 19510 7B95 D0 23			jne l_4B97
 19511
 19512 				; optimize OK (store.pas), line = 170
 19513
 19514 7B97 AD A9 BA			lda P
 19515 7B9A 8D 35 B9			sta ADDMONEY.AMOUNT
 19516 7B9D AD AA BA			lda P+1
 19517 7BA0 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19518 7BA3 20 E3 2A			jsr ADDMONEY
 19519
 19520 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 171
 19521
 19522 7BA6 E8				inx
 19523 7BA7 AD 94 A3 95 94		mva LOC_STRING_23 :STACKORIGIN,x
 19524 7BAC AD 95 A3 95 A4		mva LOC_STRING_23+1 :STACKORIGIN+STACKWIDTH,x
 19525 7BB1 20 80 21			jsr CRT_WRITELN
 19526
 19527 				; optimize FAIL ('WAITFORKEY', store.pas), line = 172
 19528
 19529 7BB4 20 2E 21			jsr WAITFORKEY
 19530 7BB7 4C EA 7D			jmp @exit
 19531 7BBA			l_4B97
 19532
 19533 				; optimize OK (store.pas), line = 176
 19534
 19535 7BBA AD A7 BA			lda R
 19536 7BBD C9 02			cmp #$02
 19537 7BBF F0 03 4C C9 7C		jne l_4BB3
 19538
 19539 				; optimize OK (store.pas), line = 177
 19540
 19541 7BC4 AD AF B8			lda CURRENTSUBLOCATION
 19542 7BC7 F0 07			jeq l_4BD2x
 19543 7BC9 C9 02			cmp #$02
 19544 7BCB F0 03 4C 4D 7C		jne l_4BD2
 19545 7BD0			l_4BD2x
 19546
 19547 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 178
 19548
 19549 7BD0 E8				inx
 19550 7BD1 AD 96 A3 95 94		mva LOC_STRING_24 :STACKORIGIN,x
 19551 7BD6 AD 97 A3 95 A4		mva LOC_STRING_24+1 :STACKORIGIN+STACKWIDTH,x
 19552 7BDB 20 80 21			jsr CRT_WRITELN
 19553
 19554 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 179
 19555
 19556 7BDE E8				inx
 19557 7BDF AD 98 A3 95 94		mva LOC_STRING_25 :STACKORIGIN,x
 19558 7BE4 AD 99 A3 95 A4		mva LOC_STRING_25+1 :STACKORIGIN+STACKWIDTH,x
 19559 7BE9 20 80 21			jsr CRT_WRITELN
 19560
 19561 				; optimize FAIL ('WAITFORKEY', store.pas), line = 180
 19562
 19563 7BEC 20 2E 21			jsr WAITFORKEY
 19564
 19565 				; -------------------  ASM Block 00000171  -------------------
 19566
 19567 				; 
 19568 7BEF AD 9A A3		                lda loc_string_26
 19569 7BF2 8D 7A B0		                sta adr.FP_GANG+$02
 19570 7BF5 AD 9B A3		                lda loc_string_26+1
 19571 7BF8 8D 7B B0		                sta adr.FP_GANG+1+$02
 19572 				            
 19573 				; optimize OK (store.pas), line = 190
 19574
 19575 7BFB A9 01			lda #$01
 19576 7BFD 8D 02 EC			sta adr.FP_AI+$01
 19577
 19578 				; optimize OK (store.pas), line = 191
 19579
 19580 7C00 A9 05			lda #$05
 19581 7C02 8D 04 EC			sta adr.FP_N+$01
 19582
 19583 				; -------------------  ASM Block 00000172  -------------------
 19584
 19585 7C05 A0 00		                ldy #$00
 19586 				            @:
 19587 7C07 98			                tya 
 19588 7C08 0A			                asl 
 19589 7C09 A8			                tay
 19590
 19591 7C0A AD 9A A3		                lda loc_string_26
 19592 7C0D 99 9C B0		                sta adr.FP_NAME+$20,y
 19593 7C10 AD 9B A3		                lda loc_string_26+1
 19594 7C13 99 9D B0		                sta adr.FP_NAME+1+$20,y
 19595
 19596 7C16 98			                tya
 19597 7C17 4A			                lsr 
 19598 7C18 A8			                tay
 19599
 19600 7C19 A9 1E		                lda #30
 19601 7C1B 99 95 EC		                sta adr.FP_ENERGY+$10,y
 19602 7C1E A9 03		                lda #03
 19603 7C20 99 55 EC		                sta adr.FP_WEAPON+$10,y
 19604 7C23 C8			                iny
 19605 7C24 CC 04 EC		                cpy adr.FP_N+$01
 19606 7C27 D0 DE		                bne @- 
 19607 				            
 19608 				; optimize FAIL ('DOFIGHT', store.pas), line = 225
 19609
 19610 7C29 20 44 49			jsr DOFIGHT
 19611 7C2C AD E6 B9			lda DOFIGHT.RESULT
 19612 7C2F C9 01			cmp #$01
 19613 7C31 D0 08			jne l_4BF4
 19614
 19615 				; optimize OK (store.pas), line = 227
 19616
 19617 7C33 A9 11			lda #$11
 19618 7C35 8D A6 BA			sta RESULT
 19619 7C38 4C EA 7D			jmp @exit
 19620 7C3B			l_4BF4
 19621
 19622 				; optimize OK (store.pas), line = 230
 19623
 19624 7C3B AD A9 BA			lda P
 19625 7C3E 8D 35 B9			sta ADDMONEY.AMOUNT
 19626 7C41 AD AA BA			lda P+1
 19627 7C44 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19628 7C47 20 E3 2A			jsr ADDMONEY
 19629 7C4A 4C C9 7C			jmp l_4C07
 19630 7C4D			l_4BD2
 19631
 19632 				; optimize OK (store.pas), line = 234
 19633
 19634 7C4D A9 C8			lda #$C8
 19635 7C4F 20 CB 15			jsr SYSTEM.RANDOM_02E9
 19636 7C52 E8				inx
 19637 7C53 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 19638 7C56 18 69 2C			add #$2C
 19639 7C59 8D AB BA			sta Q
 19640 7C5C A9 00			lda #$00
 19641 7C5E 69 01			adc #$01
 19642 7C60 8D AC BA			sta Q+1
 19643
 19644 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 235
 19645
 19646 7C63 AD 9C A3 95 94		mva LOC_STRING_27 :STACKORIGIN,x
 19647 7C68 AD 9D A3 95 A4		mva LOC_STRING_27+1 :STACKORIGIN+STACKWIDTH,x
 19648 7C6D 20 80 21			jsr CRT_WRITELN
 19649
 19650 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 236
 19651
 19652 7C70 E8				inx
 19653 7C71 AD 9E A3 95 94		mva LOC_STRING_28 :STACKORIGIN,x
 19654 7C76 AD 9F A3 95 A4		mva LOC_STRING_28+1 :STACKORIGIN+STACKWIDTH,x
 19655 7C7B 20 80 21			jsr CRT_WRITELN
 19656
 19657 				; optimize OK (store.pas), line = 237
 19658
 19659 7C7E AD AB BA			lda Q
 19660 7C81 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 19661 7C84 AD AC BA			lda Q+1
 19662 7C87 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 19663 7C8A 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 19664
 19665 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 238
 19666
 19667 7C8D E8				inx
 19668 7C8E A9 1E 95 94			mva #$1E :STACKORIGIN,x
 19669 7C92 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 19670 7C96 20 80 21			jsr CRT_WRITELN
 19671
 19672 				; optimize OK (store.pas), line = 239
 19673
 19674 7C99 AD A9 BA			lda P
 19675 7C9C 8D 35 B9			sta ADDMONEY.AMOUNT
 19676 7C9F AD AA BA			lda P+1
 19677 7CA2 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19678 7CA5 20 E3 2A			jsr ADDMONEY
 19679
 19680 				; optimize OK (store.pas), line = 240
 19681
 19682 7CA8 AD AB BA			lda Q
 19683 7CAB 8D 35 B9			sta ADDMONEY.AMOUNT
 19684 7CAE AD AC BA			lda Q+1
 19685 7CB1 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19686 7CB4 20 E3 2A			jsr ADDMONEY
 19687
 19688 				; optimize OK (store.pas), line = 241
 19689
 19690 7CB7 AC 1A E4			ldy CURRENTPLAYER
 19691 7CBA B9 80 E0			lda adr.PLNEWPOINTS,y
 19692 7CBD 18 69 01			add #$01
 19693 7CC0 99 80 E0			sta adr.PLNEWPOINTS,y
 19694
 19695 				; optimize FAIL ('WAITFORKEY', store.pas), line = 242
 19696
 19697 7CC3 20 2E 21			jsr WAITFORKEY
 19698 7CC6 4C EA 7D			jmp @exit
 19699 7CC9			l_4C07
 19700 7CC9			l_4BB3
 19701
 19702 				; optimize OK (store.pas), line = 247
 19703
 19704 7CC9 AD A7 BA			lda R
 19705 7CCC C9 03			cmp #$03
 19706 7CCE F0 03 4C EA 7D		jne l_4C46
 19707
 19708 				; optimize OK (store.pas), line = 248
 19709
 19710 7CD3 AD AF B8			lda CURRENTSUBLOCATION
 19711 7CD6 C9 03			cmp #$03
 19712 7CD8 F0 07			jeq l_4C65x
 19713 7CDA C9 04			cmp #$04
 19714 7CDC F0 03 4C 64 7D		jne l_4C65
 19715 7CE1			l_4C65x
 19716
 19717 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 250
 19718
 19719 7CE1 E8				inx
 19720 7CE2 AD A0 A3 95 94		mva LOC_STRING_29 :STACKORIGIN,x
 19721 7CE7 AD A1 A3 95 A4		mva LOC_STRING_29+1 :STACKORIGIN+STACKWIDTH,x
 19722 7CEC 20 80 21			jsr CRT_WRITELN
 19723
 19724 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 251
 19725
 19726 7CEF E8				inx
 19727 7CF0 AD A2 A3 95 94		mva LOC_STRING_30 :STACKORIGIN,x
 19728 7CF5 AD A3 A3 95 A4		mva LOC_STRING_30+1 :STACKORIGIN+STACKWIDTH,x
 19729 7CFA 20 80 21			jsr CRT_WRITELN
 19730
 19731 				; -------------------  ASM Block 00000173  -------------------
 19732
 19733 				; 
 19734 7CFD AD A4 A3		                lda loc_string_31
 19735 7D00 8D 7A B0		                sta adr.FP_GANG+$02
 19736 7D03 AD A5 A3		                lda loc_string_31+1
 19737 7D06 8D 7B B0		                sta adr.FP_GANG+1+$02
 19738 				            
 19739 				; optimize OK (store.pas), line = 260
 19740
 19741 7D09 A9 01			lda #$01
 19742 7D0B 8D 02 EC			sta adr.FP_AI+$01
 19743
 19744 				; optimize OK (store.pas), line = 261
 19745
 19746 7D0E 8D 04 EC			sta adr.FP_N+$01
 19747
 19748 				; optimize OK (store.pas), line = 262
 19749
 19750 7D11 AD 9C B0			lda adr.FP_NAME+$20
 19751 7D14 85 8C			sta @move.dst
 19752 7D16 AD 9D B0			lda adr.FP_NAME+1+$20
 19753 7D19 85 8D			sta @move.dst+1
 19754 7D1B AD A4 A3			lda LOC_STRING_31
 19755 7D1E 85 88			sta @move.src
 19756 7D20 AD A5 A3			lda LOC_STRING_31+1
 19757 7D23 85 89			sta @move.src+1
 19758 7D25 A0 00			ldy #$00
 19759 7D27 B1 88			lda (@move.src),y
 19760 7D29 18 69 01			add #1
 19761 7D2C 85 84			sta @move.cnt
 19762 7D2E 90 01			scc
 19763 7D30 C8				iny
 19764 7D31 84 85			sty @move.cnt+1
 19765 7D33 20 35 10			jsr @move
 19766
 19767 				; optimize OK (store.pas), line = 263
 19768
 19769 7D36 A9 07			lda #$07
 19770 7D38 8D 55 EC			sta adr.FP_WEAPON+$10
 19771
 19772 				; optimize OK (store.pas), line = 264
 19773
 19774 7D3B A9 1E			lda #$1E
 19775 7D3D 8D 95 EC			sta adr.FP_ENERGY+$10
 19776
 19777 				; optimize FAIL ('DOFIGHT', store.pas), line = 266
 19778
 19779 7D40 20 44 49			jsr DOFIGHT
 19780 7D43 AD E6 B9			lda DOFIGHT.RESULT
 19781 7D46 C9 01			cmp #$01
 19782 7D48 D0 08			jne l_4C96
 19783
 19784 				; optimize OK (store.pas), line = 268
 19785
 19786 7D4A A9 11			lda #$11
 19787 7D4C 8D A6 BA			sta RESULT
 19788 7D4F 4C EA 7D			jmp @exit
 19789 7D52			l_4C96
 19790
 19791 				; optimize OK (store.pas), line = 271
 19792
 19793 7D52 AD A9 BA			lda P
 19794 7D55 8D 35 B9			sta ADDMONEY.AMOUNT
 19795 7D58 AD AA BA			lda P+1
 19796 7D5B 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19797 7D5E 20 E3 2A			jsr ADDMONEY
 19798 7D61 4C EA 7D			jmp l_4CA9
 19799 7D64			l_4C65
 19800
 19801 				; optimize OK (store.pas), line = 275
 19802
 19803 7D64 A9 64			lda #$64
 19804 7D66 20 CB 15			jsr SYSTEM.RANDOM_02E9
 19805 7D69 E8				inx
 19806 7D6A AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 19807 7D6F E8				inx
 19808 7D70 A9 01 95 94			mva #$01 :STACKORIGIN,x
 19809 7D74 20 87 0F			jsr shlEAX_CL.BYTE
 19810 7D77 A9 96 95 94			mva #$96 :STACKORIGIN,x
 19811 7D7B A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 19812 7D7F 95 B4			sta :STACKORIGIN+STACKWIDTH*2,x
 19813 7D81 95 C4			sta :STACKORIGIN+STACKWIDTH*3,x
 19814 7D83 20 70 0F			jsr addAX_CX
 19815 7D86 CA				dex
 19816 7D87 B5 94			lda :STACKORIGIN,x
 19817 7D89 8D AB BA			sta Q
 19818 7D8C B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 19819 7D8E 8D AC BA			sta Q+1
 19820
 19821 				; optimize FAIL ('CRT_WRITELN', store.pas), line = 276
 19822
 19823 7D91 AD A6 A3 95 94		mva LOC_STRING_32 :STACKORIGIN,x
 19824 7D96 AD A7 A3 95 A4		mva LOC_STRING_32+1 :STACKORIGIN+STACKWIDTH,x
 19825 7D9B 20 80 21			jsr CRT_WRITELN
 19826
 19827 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', store.pas), line = 277
 19828
 19829 7D9E E8				inx
 19830 7D9F AD A8 A3 95 94		mva LOC_STRING_33 :STACKORIGIN,x
 19831 7DA4 AD A9 A3 95 A4		mva LOC_STRING_33+1 :STACKORIGIN+STACKWIDTH,x
 19832 7DA9 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 19833
 19834 				; optimize OK (store.pas), line = 278
 19835
 19836 7DAC AD AB BA			lda Q
 19837 7DAF 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 19838 7DB2 AD AC BA			lda Q+1
 19839 7DB5 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 19840 7DB8 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 19841
 19842 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', store.pas), line = 279
 19843
 19844 7DBB E8				inx
 19845 7DBC AD AA A3 95 94		mva LOC_STRING_34 :STACKORIGIN,x
 19846 7DC1 AD AB A3 95 A4		mva LOC_STRING_34+1 :STACKORIGIN+STACKWIDTH,x
 19847 7DC6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 19848
 19849 				; optimize OK (store.pas), line = 280
 19850
 19851 7DC9 AD A9 BA			lda P
 19852 7DCC 8D 35 B9			sta ADDMONEY.AMOUNT
 19853 7DCF AD AA BA			lda P+1
 19854 7DD2 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19855 7DD5 20 E3 2A			jsr ADDMONEY
 19856
 19857 				; optimize OK (store.pas), line = 281
 19858
 19859 7DD8 AD AB BA			lda Q
 19860 7DDB 8D 35 B9			sta ADDMONEY.AMOUNT
 19861 7DDE AD AC BA			lda Q+1
 19862 7DE1 8D 36 B9			sta ADDMONEY.AMOUNT+1
 19863 7DE4 20 E3 2A			jsr ADDMONEY
 19864
 19865 				; optimize FAIL ('WAITFORKEY', store.pas), line = 282
 19866
 19867 7DE7 20 2E 21			jsr WAITFORKEY
 19868 7DEA			l_4CA9
 19869 7DEA			l_4C46
 19870 7DEA			@exit
 19871
 19872 				; ------------------------------------------------------------
 19873
 19874 = BAA4			CHOICE	= DATAORIGIN+$162F
 19875 = BAA6			RESULT	= DATAORIGIN+$1631
 19876 = BAA7			R	= DATAORIGIN+$1632
 19877 = BAA8			K	= DATAORIGIN+$1633
 19878 = BAA9			P	= DATAORIGIN+$1634
 19879 = BAAB			Q	= DATAORIGIN+$1636
 19880
 19881 = BAA4			@VarData	= CHOICE
 19882 = 0008			@VarDataSize	= 8
 19883
 19884 7DEA 60				rts						; ret
 19885 				.endl
 19886
 19887 7DEB			.local	SUBWAYCHOICES					; FUNCTION
 19888
 19889 				; optimize OK (subway.pas), line = 9
 19890
 19891 7DEB A9 0C			lda #$0C
 19892 7DED 8D B0 BA			sta RESULT
 19893
 19894 				; optimize FAIL ('SHOWLOCATIONHEADER', subway.pas), line = 10
 19895
 19896 7DF0 20 1D 26			jsr SHOWLOCATIONHEADER
 19897
 19898 				; optimize OK (subway.pas), line = 12
 19899
 19900 7DF3 AC AF BA 84 81		mvy CHOICE+1 :bp+1
 19901 7DF8 AC AE BA			ldy CHOICE
 19902 7DFB B1 80			lda (:bp),y
 19903 7DFD C9 02			cmp #$02
 19904 7DFF F0 03 4C B7 7E		jne l_4CE6
 19905
 19906 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 14
 19907
 19908 7E04 E8				inx
 19909 7E05 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 19910 7E0A AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 19911 7E0F 20 80 21			jsr CRT_WRITELN
 19912
 19913 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 15
 19914
 19915 7E12 E8				inx
 19916 7E13 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 19917 7E18 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 19918 7E1D 20 80 21			jsr CRT_WRITELN
 19919
 19920 				; optimize FAIL ('GETYESNO', subway.pas), line = 16
 19921
 19922 7E20 20 DA 21			jsr GETYESNO
 19923 7E23 AD 90 B6			lda GETYESNO.RESULT
 19924 7E26 D0 03			jne l_4CFD
 19925 7E28 4C AE 80			jmp @exit
 19926 7E2B			l_4CFD
 19927
 19928 				; optimize OK (subway.pas), line = 17
 19929
 19930 7E2B A9 32			lda #$32
 19931 7E2D 8D 40 B9			sta PAYMONEY.PRICE
 19932 7E30 A9 00			lda #$00
 19933 7E32 8D 41 B9			sta PAYMONEY.PRICE+1
 19934 7E35 20 98 2D			jsr PAYMONEY
 19935 7E38 AD 42 B9			lda PAYMONEY.RESULT
 19936 7E3B D0 03			jne l_4D11
 19937 7E3D 4C AE 80			jmp @exit
 19938 7E40			l_4D11
 19939
 19940 				; optimize OK (subway.pas), line = 18
 19941
 19942 7E40 A9 04			lda #$04
 19943 7E42 20 CB 15			jsr SYSTEM.RANDOM_02E9
 19944 7E45 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 19945 7E48 8D B1 BA			sta LOOT
 19946
 19947 				; optimize OK (subway.pas), line = 19
 19948
 19949 7E4B 8D B8 BA			sta @CASETMP_0014
 19950 7E4E C9 00			cmp #$00
 19951 7E50 D0 10			jne l_4D24
 19952 				@
 19953
 19954 				; optimize OK (subway.pas), line = 21
 19955
 19956 7E52 A9 08			lda #$08
 19957 7E54 8D B5 BA			sta I
 19958 7E57 A9 02			lda #$02
 19959 7E59 8D B6 BA			sta J
 19960 7E5C 8D B7 BA			sta K
 19961 7E5F 4C 9F 7E			jmp a_0014
 19962 7E62			l_4D24
 19963 7E62 C9 01			cmp #$01
 19964 7E64 D0 12			jne l_4D39
 19965
 19966 				; optimize OK (subway.pas), line = 24
 19967
 19968 7E66 A9 04			lda #$04
 19969 7E68 8D B5 BA			sta I
 19970 7E6B A9 01			lda #$01
 19971 7E6D 8D B6 BA			sta J
 19972 7E70 A9 05			lda #$05
 19973 7E72 8D B7 BA			sta K
 19974 7E75 4C 9F 7E			jmp a_0014
 19975 7E78			l_4D39
 19976 7E78 C9 02			cmp #$02
 19977 7E7A D0 12			jne l_4D4E
 19978
 19979 				; optimize OK (subway.pas), line = 27
 19980
 19981 7E7C A9 08			lda #$08
 19982 7E7E 8D B5 BA			sta I
 19983 7E81 A9 03			lda #$03
 19984 7E83 8D B6 BA			sta J
 19985 7E86 A9 09			lda #$09
 19986 7E88 8D B7 BA			sta K
 19987 7E8B 4C 9F 7E			jmp a_0014
 19988 7E8E			l_4D4E
 19989 7E8E C9 03			cmp #$03
 19990 7E90 D0 0D			jne l_4D63
 19991
 19992 				; optimize OK (subway.pas), line = 30
 19993
 19994 7E92 A9 04			lda #$04
 19995 7E94 8D B5 BA			sta I
 19996 7E97 A9 07			lda #$07
 19997 7E99 8D B6 BA			sta J
 19998 7E9C 8D B7 BA			sta K
 19999 7E9F			l_4D63
 20000 7E9F			a_0014
 20001
 20002 				; optimize OK (subway.pas), line = 34
 20003
 20004 7E9F AC 1A E4			ldy CURRENTPLAYER
 20005 7EA2 AD B5 BA			lda I
 20006 7EA5 99 34 E0			sta adr.PLMAPPOSX,y
 20007
 20008 				; optimize OK (subway.pas), line = 35
 20009
 20010 7EA8 AD B6 BA			lda J
 20011 7EAB 99 38 E0			sta adr.PLMAPPOSY,y
 20012
 20013 				; optimize OK (subway.pas), line = 36
 20014
 20015 7EAE AD B7 BA			lda K
 20016 7EB1 99 3C E0			sta adr.PLCURRENTMAP,y
 20017
 20018 				; optimize FAIL ('PLACECURRENTPLAYER', subway.pas), line = 37
 20019
 20020 7EB4 20 A9 2A			jsr PLACECURRENTPLAYER
 20021 7EB7			l_4CE6
 20022
 20023 				; optimize OK (subway.pas), line = 40
 20024
 20025 7EB7 AC AF BA 84 81		mvy CHOICE+1 :bp+1
 20026 7EBC AC AE BA			ldy CHOICE
 20027 7EBF B1 80			lda (:bp),y
 20028 7EC1 C9 01			cmp #$01
 20029 7EC3 D0 25			jne l_4DA7
 20030
 20031 				; optimize OK (subway.pas), line = 42
 20032
 20033 7EC5 AC 1A E4			ldy CURRENTPLAYER
 20034 7EC8 B9 41 E4			lda adr.PLNGANGSTERS,y
 20035 7ECB C9 02			cmp #$02
 20036 7ECD 90 0E			jcc l_4DBD
 20037
 20038 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 43
 20039
 20040 7ECF E8				inx
 20041 7ED0 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 20042 7ED5 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 20043 7EDA 20 80 21			jsr CRT_WRITELN
 20044 7EDD			l_4DBD
 20045
 20046 				; optimize FAIL ('SELECTGANGSTER', subway.pas), line = 44
 20047
 20048 7EDD 20 21 2E			jsr SELECTGANGSTER
 20049
 20050 				; optimize OK (subway.pas), line = 45
 20051
 20052 7EE0 AD 18 E4			lda CURRENTGANGSTER
 20053 7EE3 C9 63			cmp #$63
 20054 7EE5 D0 03			jne l_4DD6
 20055 7EE7 4C AE 80			jmp @exit
 20056 7EEA			l_4DD6
 20057 7EEA			l_4DA7
 20058
 20059 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', subway.pas), line = 47
 20060
 20061 7EEA 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 20062
 20063 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 48
 20064
 20065 7EED E8				inx
 20066 7EEE AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 20067 7EF3 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 20068 7EF8 20 80 21			jsr CRT_WRITELN
 20069
 20070 				; optimize OK (subway.pas), line = 49
 20071
 20072 7EFB A9 5A			lda #$5A
 20073 7EFD 20 60 25			jsr WAITFRAMES
 20074
 20075 				; optimize OK (subway.pas), line = 53
 20076
 20077 7F00 AC 18 E4			ldy CURRENTGANGSTER
 20078 7F03 B9 78 E3			lda adr.GANGSTERINT,y
 20079 7F06 20 CB 15			jsr SYSTEM.RANDOM_02E9
 20080 7F09 E8				inx
 20081 7F0A A0 01			ldy #1
 20082 7F0C AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 20083 7F0F C9 0A			cmp #$0A
 20084 7F11 90 01			bcc @+
 20085 7F13 88				dey
 20086 				@
 20087 7F14 98				tya
 20088 7F15 8D B4 BA			sta HOPS
 20089 7F18 CA				dex
 20090
 20091 				; optimize OK (subway.pas), line = 54
 20092
 20093 7F19 A9 11			lda #$11
 20094 7F1B 20 CB 15			jsr SYSTEM.RANDOM_02E9
 20095 7F1E E8				inx
 20096 7F1F AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 20097 7F24 E8				inx
 20098 7F25 A9 01 95 94			mva #$01 :STACKORIGIN,x
 20099 7F29 20 A4 0F			jsr shrAL_CL.BYTE
 20100 7F2C CA				dex
 20101 7F2D B5 94			lda :STACKORIGIN,x
 20102 7F2F 8D B1 BA			sta LOOT
 20103
 20104 				; optimize FAIL (1, subway.pas), line = 55
 20105
 20106 7F32 AD B1 BA 95 94		mva LOOT :STACKORIGIN,x
 20107 7F37 AD AF B8			lda CURRENTSUBLOCATION
 20108 7F3A 18 69 01			add #$01
 20109 7F3D 8D 82 A4			sta SYSTEM.RANDOM_02EA.RANGE
 20110 7F40 A9 00			lda #$00
 20111 7F42 69 00			adc #$00
 20112 7F44 8D 83 A4			sta SYSTEM.RANDOM_02EA.RANGE+1
 20113 7F47 20 E2 15			jsr SYSTEM.RANDOM_02EA
 20114 7F4A E8				inx
 20115 7F4B AD 84 A4 95 94		mva SYSTEM.RANDOM_02EA.RESULT :STACKORIGIN,x
 20116 7F50 AD 85 A4 95 A4		mva SYSTEM.RANDOM_02EA.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 20117 7F55 20 FF 0F			jsr @expandSHORT2SMALL1
 20118 7F58 B5 93			lda :STACKORIGIN-1,x
 20119 7F5A 38 F5 94			sub :STACKORIGIN,x
 20120 7F5D 8D B1 BA			sta LOOT
 20121 7F60 CA				dex
 20122 7F61 CA				dex
 20123
 20124 				; optimize OK (subway.pas), line = 56
 20125
 20126 7F62 AD B1 BA			lda LOOT
 20127 7F65 10 05			jpl l_4E1D
 20128 7F67 A9 00			lda #$00
 20129 7F69 8D B1 BA			sta LOOT
 20130 7F6C			l_4E1D
 20131
 20132 				; optimize OK (subway.pas), line = 57
 20133
 20134 7F6C AD B4 BA			lda HOPS
 20135 7F6F C9 01			cmp #$01
 20136 7F71 D0 05			jne l_4E36
 20137 7F73 A9 00			lda #$00
 20138 7F75 8D B1 BA			sta LOOT
 20139 7F78			l_4E36
 20140
 20141 				; optimize OK (subway.pas), line = 58
 20142
 20143 7F78 A9 00			lda #$00
 20144 7F7A 8D B2 BA			sta VALUE
 20145 7F7D 8D B3 BA			sta VALUE+1
 20146
 20147 				; optimize OK (subway.pas), line = 59
 20148
 20149 7F80 AD B1 BA			lda LOOT
 20150 7F83 8D B9 BA			sta @CASETMP_0015
 20151 7F86 C9 00			cmp #$00
 20152 7F88 F0 04			beq @+
 20153 7F8A C9 01			cmp #$01
 20154 7F8C D0 11			jne l_4E4E
 20155 				@
 20156
 20157 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 60
 20158
 20159 7F8E E8				inx
 20160 7F8F AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 20161 7F94 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 20162 7F99 20 80 21			jsr CRT_WRITELN
 20163 7F9C 4C 68 80			jmp a_0015
 20164 7F9F			l_4E4E
 20165 7F9F C9 02			cmp #$02
 20166 7FA1 D0 11			jne l_4E5A
 20167
 20168 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 61
 20169
 20170 7FA3 E8				inx
 20171 7FA4 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 20172 7FA9 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 20173 7FAE 20 80 21			jsr CRT_WRITELN
 20174 7FB1 4C 68 80			jmp a_0015
 20175 7FB4			l_4E5A
 20176 7FB4 C9 03			cmp #$03
 20177 7FB6 D0 11			jne l_4E66
 20178
 20179 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 62
 20180
 20181 7FB8 E8				inx
 20182 7FB9 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 20183 7FBE AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 20184 7FC3 20 80 21			jsr CRT_WRITELN
 20185 7FC6 4C 68 80			jmp a_0015
 20186 7FC9			l_4E66
 20187 7FC9 C9 04			cmp #$04
 20188 7FCB D0 1B			jne l_4E72
 20189
 20190 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 64
 20191
 20192 7FCD E8				inx
 20193 7FCE AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 20194 7FD3 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 20195 7FD8 20 80 21			jsr CRT_WRITELN
 20196
 20197 				; optimize OK (subway.pas), line = 65
 20198
 20199 7FDB A9 32			lda #$32
 20200 7FDD 8D B2 BA			sta VALUE
 20201 7FE0 A9 00			lda #$00
 20202 7FE2 8D B3 BA			sta VALUE+1
 20203 7FE5 4C 68 80			jmp a_0015
 20204 7FE8			l_4E72
 20205 7FE8 C9 05			cmp #$05
 20206 7FEA D0 1B			jne l_4E82
 20207
 20208 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 68
 20209
 20210 7FEC E8				inx
 20211 7FED AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 20212 7FF2 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 20213 7FF7 20 80 21			jsr CRT_WRITELN
 20214
 20215 				; optimize OK (subway.pas), line = 69
 20216
 20217 7FFA A9 FA			lda #$FA
 20218 7FFC 8D B2 BA			sta VALUE
 20219 7FFF A9 00			lda #$00
 20220 8001 8D B3 BA			sta VALUE+1
 20221 8004 4C 68 80			jmp a_0015
 20222 8007			l_4E82
 20223 8007 C9 06			cmp #$06
 20224 8009 D0 1B			jne l_4E92
 20225
 20226 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 72
 20227
 20228 800B E8				inx
 20229 800C AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 20230 8011 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 20231 8016 20 80 21			jsr CRT_WRITELN
 20232
 20233 				; optimize OK (subway.pas), line = 73
 20234
 20235 8019 A9 F4			lda #$F4
 20236 801B 8D B2 BA			sta VALUE
 20237 801E A9 01			lda #$01
 20238 8020 8D B3 BA			sta VALUE+1
 20239 8023 4C 68 80			jmp a_0015
 20240 8026			l_4E92
 20241 8026 C9 07			cmp #$07
 20242 8028 D0 1B			jne l_4EA2
 20243
 20244 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 76
 20245
 20246 802A E8				inx
 20247 802B AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 20248 8030 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 20249 8035 20 80 21			jsr CRT_WRITELN
 20250
 20251 				; optimize OK (subway.pas), line = 77
 20252
 20253 8038 A9 20			lda #$20
 20254 803A 8D B2 BA			sta VALUE
 20255 803D A9 03			lda #$03
 20256 803F 8D B3 BA			sta VALUE+1
 20257 8042 4C 68 80			jmp a_0015
 20258 8045			l_4EA2
 20259 8045 C9 08			cmp #$08
 20260 8047 D0 1F			jne l_4EB2
 20261
 20262 				; optimize FAIL ('CRT_WRITELN', subway.pas), line = 80
 20263
 20264 8049 E8				inx
 20265 804A AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 20266 804F AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 20267 8054 20 80 21			jsr CRT_WRITELN
 20268
 20269 				; optimize OK (subway.pas), line = 81
 20270
 20271 8057 AC 1A E4			ldy CURRENTPLAYER
 20272 805A B9 04 E0			lda adr.PLSTUFF,y
 20273 805D 09 20			ora #$20
 20274 805F 99 04 E0			sta adr.PLSTUFF,y
 20275
 20276 				; optimize FAIL ('WAITFORKEY', subway.pas), line = 82
 20277
 20278 8062 20 2E 21			jsr WAITFORKEY
 20279 8065 4C AE 80			jmp @exit
 20280 8068			l_4EB2
 20281 8068			a_0015
 20282
 20283 				; optimize FAIL ('WAITFORKEY', subway.pas), line = 86
 20284
 20285 8068 20 2E 21			jsr WAITFORKEY
 20286
 20287 				; optimize OK (subway.pas), line = 87
 20288
 20289 806B AD B1 BA			lda LOOT
 20290 806E 38 E9 02			sub #$02
 20291 8071 50 02			svc
 20292 8073 49 80			eor #$80
 20293 8075 10 0B			jpl l_4EE5
 20294
 20295 				; optimize FAIL ('GOTCAUGHT', subway.pas), line = 88
 20296
 20297 8077 20 7C 32			jsr GOTCAUGHT
 20298
 20299 				; optimize OK (subway.pas), line = 89
 20300
 20301 807A A9 11			lda #$11
 20302 807C 8D B0 BA			sta RESULT
 20303 807F 4C AE 80			jmp @exit
 20304 8082			l_4EE5
 20305
 20306 				; optimize OK (subway.pas), line = 92
 20307
 20308 8082 AC AF BA 84 81		mvy CHOICE+1 :bp+1
 20309 8087 AC AE BA			ldy CHOICE
 20310 808A B1 80			lda (:bp),y
 20311 808C C9 02			cmp #$02
 20312 808E D0 03			jne l_4EFF
 20313 8090 20 2A 89			jsr LOADMAP
 20314 8093			l_4EFF
 20315
 20316 				; optimize OK (subway.pas), line = 93
 20317
 20318 8093 AD B2 BA			lda VALUE
 20319 8096 8D 35 B9			sta ADDMONEY.AMOUNT
 20320 8099 AD B3 BA			lda VALUE+1
 20321 809C 8D 36 B9			sta ADDMONEY.AMOUNT+1
 20322 809F 20 E3 2A			jsr ADDMONEY
 20323
 20324 				; optimize OK (subway.pas), line = 94
 20325
 20326 80A2 AC 1A E4			ldy CURRENTPLAYER
 20327 80A5 B9 80 E0			lda adr.PLNEWPOINTS,y
 20328 80A8 18 69 01			add #$01
 20329 80AB 99 80 E0			sta adr.PLNEWPOINTS,y
 20330 80AE			@exit
 20331
 20332 				; ------------------------------------------------------------
 20333
 20334 = BAAE			CHOICE	= DATAORIGIN+$1639
 20335 = BAB0			RESULT	= DATAORIGIN+$163B
 20336 = BAB1			LOOT	= DATAORIGIN+$163C
 20337 = BAB2			VALUE	= DATAORIGIN+$163D
 20338 = BAB4			HOPS	= DATAORIGIN+$163F
 20339 = BAB5			I	= DATAORIGIN+$1640
 20340 = BAB6			J	= DATAORIGIN+$1641
 20341 = BAB7			K	= DATAORIGIN+$1642
 20342 = BAB8			@CASETMP_0014	= DATAORIGIN+$1643
 20343 = BAB9			@CASETMP_0015	= DATAORIGIN+$1644
 20344
 20345 = BAAE			@VarData	= CHOICE
 20346 = 000B			@VarDataSize	= 11
 20347
 20348 80AE 60				rts						; ret
 20349 				.endl
 20350
 20351 80AF			.local	CENTRALSTATIONCHOICES				; FUNCTION
 20352
 20353 				; optimize OK (centralstation.pas), line = 6
 20354
 20355 80AF A9 17			lda #$17
 20356 80B1 8D BC BA			sta RESULT
 20357
 20358 				; optimize OK (centralstation.pas), line = 7
 20359
 20360 80B4 AC BB BA 84 81		mvy CHOICE+1 :bp+1
 20361 80B9 AC BA BA			ldy CHOICE
 20362 80BC B1 80			lda (:bp),y
 20363 80BE C9 01			cmp #$01
 20364 80C0 D0 4A			jne l_4F30
 20365
 20366 				; optimize OK (centralstation.pas), line = 9
 20367
 20368 80C2 A9 07			lda #$07
 20369 80C4 20 B3 26			jsr LOADLOCATION
 20370
 20371 				; optimize OK (centralstation.pas), line = 10
 20372
 20373 80C7 A9 07			lda #$07
 20374 80C9 20 86 28			jsr SHOWLOCATION
 20375 80CC AC BA BA 84 82 AC + 	mwy CHOICE :bp2
 20376 80D6 A0 00			ldy #$00
 20377 80D8 AD 08 B9			lda SHOWLOCATION.RESULT
 20378 80DB 91 82			sta (:bp2),y
 20379
 20380 				; optimize OK (centralstation.pas), line = 11
 20381
 20382 80DD AC BB BA 84 81		mvy CHOICE+1 :bp+1
 20383 80E2 AC BA BA			ldy CHOICE
 20384 80E5 B1 80			lda (:bp),y
 20385 80E7 CD 29 C1			cmp LOC_NOPTIONS
 20386 80EA D0 08			jne l_4F4C
 20387
 20388 				; optimize OK (centralstation.pas), line = 13
 20389
 20390 80EC A9 0F			lda #$0F
 20391 80EE 8D AE B8			sta CURRENTLOCATION
 20392 80F1 4C 2B 82			jmp @exit
 20393 80F4			l_4F4C
 20394
 20395 				; optimize OK (centralstation.pas), line = 16
 20396
 20397 80F4 AD BA BA			lda CHOICE
 20398 80F7 8D 8F BA			sta PUBCHOICES.CHOICE
 20399 80FA AD BB BA			lda CHOICE+1
 20400 80FD 8D 90 BA			sta PUBCHOICES.CHOICE+1
 20401 8100 20 33 6E			jsr PUBCHOICES
 20402 8103 AD 91 BA			lda PUBCHOICES.RESULT
 20403 8106 8D BC BA			sta RESULT
 20404 8109 4C 2B 82			jmp @exit
 20405 810C			l_4F30
 20406
 20407 				; optimize OK (centralstation.pas), line = 20
 20408
 20409 810C AC BB BA 84 81		mvy CHOICE+1 :bp+1
 20410 8111 AC BA BA			ldy CHOICE
 20411 8114 B1 80			lda (:bp),y
 20412 8116 C9 02			cmp #$02
 20413 8118 D0 2D			jne l_4F6D
 20414
 20415 				; optimize OK (centralstation.pas), line = 22
 20416
 20417 811A A9 0C			lda #$0C
 20418 811C 20 B3 26			jsr LOADLOCATION
 20419
 20420 				; optimize OK (centralstation.pas), line = 23
 20421
 20422 811F AC BA BA 84 82 AC + 	mwy CHOICE :bp2
 20423 8129 A0 00			ldy #$00
 20424 812B A9 01			lda #$01
 20425 812D 91 82			sta (:bp2),y
 20426
 20427 				; optimize OK (centralstation.pas), line = 24
 20428
 20429 812F AD BA BA			lda CHOICE
 20430 8132 8D AE BA			sta SUBWAYCHOICES.CHOICE
 20431 8135 AD BB BA			lda CHOICE+1
 20432 8138 8D AF BA			sta SUBWAYCHOICES.CHOICE+1
 20433 813B 20 EB 7D			jsr SUBWAYCHOICES
 20434 813E AD B0 BA			lda SUBWAYCHOICES.RESULT
 20435 8141 8D BC BA			sta RESULT
 20436 8144 4C 2B 82			jmp @exit
 20437 8147			l_4F6D
 20438
 20439 				; optimize OK (centralstation.pas), line = 28
 20440
 20441 8147 AC BB BA 84 81		mvy CHOICE+1 :bp+1
 20442 814C AC BA BA			ldy CHOICE
 20443 814F B1 80			lda (:bp),y
 20444 8151 C9 03			cmp #$03
 20445 8153 F0 03 4C 2B 82		jne l_4F8E
 20446
 20447 				; optimize FAIL ('SHOWLOCATIONHEADER', centralstation.pas), line = 30
 20448
 20449 8158 20 1D 26			jsr SHOWLOCATIONHEADER
 20450
 20451 				; optimize OK (centralstation.pas), line = 31
 20452
 20453 815B AC 1A E4			ldy CURRENTPLAYER
 20454 815E B9 40 E0			lda adr.PLOPPORTUNITY,y
 20455 8161 09 01			ora #$01
 20456 8163 D0 14			jne l_4FA9
 20457
 20458 				; optimize FAIL ('CRT_WRITELN', centralstation.pas), line = 33
 20459
 20460 8165 E8				inx
 20461 8166 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 20462 816B AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 20463 8170 20 80 21			jsr CRT_WRITELN
 20464
 20465 				; optimize FAIL ('WAITFORKEY', centralstation.pas), line = 34
 20466
 20467 8173 20 2E 21			jsr WAITFORKEY
 20468 8176 4C 2B 82			jmp @exit
 20469 8179			l_4FA9
 20470
 20471 				; optimize OK (centralstation.pas), line = 38
 20472
 20473 8179 AC 1A E4			ldy CURRENTPLAYER
 20474 817C B9 41 E4			lda adr.PLNGANGSTERS,y
 20475 817F C9 03			cmp #$03
 20476 8181 B0 1F			jcs l_4FC5
 20477
 20478 				; optimize FAIL ('CRT_WRITELN', centralstation.pas), line = 39
 20479
 20480 8183 E8				inx
 20481 8184 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 20482 8189 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 20483 818E 20 80 21			jsr CRT_WRITELN
 20484
 20485 				; optimize OK (centralstation.pas), line = 40
 20486
 20487 8191 AC 1A E4			ldy CURRENTPLAYER
 20488 8194 B9 40 E0			lda adr.PLOPPORTUNITY,y
 20489 8197 29 FE			and #$FE
 20490 8199 99 40 E0			sta adr.PLOPPORTUNITY,y
 20491
 20492 				; optimize FAIL ('WAITFORKEY', centralstation.pas), line = 41
 20493
 20494 819C 20 2E 21			jsr WAITFORKEY
 20495 819F 4C 2B 82			jmp @exit
 20496 81A2			l_4FC5
 20497
 20498 				; optimize FAIL ('CRT_WRITELN', centralstation.pas), line = 45
 20499
 20500 81A2 E8				inx
 20501 81A3 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 20502 81A8 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 20503 81AD 20 80 21			jsr CRT_WRITELN
 20504
 20505 				; optimize FAIL ('CRT_WRITELN', centralstation.pas), line = 46
 20506
 20507 81B0 E8				inx
 20508 81B1 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 20509 81B6 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 20510 81BB 20 80 21			jsr CRT_WRITELN
 20511
 20512 				; optimize FAIL ('CRT_WRITELN', centralstation.pas), line = 47
 20513
 20514 81BE E8				inx
 20515 81BF AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 20516 81C4 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 20517 81C9 20 80 21			jsr CRT_WRITELN
 20518
 20519 				; optimize FAIL ('WAITFORKEY', centralstation.pas), line = 48
 20520
 20521 81CC 20 2E 21			jsr WAITFORKEY
 20522
 20523 				; -------------------  ASM Block 00000174  -------------------
 20524
 20525 				; 
 20526 81CF AD 74 A3		            lda loc_string_7
 20527 81D2 8D 7A B0		            sta adr.FP_GANG+$02
 20528 81D5 AD 75 A3		            lda loc_string_7+1
 20529 81D8 8D 7B B0		            sta adr.FP_GANG+1+$02
 20530 				        
 20531 				; optimize OK (centralstation.pas), line = 59
 20532
 20533 81DB A9 01			lda #$01
 20534 81DD 8D 02 EC			sta adr.FP_AI+$01
 20535
 20536 				; optimize OK (centralstation.pas), line = 60
 20537
 20538 81E0 A9 03			lda #$03
 20539 81E2 8D 04 EC			sta adr.FP_N+$01
 20540
 20541 				; -------------------  ASM Block 00000175  -------------------
 20542
 20543 81E5 A0 00		            ldy #$00
 20544 				        @:
 20545 81E7 98			            tya 
 20546 81E8 0A			            asl 
 20547 81E9 A8			            tay
 20548
 20549 81EA AD 76 A3		            lda loc_string_8
 20550 81ED 99 9C B0		            sta adr.FP_NAME+$20,y
 20551 81F0 AD 77 A3		            lda loc_string_8+1
 20552 81F3 99 9D B0		            sta adr.FP_NAME+1+$20,y
 20553
 20554 81F6 98			            tya
 20555 81F7 4A			            lsr 
 20556 81F8 A8			            tay
 20557
 20558 81F9 A9 1E		            lda #30
 20559 81FB 99 95 EC		            sta adr.FP_ENERGY+$10,y
 20560 81FE A9 07		            lda #7
 20561 8200 99 55 EC		            sta adr.FP_WEAPON+$10,y
 20562 8203 C8			            iny
 20563 8204 CC 04 EC		            cpy adr.FP_N+$01
 20564 8207 D0 DE		            bne @- 
 20565 				        
 20566 				; optimize FAIL ('DOFIGHT', centralstation.pas), line = 94
 20567
 20568 8209 20 44 49			jsr DOFIGHT
 20569 820C AD E6 B9			lda DOFIGHT.RESULT
 20570 820F C9 01			cmp #$01
 20571 8211 D0 0B			jne l_5000
 20572
 20573 				; optimize FAIL ('GOTCAUGHT', centralstation.pas), line = 96
 20574
 20575 8213 20 7C 32			jsr GOTCAUGHT
 20576
 20577 				; optimize OK (centralstation.pas), line = 97
 20578
 20579 8216 A9 11			lda #$11
 20580 8218 8D BC BA			sta RESULT
 20581 821B 4C 2B 82			jmp @exit
 20582 821E			l_5000
 20583
 20584 				; optimize OK (centralstation.pas), line = 100
 20585
 20586 821E A9 88			lda #$88
 20587 8220 8D 39 B9			sta CRACKEDBANK.P
 20588 8223 A9 13			lda #$13
 20589 8225 8D 3A B9			sta CRACKEDBANK.P+1
 20590 8228 20 57 2B			jsr CRACKEDBANK
 20591 822B			l_4F8E
 20592 822B			@exit
 20593
 20594 				; ------------------------------------------------------------
 20595
 20596 = BABA			CHOICE	= DATAORIGIN+$1645
 20597 = BABC			RESULT	= DATAORIGIN+$1647
 20598 = BABD			R	= DATAORIGIN+$1648
 20599 = BABE			K	= DATAORIGIN+$1649
 20600 = BABF			OUTCOME	= DATAORIGIN+$164A
 20601
 20602 = BABA			@VarData	= CHOICE
 20603 = 0005			@VarDataSize	= 5
 20604
 20605 822B 60				rts						; ret
 20606 				.endl
 20607
 20608 822C			.local	MAJORCHOICES					; FUNCTION
 20609
 20610 				; optimize OK (major.pas), line = 5
 20611
 20612 822C A9 03			lda #$03
 20613 822E 20 B3 26			jsr LOADLOCATION
 20614
 20615 				; optimize FAIL ('SHOWLOCATIONHEADER', major.pas), line = 6
 20616
 20617 8231 20 1D 26			jsr SHOWLOCATIONHEADER
 20618
 20619 				; optimize FAIL ('CRT_WRITELN', major.pas), line = 8
 20620
 20621 8234 E8				inx
 20622 8235 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 20623 823A AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 20624 823F 20 80 21			jsr CRT_WRITELN
 20625
 20626 				; optimize FAIL ('CRT_WRITELN', major.pas), line = 9
 20627
 20628 8242 E8				inx
 20629 8243 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 20630 8248 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 20631 824D 20 80 21			jsr CRT_WRITELN
 20632
 20633 				; optimize FAIL ('WAITFORKEY', major.pas), line = 10
 20634
 20635 8250 20 2E 21			jsr WAITFORKEY
 20636
 20637 				; optimize OK (major.pas), line = 12
 20638
 20639 8253 AC 1A E4			ldy CURRENTPLAYER
 20640 8256 B9 40 E0			lda adr.PLOPPORTUNITY,y
 20641 8259 29 EF			and #$EF
 20642 825B 99 40 E0			sta adr.PLOPPORTUNITY,y
 20643
 20644 				; -------------------  ASM Block 00000176  -------------------
 20645
 20646 				; 
 20647 825E AD 76 A3		            lda loc_string_8
 20648 8261 8D 7A B0		            sta adr.FP_GANG+$02
 20649 8264 AD 77 A3		            lda loc_string_8+1
 20650 8267 8D 7B B0		            sta adr.FP_GANG+1+$02
 20651 				        
 20652 				; optimize OK (major.pas), line = 23
 20653
 20654 826A A9 01			lda #$01
 20655 826C 8D 02 EC			sta adr.FP_AI+$01
 20656
 20657 				; optimize OK (major.pas), line = 24
 20658
 20659 826F A9 05			lda #$05
 20660 8271 8D 04 EC			sta adr.FP_N+$01
 20661
 20662 				; -------------------  ASM Block 00000177  -------------------
 20663
 20664 8274 A0 00		        ldy #$00
 20665 				    @:
 20666 8276 98			        tya 
 20667 8277 0A			        asl 
 20668 8278 A8			        tay
 20669
 20670 8279 AD 76 A3		        lda loc_string_8
 20671 827C 99 9C B0		        sta adr.FP_NAME+$20,y
 20672 827F AD 77 A3		        lda loc_string_8+1
 20673 8282 99 9D B0		        sta adr.FP_NAME+1+$20,y
 20674
 20675 8285 98			        tya
 20676 8286 4A			        lsr 
 20677 8287 A8			        tay
 20678
 20679 8288 A9 14		        lda #20
 20680 828A 99 95 EC		        sta adr.FP_ENERGY+$10,y
 20681 828D A9 07		        lda #07
 20682 828F 99 55 EC		        sta adr.FP_WEAPON+$10,y
 20683 8292 C8			        iny
 20684 8293 CC 04 EC		        cpy adr.FP_N+$01
 20685 8296 D0 DE		        bne @- 
 20686 				    
 20687 				; optimize FAIL ('DOFIGHT', major.pas), line = 57
 20688
 20689 8298 20 44 49			jsr DOFIGHT
 20690 829B AD E6 B9			lda DOFIGHT.RESULT
 20691 829E C9 01			cmp #$01
 20692 82A0 D0 0B			jne l_5044
 20693
 20694 				; optimize FAIL ('GOTCAUGHT', major.pas), line = 59
 20695
 20696 82A2 20 7C 32			jsr GOTCAUGHT
 20697
 20698 				; optimize OK (major.pas), line = 60
 20699
 20700 82A5 A9 11			lda #$11
 20701 82A7 8D C2 BA			sta RESULT
 20702 82AA 4C 53 83			jmp @exit
 20703 82AD			l_5044
 20704
 20705 				; -------------------  ASM Block 00000178  -------------------
 20706
 20707 				; 
 20708 82AD AD 78 A3		        lda loc_string_9
 20709 82B0 8D 7A B0		        sta adr.FP_GANG+$02
 20710 82B3 AD 79 A3		        lda loc_string_9+1
 20711 82B6 8D 7B B0		        sta adr.FP_GANG+1+$02
 20712 				    
 20713 				; optimize OK (major.pas), line = 73
 20714
 20715 82B9 A9 01			lda #$01
 20716 82BB 8D 02 EC			sta adr.FP_AI+$01
 20717
 20718 				; optimize OK (major.pas), line = 74
 20719
 20720 82BE 8D 04 EC			sta adr.FP_N+$01
 20721
 20722 				; optimize OK (major.pas), line = 75
 20723
 20724 82C1 AD 9C B0			lda adr.FP_NAME+$20
 20725 82C4 85 8C			sta @move.dst
 20726 82C6 AD 9D B0			lda adr.FP_NAME+1+$20
 20727 82C9 85 8D			sta @move.dst+1
 20728 82CB AD 78 A3			lda LOC_STRING_9
 20729 82CE 85 88			sta @move.src
 20730 82D0 AD 79 A3			lda LOC_STRING_9+1
 20731 82D3 85 89			sta @move.src+1
 20732 82D5 A0 00			ldy #$00
 20733 82D7 B1 88			lda (@move.src),y
 20734 82D9 18 69 01			add #1
 20735 82DC 85 84			sta @move.cnt
 20736 82DE 90 01			scc
 20737 82E0 C8				iny
 20738 82E1 84 85			sty @move.cnt+1
 20739 82E3 20 35 10			jsr @move
 20740
 20741 				; optimize OK (major.pas), line = 76
 20742
 20743 82E6 A9 1E			lda #$1E
 20744 82E8 8D 95 EC			sta adr.FP_ENERGY+$10
 20745
 20746 				; optimize OK (major.pas), line = 77
 20747
 20748 82EB A9 01			lda #$01
 20749 82ED 8D 55 EC			sta adr.FP_WEAPON+$10
 20750
 20751 				; optimize FAIL (1, major.pas), line = 78
 20752
 20753 82F0 E8				inx
 20754 82F1 A9 10 95 94			mva #$10 :STACKORIGIN,x
 20755 82F5 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 20756 82F9 A9 02			lda #$02
 20757 82FB 20 CB 15			jsr SYSTEM.RANDOM_02E9
 20758 82FE B4 94			ldy :STACKORIGIN,x
 20759 8300 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 20760 8303 99 45 ED			sta adr.FP_SEX,y
 20761 8306 CA				dex
 20762
 20763 				; optimize FAIL ('DOFIGHT', major.pas), line = 81
 20764
 20765 8307 20 44 49			jsr DOFIGHT
 20766 830A AD E6 B9			lda DOFIGHT.RESULT
 20767 830D C9 01			cmp #$01
 20768 830F D0 0B			jne l_507C
 20769
 20770 				; optimize FAIL ('GOTCAUGHT', major.pas), line = 83
 20771
 20772 8311 20 7C 32			jsr GOTCAUGHT
 20773
 20774 				; optimize OK (major.pas), line = 84
 20775
 20776 8314 A9 11			lda #$11
 20777 8316 8D C2 BA			sta RESULT
 20778 8319 4C 53 83			jmp @exit
 20779 831C			l_507C
 20780
 20781 				; optimize FAIL ('SHOWLOCATIONHEADER', major.pas), line = 88
 20782
 20783 831C 20 1D 26			jsr SHOWLOCATIONHEADER
 20784
 20785 				; optimize FAIL ('CRT_WRITELN', major.pas), line = 89
 20786
 20787 831F E8				inx
 20788 8320 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 20789 8325 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 20790 832A 20 80 21			jsr CRT_WRITELN
 20791
 20792 				; optimize FAIL ('CRT_WRITELN', major.pas), line = 90
 20793
 20794 832D E8				inx
 20795 832E AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 20796 8333 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 20797 8338 20 80 21			jsr CRT_WRITELN
 20798
 20799 				; optimize FAIL ('WAITFORKEY', major.pas), line = 91
 20800
 20801 833B 20 2E 21			jsr WAITFORKEY
 20802
 20803 				; optimize OK (major.pas), line = 92
 20804
 20805 833E A9 58			lda #$58
 20806 8340 8D 35 B9			sta ADDMONEY.AMOUNT
 20807 8343 A9 1B			lda #$1B
 20808 8345 8D 36 B9			sta ADDMONEY.AMOUNT+1
 20809 8348 20 E3 2A			jsr ADDMONEY
 20810
 20811 				; optimize OK (major.pas), line = 93
 20812
 20813 834B AC 1A E4			ldy CURRENTPLAYER
 20814 834E A9 01			lda #$01
 20815 8350 99 28 E0			sta adr.PLFORGEDID,y
 20816 8353			@exit
 20817
 20818 				; ------------------------------------------------------------
 20819
 20820 = BAC0			CHOICE	= DATAORIGIN+$164B
 20821 = BAC2			RESULT	= DATAORIGIN+$164D
 20822 = BAC3			K	= DATAORIGIN+$164E
 20823
 20824 = BAC0			@VarData	= CHOICE
 20825 = 0003			@VarDataSize	= 3
 20826
 20827 8353 60				rts						; ret
 20828 				.endl
 20829
 20830 8354			.local	MONEYTRANSPORTERCHOICES				; FUNCTION
 20831
 20832 				; optimize OK (moneytransporter.pas), line = 5
 20833
 20834 8354 A9 03			lda #$03
 20835 8356 20 B3 26			jsr LOADLOCATION
 20836
 20837 				; optimize FAIL ('SHOWLOCATIONHEADER', moneytransporter.pas), line = 6
 20838
 20839 8359 20 1D 26			jsr SHOWLOCATIONHEADER
 20840
 20841 				; optimize OK (moneytransporter.pas), line = 8
 20842
 20843 835C AC 1A E4			ldy CURRENTPLAYER
 20844 835F B9 41 E4			lda adr.PLNGANGSTERS,y
 20845 8362 C9 03			cmp #$03
 20846 8364 B0 1F			jcs l_50B1
 20847
 20848 				; optimize FAIL ('CRT_WRITELN', moneytransporter.pas), line = 10
 20849
 20850 8366 E8				inx
 20851 8367 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 20852 836C AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 20853 8371 20 80 21			jsr CRT_WRITELN
 20854
 20855 				; optimize FAIL ('WAITFORKEY', moneytransporter.pas), line = 11
 20856
 20857 8374 20 2E 21			jsr WAITFORKEY
 20858
 20859 				; optimize OK (moneytransporter.pas), line = 12
 20860
 20861 8377 AC 1A E4			ldy CURRENTPLAYER
 20862 837A B9 40 E0			lda adr.PLOPPORTUNITY,y
 20863 837D 29 FB			and #$FB
 20864 837F 99 40 E0			sta adr.PLOPPORTUNITY,y
 20865 8382 4C 22 84			jmp @exit
 20866 8385			l_50B1
 20867
 20868 				; optimize FAIL ('CRT_WRITELN', moneytransporter.pas), line = 16
 20869
 20870 8385 E8				inx
 20871 8386 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 20872 838B AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 20873 8390 20 80 21			jsr CRT_WRITELN
 20874
 20875 				; optimize FAIL ('CRT_WRITELN', moneytransporter.pas), line = 17
 20876
 20877 8393 E8				inx
 20878 8394 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 20879 8399 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 20880 839E 20 80 21			jsr CRT_WRITELN
 20881
 20882 				; optimize FAIL ('WAITFORKEY', moneytransporter.pas), line = 18
 20883
 20884 83A1 20 2E 21			jsr WAITFORKEY
 20885
 20886 				; -------------------  ASM Block 00000179  -------------------
 20887
 20888 				; 
 20889 83A4 AD 6E A3		        lda loc_string_4
 20890 83A7 8D 7A B0		        sta adr.FP_GANG+$02
 20891 83AA AD 6F A3		        lda loc_string_4+1
 20892 83AD 8D 7B B0		        sta adr.FP_GANG+1+$02
 20893 				    
 20894 				; optimize OK (moneytransporter.pas), line = 29
 20895
 20896 83B0 A9 01			lda #$01
 20897 83B2 8D 02 EC			sta adr.FP_AI+$01
 20898
 20899 				; optimize OK (moneytransporter.pas), line = 30
 20900
 20901 83B5 A9 0A			lda #$0A
 20902 83B7 8D 04 EC			sta adr.FP_N+$01
 20903
 20904 				; -------------------  ASM Block 00000180  -------------------
 20905
 20906 83BA A0 00		        ldy #$00
 20907 				    @:
 20908 83BC 98			        tya 
 20909 83BD 0A			        asl 
 20910 83BE A8			        tay
 20911
 20912 83BF AD 70 A3		        lda loc_string_5
 20913 83C2 99 9C B0		        sta adr.FP_NAME+$20,y
 20914 83C5 AD 71 A3		        lda loc_string_5+1
 20915 83C8 99 9D B0		        sta adr.FP_NAME+1+$20,y
 20916
 20917 83CB 98			        tya
 20918 83CC 4A			        lsr 
 20919 83CD A8			        tay
 20920
 20921 83CE A9 32		        lda #50
 20922 83D0 99 95 EC		        sta adr.FP_ENERGY+$10,y
 20923 83D3 A9 07		        lda #07
 20924 83D5 99 55 EC		        sta adr.FP_WEAPON+$10,y
 20925 83D8 C8			        iny
 20926 83D9 CC 04 EC		        cpy adr.FP_N+$01
 20927 83DC D0 DE		        bne @- 
 20928 				    
 20929 				; optimize FAIL ('DOFIGHT', moneytransporter.pas), line = 65
 20930
 20931 83DE 20 44 49			jsr DOFIGHT
 20932 83E1 AD E6 B9			lda DOFIGHT.RESULT
 20933 83E4 C9 01			cmp #$01
 20934 83E6 D0 0B			jne l_50E9
 20935
 20936 				; optimize FAIL ('GOTCAUGHT', moneytransporter.pas), line = 67
 20937
 20938 83E8 20 7C 32			jsr GOTCAUGHT
 20939
 20940 				; optimize OK (moneytransporter.pas), line = 68
 20941
 20942 83EB A9 11			lda #$11
 20943 83ED 8D C6 BA			sta RESULT
 20944 83F0 4C 22 84			jmp @exit
 20945 83F3			l_50E9
 20946
 20947 				; optimize OK (moneytransporter.pas), line = 71
 20948
 20949 83F3 AC 1A E4			ldy CURRENTPLAYER
 20950 83F6 A9 01			lda #$01
 20951 83F8 99 08 E0			sta adr.PLMONEYTRANSPORTER,y
 20952
 20953 				; optimize OK (moneytransporter.pas), line = 72
 20954
 20955 83FB A9 10			lda #$10
 20956 83FD 8D 39 B9			sta CRACKEDBANK.P
 20957 8400 A9 27			lda #$27
 20958 8402 8D 3A B9			sta CRACKEDBANK.P+1
 20959 8405 20 57 2B			jsr CRACKEDBANK
 20960
 20961 				; optimize OK (moneytransporter.pas), line = 73
 20962
 20963 8408 AC 1A E4			ldy CURRENTPLAYER
 20964 840B B9 80 E0			lda adr.PLNEWPOINTS,y
 20965 840E 18 69 04			add #$04
 20966 8411 99 80 E0			sta adr.PLNEWPOINTS,y
 20967
 20968 				; optimize FAIL ('WAITFORKEY', moneytransporter.pas), line = 74
 20969
 20970 8414 20 2E 21			jsr WAITFORKEY
 20971
 20972 				; optimize OK (moneytransporter.pas), line = 75
 20973
 20974 8417 AC 1A E4			ldy CURRENTPLAYER
 20975 841A B9 40 E0			lda adr.PLOPPORTUNITY,y
 20976 841D 29 FB			and #$FB
 20977 841F 99 40 E0			sta adr.PLOPPORTUNITY,y
 20978 8422			@exit
 20979
 20980 				; ------------------------------------------------------------
 20981
 20982 = BAC4			CHOICE	= DATAORIGIN+$164F
 20983 = BAC6			RESULT	= DATAORIGIN+$1651
 20984 = BAC7			K	= DATAORIGIN+$1652
 20985
 20986 = BAC4			@VarData	= CHOICE
 20987 = 0003			@VarDataSize	= 3
 20988
 20989 8422 60				rts						; ret
 20990 				.endl
 20991
 20992 8423			.local	PRINTMAPSTATUS					; PROCEDURE
 20993
 20994 				; optimize OK (map.pas), line = 8
 20995
 20996 8423 AD 77 B0			lda MAPRELOADED
 20997 8426 F0 03 4C 12 87		jne l_5131
 20998
 20999 				; optimize OK (map.pas), line = 10
 21000
 21001 842B A9 00			lda #$00
 21002 842D A0 10			ldy #256-240
 21003 842F 99 E8 F6 C8 D0 FA		sta:rne $F6F8+240-256,y+
 21004
 21005 				; optimize OK (map.pas), line = 11
 21006
 21007 8435 AC 1A E4			ldy CURRENTPLAYER
 21008 8438 B9 78 E0			lda adr.PLRANK,y
 21009 843B 8D C9 BA			sta Z
 21010
 21011 				; optimize OK (map.pas), line = 12
 21012
 21013 843E 0A				asl @
 21014 843F A8				tay
 21015 8440 B9 E1 AF			lda adr.RANKNAMES+1,y
 21016 8443 85 81			sta :bp+1
 21017 8445 B9 E0 AF			lda adr.RANKNAMES,y
 21018 8448 A8				tay
 21019 8449 B1 80			lda (:bp),y
 21020 844B 18 69 03			add #$03
 21021 844E 8D C8 BA			sta L
 21022
 21023 				; optimize OK (map.pas), line = 13
 21024
 21025 8451 AD 1A E4			lda CURRENTPLAYER
 21026 8454 0A				asl @
 21027 8455 0A				asl @
 21028 8456 0A				asl @
 21029 8457 8D CA BA			sta I
 21030
 21031 				; optimize OK (map.pas), line = 14
 21032
 21033 845A 0A				asl @
 21034 845B A8				tay
 21035 845C B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 21036 845F 85 81			sta :bp+1
 21037 8461 B9 E0 B0			lda adr.GANGSTERNAMES,y
 21038 8464 A8				tay
 21039 8465 AD C8 BA			lda L
 21040 8468 18 71 80			add (:bp),y
 21041 846B 8D CB BA			sta P
 21042
 21043 				; optimize OK (map.pas), line = 15
 21044
 21045 846E A9 28			lda #$28
 21046 8470 38 ED CB BA			sub P
 21047 8474 85 9E			sta :STACKORIGIN+10
 21048 8476 A9 00			lda #$00
 21049 8478 E9 00			sbc #$00
 21050 847A 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 21051 847C 46 AE			lsr :STACKORIGIN+STACKWIDTH+10
 21052 847E 66 9E			ror :STACKORIGIN+10
 21053 8480 A5 9E			lda :STACKORIGIN+10
 21054 8482 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21055 8485 A9 13			lda #$13
 21056 8487 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21057 848A 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21058
 21059 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 16
 21060
 21061 848D E8				inx
 21062 848E AD CA BA			lda I
 21063 8491 0A				asl @
 21064 8492 A8				tay
 21065 8493 B9 E0 B0			lda adr.GANGSTERNAMES,y
 21066 8496 95 94			sta :STACKORIGIN,x
 21067 8498 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 21068 849B 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 21069 849D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21070
 21071 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 17
 21072
 21073 84A0 E8				inx
 21074 84A1 A9 3F 95 94			mva #$3F :STACKORIGIN,x
 21075 84A5 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 21076 84A9 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21077
 21078 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 18
 21079
 21080 84AC E8				inx
 21081 84AD AD C9 BA			lda Z
 21082 84B0 0A				asl @
 21083 84B1 A8				tay
 21084 84B2 B9 E0 AF			lda adr.RANKNAMES,y
 21085 84B5 95 94			sta :STACKORIGIN,x
 21086 84B7 B9 E1 AF			lda adr.RANKNAMES+1,y
 21087 84BA 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 21088 84BC 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21089
 21090 				; optimize OK (map.pas), line = 23
 21091
 21092 84BF A9 09			lda #$09
 21093 84C1 20 88 1C			jsr B_CRT.CRT_WRITE_054D
 21094
 21095 				; optimize OK (map.pas), line = 24
 21096
 21097 84C4 A9 00			lda #$00
 21098 84C6 8D DB AF			sta B_CRT.CRT_INVERT.X
 21099 84C9 A9 13			lda #$13
 21100 84CB 8D DC AF			sta B_CRT.CRT_INVERT.Y
 21101 84CE AD B0 A6			lda B_CRT.CRT_SCREENWIDTH
 21102 84D1 8D DD AF			sta B_CRT.CRT_INVERT.WIDTH
 21103 84D4 20 B6 1F			jsr B_CRT.CRT_INVERT
 21104
 21105 				; optimize OK (map.pas), line = 26
 21106
 21107 84D7 A9 00			lda #$00
 21108 84D9 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21109 84DC A9 14			lda #$14
 21110 84DE 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21111 84E1 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21112
 21113 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 27
 21114
 21115 84E4 E8				inx
 21116 84E5 AD 38 A4 95 94		mva MAP_STRING_WEAPON :STACKORIGIN,x
 21117 84EA AD 39 A4 95 A4		mva MAP_STRING_WEAPON+1 :STACKORIGIN+STACKWIDTH,x
 21118 84EF 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21119
 21120 				; optimize OK (map.pas), line = 28
 21121
 21122 84F2 AC CA BA			ldy I
 21123 84F5 B9 D8 E3			lda adr.GANGSTERWEAPON,y
 21124 84F8 8D C9 BA			sta Z
 21125
 21126 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 29
 21127
 21128 84FB E8				inx
 21129 84FC AD C9 BA			lda Z
 21130 84FF 0A				asl @
 21131 8500 A8				tay
 21132 8501 B9 F6 AF			lda adr.WEAPONNAMES,y
 21133 8504 95 94			sta :STACKORIGIN,x
 21134 8506 B9 F7 AF			lda adr.WEAPONNAMES+1,y
 21135 8509 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 21136 850B 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21137
 21138 				; optimize OK (map.pas), line = 31
 21139
 21140 850E A9 1E			lda #$1E
 21141 8510 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21142 8513 A9 14			lda #$14
 21143 8515 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21144 8518 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21145
 21146 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 32
 21147
 21148 851B E8				inx
 21149 851C AD 3A A4 95 94		mva MAP_STRING_GANGSTER :STACKORIGIN,x
 21150 8521 AD 3B A4 95 A4		mva MAP_STRING_GANGSTER+1 :STACKORIGIN+STACKWIDTH,x
 21151 8526 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21152
 21153 				; optimize OK (map.pas), line = 33
 21154
 21155 8529 AC 1A E4			ldy CURRENTPLAYER
 21156 852C B9 41 E4			lda adr.PLNGANGSTERS,y
 21157 852F 38 E9 01			sub #$01
 21158 8532 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 21159 8535 A9 00			lda #$00
 21160 8537 E9 00			sbc #$00
 21161 8539 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 21162 853B A0 00			ldy #$00
 21163 853D A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 21164 853F 10 01			spl
 21165 8541 88				dey
 21166 8542 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 21167 8545 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 21168 8548 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 21169 854B 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 21170
 21171 				; optimize OK (map.pas), line = 35
 21172
 21173 854E A9 00			lda #$00
 21174 8550 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21175 8553 A9 15			lda #$15
 21176 8555 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21177 8558 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21178
 21179 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 36
 21180
 21181 855B E8				inx
 21182 855C AD 40 A4 95 94		mva MAP_STRING_CAR :STACKORIGIN,x
 21183 8561 AD 41 A4 95 A4		mva MAP_STRING_CAR+1 :STACKORIGIN+STACKWIDTH,x
 21184 8566 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21185
 21186 				; optimize OK (map.pas), line = 38
 21187
 21188 8569 AC 1A E4			ldy CURRENTPLAYER
 21189 856C B9 2C E0			lda adr.PLCAR,y
 21190 856F 8D C9 BA			sta Z
 21191
 21192 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 39
 21193
 21194 8572 E8				inx
 21195 8573 AD C9 BA			lda Z
 21196 8576 0A				asl @
 21197 8577 A8				tay
 21198 8578 B9 08 B0			lda adr.CARNAMES,y
 21199 857B 95 94			sta :STACKORIGIN,x
 21200 857D B9 09 B0			lda adr.CARNAMES+1,y
 21201 8580 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 21202 8582 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21203
 21204 				; optimize OK (map.pas), line = 41
 21205
 21206 8585 A9 1B			lda #$1B
 21207 8587 8D CA BA			sta I
 21208
 21209 				; optimize OK (map.pas), line = 42
 21210
 21211 858A AC 1A E4			ldy CURRENTPLAYER
 21212 858D B9 5C E0			lda adr.PLBRIBE,y
 21213 8590 C9 0A			cmp #$0A
 21214 8592 B0 05			jcs l_51D6
 21215 8594 A9 1C			lda #$1C
 21216 8596 8D CA BA			sta I
 21217 8599			l_51D6
 21218
 21219 				; optimize OK (map.pas), line = 43
 21220
 21221 8599 AD CA BA			lda I
 21222 859C 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21223 859F A9 15			lda #$15
 21224 85A1 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21225 85A4 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21226
 21227 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 44
 21228
 21229 85A7 E8				inx
 21230 85A8 AD 3E A4 95 94		mva MAP_STRING_BRIBE :STACKORIGIN,x
 21231 85AD AD 3F A4 95 A4		mva MAP_STRING_BRIBE+1 :STACKORIGIN+STACKWIDTH,x
 21232 85B2 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21233
 21234 				; optimize OK (map.pas), line = 45
 21235
 21236 85B5 AC 1A E4			ldy CURRENTPLAYER
 21237 85B8 B9 5C E0			lda adr.PLBRIBE,y
 21238 85BB 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 21239
 21240 				; optimize OK (map.pas), line = 47
 21241
 21242 85BE A9 00			lda #$00
 21243 85C0 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21244 85C3 A9 16			lda #$16
 21245 85C5 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21246 85C8 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21247
 21248 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 48
 21249
 21250 85CB E8				inx
 21251 85CC AD 3C A4 95 94		mva MAP_STRING_RENT :STACKORIGIN,x
 21252 85D1 AD 3D A4 95 A4		mva MAP_STRING_RENT+1 :STACKORIGIN+STACKWIDTH,x
 21253 85D6 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21254
 21255 				; optimize OK (map.pas), line = 49
 21256
 21257 85D9 AC 1A E4			ldy CURRENTPLAYER
 21258 85DC B9 54 E0			lda adr.PLRENTMONTHS,y
 21259 85DF 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 21260
 21261 				; optimize OK (map.pas), line = 51
 21262
 21263 85E2 A9 0F			lda #$0F
 21264 85E4 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21265 85E7 A9 16			lda #$16
 21266 85E9 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21267 85EC 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21268
 21269 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 52
 21270
 21271 85EF E8				inx
 21272 85F0 AD 42 A4 95 94		mva MAP_STRING_STEPS :STACKORIGIN,x
 21273 85F5 AD 43 A4 95 A4		mva MAP_STRING_STEPS+1 :STACKORIGIN+STACKWIDTH,x
 21274 85FA 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21275
 21276 				; optimize OK (map.pas), line = 53
 21277
 21278 85FD AC 1A E4			ldy CURRENTPLAYER
 21279 8600 B9 30 E0			lda adr.PLSTEPS,y
 21280 8603 85 9D			sta :STACKORIGIN+9
 21281 8605 A0 00			ldy #$00
 21282 8607 A5 9D			lda :STACKORIGIN+9
 21283 8609 10 01			spl
 21284 860B 88				dey
 21285 860C 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 21286 860F 8C CA AB			sty B_CRT.CRT_WRITE_056E.NUM+1
 21287 8612 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 21288 8615 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 21289 8618 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 21290
 21291 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 54
 21292
 21293 861B E8				inx
 21294 861C A9 43 95 94			mva #$43 :STACKORIGIN,x
 21295 8620 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 21296 8624 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21297
 21298 				; optimize OK (map.pas), line = 55
 21299
 21300 8627 AC 1A E4			ldy CURRENTPLAYER
 21301 862A B9 2C E0			lda adr.PLCAR,y
 21302 862D A8				tay
 21303 862E B9 06 E7			lda adr.CARCARGO,y
 21304 8631 AC 1A E4			ldy CURRENTPLAYER
 21305 8634 38 F9 24 E0			sub adr.PLALCOHOL,y
 21306 8638 8D C9 BA			sta Z
 21307
 21308 				; optimize OK (map.pas), line = 56
 21309
 21310 863B A9 20			lda #$20
 21311 863D 8D CA BA			sta I
 21312
 21313 				; optimize OK (map.pas), line = 57
 21314
 21315 8640 AD C9 BA			lda Z
 21316 8643 C9 0A			cmp #$0A
 21317 8645 B0 05			jcs l_5233
 21318 8647 A9 21			lda #$21
 21319 8649 8D CA BA			sta I
 21320 864C			l_5233
 21321
 21322 				; optimize OK (map.pas), line = 58
 21323
 21324 864C AD CA BA			lda I
 21325 864F 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21326 8652 A9 16			lda #$16
 21327 8654 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21328 8657 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21329
 21330 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 59
 21331
 21332 865A E8				inx
 21333 865B AD 44 A4 95 94		mva MAP_STRING_CARGO :STACKORIGIN,x
 21334 8660 AD 45 A4 95 A4		mva MAP_STRING_CARGO+1 :STACKORIGIN+STACKWIDTH,x
 21335 8665 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21336
 21337 				; optimize OK (map.pas), line = 60
 21338
 21339 8668 AD C9 BA			lda Z
 21340 866B 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 21341
 21342 				; optimize OK (map.pas), line = 62
 21343
 21344 866E A9 00			lda #$00
 21345 8670 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21346 8673 A9 17			lda #$17
 21347 8675 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21348 8678 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21349
 21350 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 63
 21351
 21352 867B E8				inx
 21353 867C AD 46 A4 95 94		mva MAP_STRING_MONEY :STACKORIGIN,x
 21354 8681 AD 47 A4 95 A4		mva MAP_STRING_MONEY+1 :STACKORIGIN+STACKWIDTH,x
 21355 8686 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21356
 21357 				; optimize OK (map.pas), line = 64
 21358
 21359 8689 AD 1A E4			lda CURRENTPLAYER
 21360 868C 0A				asl @
 21361 868D 0A				asl @
 21362 868E A8				tay
 21363 868F B9 10 E0			lda adr.PLMONEY,y
 21364 8692 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 21365 8695 B9 11 E0			lda adr.PLMONEY+1,y
 21366 8698 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 21367 869B B9 12 E0			lda adr.PLMONEY+2,y
 21368 869E 8D CB AB			sta B_CRT.CRT_WRITE_056E.NUM+2
 21369 86A1 B9 13 E0			lda adr.PLMONEY+3,y
 21370 86A4 8D CC AB			sta B_CRT.CRT_WRITE_056E.NUM+3
 21371 86A7 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 21372
 21373 				; optimize OK (map.pas), line = 66
 21374
 21375 86AA A9 17			lda #$17
 21376 86AC 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21377 86AF 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21378 86B2 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21379
 21380 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 67
 21381
 21382 86B5 E8				inx
 21383 86B6 AD 48 A4 95 94		mva MAP_STRING_CREDIT :STACKORIGIN,x
 21384 86BB AD 49 A4 95 A4		mva MAP_STRING_CREDIT+1 :STACKORIGIN+STACKWIDTH,x
 21385 86C0 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21386
 21387 				; optimize OK (map.pas), line = 68
 21388
 21389 86C3 AD 1A E4			lda CURRENTPLAYER
 21390 86C6 0A				asl @
 21391 86C7 A8				tay
 21392 86C8 B9 44 E0			lda adr.PLLOAN,y
 21393 86CB 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 21394 86CE B9 45 E0			lda adr.PLLOAN+1,y
 21395 86D1 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 21396 86D3 A0 00			ldy #$00
 21397 86D5 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 21398 86D7 10 01			spl
 21399 86D9 88				dey
 21400 86DA 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 21401 86DD 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 21402 86E0 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 21403 86E3 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 21404
 21405 				; optimize OK (map.pas), line = 69
 21406
 21407 86E6 A9 23			lda #$23
 21408 86E8 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21409 86EB A9 17			lda #$17
 21410 86ED 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21411 86F0 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21412
 21413 				; optimize OK (map.pas), line = 70
 21414
 21415 86F3 A9 08			lda #$08
 21416 86F5 20 88 1C			jsr B_CRT.CRT_WRITE_054D
 21417
 21418 				; optimize OK (map.pas), line = 71
 21419
 21420 86F8 AC 1A E4			ldy CURRENTPLAYER
 21421 86FB B9 4C E0			lda adr.PLLOANTIME,y
 21422 86FE 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 21423
 21424 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 72
 21425
 21426 8701 E8				inx
 21427 8702 A9 48 95 94			mva #$48 :STACKORIGIN,x
 21428 8706 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 21429 870A 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21430
 21431 				; optimize OK (map.pas), line = 73
 21432
 21433 870D A9 01			lda #$01
 21434 870F 8D 77 B0			sta MAPRELOADED
 21435 8712			l_5131
 21436
 21437 				; optimize FAIL ('B_SYSTEM.WAITFRAME', map.pas), line = 75
 21438
 21439 8712 20 5B 1A			jsr B_SYSTEM.WAITFRAME
 21440
 21441 				; optimize OK (map.pas), line = 76
 21442
 21443 8715 A9 0F			lda #$0F
 21444 8717 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 21445 871A A9 16			lda #$16
 21446 871C 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 21447 871F 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 21448
 21449 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 77
 21450
 21451 8722 E8				inx
 21452 8723 AD 42 A4 95 94		mva MAP_STRING_STEPS :STACKORIGIN,x
 21453 8728 AD 43 A4 95 A4		mva MAP_STRING_STEPS+1 :STACKORIGIN+STACKWIDTH,x
 21454 872D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21455
 21456 				; optimize OK (map.pas), line = 78
 21457
 21458 8730 AC 1A E4			ldy CURRENTPLAYER
 21459 8733 B9 30 E0			lda adr.PLSTEPS,y
 21460 8736 85 9D			sta :STACKORIGIN+9
 21461 8738 A0 00			ldy #$00
 21462 873A A5 9D			lda :STACKORIGIN+9
 21463 873C 10 01			spl
 21464 873E 88				dey
 21465 873F 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 21466 8742 8C CA AB			sty B_CRT.CRT_WRITE_056E.NUM+1
 21467 8745 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 21468 8748 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 21469 874B 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 21470
 21471 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', map.pas), line = 79
 21472
 21473 874E E8				inx
 21474 874F A9 43 95 94			mva #$43 :STACKORIGIN,x
 21475 8753 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 21476 8757 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 21477
 21478 				; ------------------------------------------------------------
 21479
 21480 = BAC8			L	= DATAORIGIN+$1653
 21481 = BAC9			Z	= DATAORIGIN+$1654
 21482 = BACA			I	= DATAORIGIN+$1655
 21483 = BACB			P	= DATAORIGIN+$1656
 21484
 21485 = BAC8			@VarData	= L
 21486 = 0004			@VarDataSize	= 4
 21487
 21488 875A			@exit
 21489 					.ifdef @new
 21490 					lda <@VarData
 21491 					sta :ztmp
 21492 					lda >@VarData
 21493 					ldy #@VarDataSize-1
 21494 					jmp @FreeMem
 21495 					els
 21496 875A 60				rts						; ret
 21497 					eif
 21498 				.endl
 21499
 21500 875B			.local	DRAWMAJORMONEY					; PROCEDURE
 21501
 21502 				; optimize OK (map.pas), line = 87
 21503
 21504 875B AD 20 E4			lda CURRENTMAP
 21505 875E C9 07			cmp #$07
 21506 8760 F0 03 4C F3 88		jne l_5297
 21507
 21508 				; optimize OK (map.pas), line = 93
 21509
 21510 8765 AC 1A E4			ldy CURRENTPLAYER
 21511 8768 B9 40 E0			lda adr.PLOPPORTUNITY,y
 21512 876B 29 04			and #$04
 21513 876D D0 57			jne l_52B1
 21514
 21515 				; optimize OK (map.pas), line = 96
 21516
 21517 876F A9 58			lda #$58
 21518 8771 8D 42 FA			sta $FA42
 21519 8774 8D 43 FA			sta $FA42+1
 21520
 21521 				; optimize OK (map.pas), line = 97
 21522
 21523 8777 8D 44 FA			sta $FA44
 21524 877A 8D 45 FA			sta $FA44+1
 21525
 21526 				; optimize OK (map.pas), line = 98
 21527
 21528 877D 8D 46 FA			sta $FA46
 21529 8780 8D 47 FA			sta $FA46+1
 21530
 21531 				; optimize OK (map.pas), line = 99
 21532
 21533 8783 A9 04			lda #$04
 21534 8785 8D 42 F6			sta $F642
 21535
 21536 				; optimize OK (map.pas), line = 100
 21537
 21538 8788 8D 44 F6			sta $F644
 21539
 21540 				; optimize OK (map.pas), line = 101
 21541
 21542 878B 8D 46 F6			sta $F646
 21543
 21544 				; optimize OK (map.pas), line = 102
 21545
 21546 878E A9 05			lda #$05
 21547 8790 8D 43 F6			sta $F643
 21548
 21549 				; optimize OK (map.pas), line = 103
 21550
 21551 8793 8D 45 F6			sta $F645
 21552
 21553 				; optimize OK (map.pas), line = 104
 21554
 21555 8796 8D 47 F6			sta $F647
 21556
 21557 				; optimize OK (map.pas), line = 106
 21558
 21559 8799 A9 2E			lda #$2E
 21560 879B 8D 6A FA			sta $FA6A
 21561 879E 8D 6B FA			sta $FA6A+1
 21562
 21563 				; optimize OK (map.pas), line = 107
 21564
 21565 87A1 8D 6C FA			sta $FA6C
 21566 87A4 8D 6D FA			sta $FA6C+1
 21567
 21568 				; optimize OK (map.pas), line = 108
 21569
 21570 87A7 8D 6E FA			sta $FA6E
 21571 87AA 8D 6F FA			sta $FA6E+1
 21572
 21573 				; optimize OK (map.pas), line = 109
 21574
 21575 87AD A9 1C			lda #$1C
 21576 87AF 8D 6A F6			sta $F66A
 21577
 21578 				; optimize OK (map.pas), line = 110
 21579
 21580 87B2 8D 6C F6			sta $F66C
 21581
 21582 				; optimize OK (map.pas), line = 111
 21583
 21584 87B5 8D 6E F6			sta $F66E
 21585
 21586 				; optimize OK (map.pas), line = 112
 21587
 21588 87B8 A9 1D			lda #$1D
 21589 87BA 8D 6B F6			sta $F66B
 21590
 21591 				; optimize OK (map.pas), line = 113
 21592
 21593 87BD 8D 6D F6			sta $F66D
 21594
 21595 				; optimize OK (map.pas), line = 114
 21596
 21597 87C0 8D 6F F6			sta $F66F
 21598 87C3 4C 2A 88			jmp l_52F1
 21599 87C6			l_52B1
 21600
 21601 				; optimize OK (map.pas), line = 119
 21602
 21603 87C6 A9 4D			lda #$4D
 21604 87C8 8D 42 FA			sta $FA42
 21605 87CB 8D 43 FA			sta $FA42+1
 21606
 21607 				; optimize OK (map.pas), line = 120
 21608
 21609 87CE 8D 44 FA			sta $FA44
 21610 87D1 8D 45 FA			sta $FA44+1
 21611
 21612 				; optimize OK (map.pas), line = 121
 21613
 21614 87D4 8D 46 FA			sta $FA46
 21615 87D7 8D 47 FA			sta $FA46+1
 21616
 21617 				; optimize OK (map.pas), line = 122
 21618
 21619 87DA A9 4B			lda #$4B
 21620 87DC 8D 42 F6			sta $F642
 21621 87DF A9 4C			lda #$4C
 21622 87E1 8D 43 F6			sta $F642+1
 21623
 21624 				; optimize OK (map.pas), line = 123
 21625
 21626 87E4 A9 4D			lda #$4D
 21627 87E6 8D 44 F6			sta $F644
 21628 87E9 A9 4E			lda #$4E
 21629 87EB 8D 45 F6			sta $F644+1
 21630
 21631 				; optimize OK (map.pas), line = 124
 21632
 21633 87EE A9 4F			lda #$4F
 21634 87F0 8D 46 F6			sta $F646
 21635 87F3 A9 50			lda #$50
 21636 87F5 8D 47 F6			sta $F646+1
 21637
 21638 				; optimize OK (map.pas), line = 126
 21639
 21640 87F8 A9 4D			lda #$4D
 21641 87FA 8D 6A FA			sta $FA6A
 21642 87FD 8D 6B FA			sta $FA6A+1
 21643
 21644 				; optimize OK (map.pas), line = 127
 21645
 21646 8800 8D 6C FA			sta $FA6C
 21647 8803 8D 6D FA			sta $FA6C+1
 21648
 21649 				; optimize OK (map.pas), line = 128
 21650
 21651 8806 8D 6E FA			sta $FA6E
 21652 8809 8D 6F FA			sta $FA6E+1
 21653
 21654 				; optimize OK (map.pas), line = 129
 21655
 21656 880C A9 56			lda #$56
 21657 880E 8D 6A F6			sta $F66A
 21658 8811 A9 57			lda #$57
 21659 8813 8D 6B F6			sta $F66A+1
 21660
 21661 				; optimize OK (map.pas), line = 130
 21662
 21663 8816 A9 58			lda #$58
 21664 8818 8D 6C F6			sta $F66C
 21665 881B A9 59			lda #$59
 21666 881D 8D 6D F6			sta $F66C+1
 21667
 21668 				; optimize OK (map.pas), line = 131
 21669
 21670 8820 A9 5A			lda #$5A
 21671 8822 8D 6E F6			sta $F66E
 21672 8825 A9 5B			lda #$5B
 21673 8827 8D 6F F6			sta $F66E+1
 21674 882A			l_52F1
 21675
 21676 				; optimize OK (map.pas), line = 134
 21677
 21678 882A AC 1A E4			ldy CURRENTPLAYER
 21679 882D B9 40 E0			lda adr.PLOPPORTUNITY,y
 21680 8830 29 10			and #$10
 21681 8832 D0 59			jne l_532E
 21682
 21683 				; optimize OK (map.pas), line = 138
 21684
 21685 8834 A9 58			lda #$58
 21686 8836 8D 0C F9			sta $F90C
 21687 8839 8D 0D F9			sta $F90C+1
 21688
 21689 				; optimize OK (map.pas), line = 139
 21690
 21691 883C 8D 0E F9			sta $F90E
 21692 883F 8D 0F F9			sta $F90E+1
 21693
 21694 				; optimize OK (map.pas), line = 141
 21695
 21696 8842 A9 2E			lda #$2E
 21697 8844 8D 34 F9			sta $F934
 21698 8847 8D 35 F9			sta $F934+1
 21699
 21700 				; optimize OK (map.pas), line = 142
 21701
 21702 884A 8D 36 F9			sta $F936
 21703 884D 8D 37 F9			sta $F936+1
 21704
 21705 				; optimize OK (map.pas), line = 144
 21706
 21707 8850 A9 04			lda #$04
 21708 8852 8D 0C F5			sta $F50C
 21709
 21710 				; optimize OK (map.pas), line = 145
 21711
 21712 8855 8D 0E F5			sta $F50E
 21713
 21714 				; optimize OK (map.pas), line = 146
 21715
 21716 8858 8D 34 F5			sta $F534
 21717
 21718 				; optimize OK (map.pas), line = 147
 21719
 21720 885B 8D 36 F5			sta $F536
 21721
 21722 				; optimize OK (map.pas), line = 148
 21723
 21724 885E A9 05			lda #$05
 21725 8860 8D 0D F5			sta $F50D
 21726
 21727 				; optimize OK (map.pas), line = 149
 21728
 21729 8863 8D 0F F5			sta $F50F
 21730
 21731 				; optimize OK (map.pas), line = 150
 21732
 21733 8866 8D 35 F5			sta $F535
 21734
 21735 				; optimize OK (map.pas), line = 151
 21736
 21737 8869 8D 37 F5			sta $F537
 21738
 21739 				; optimize OK (map.pas), line = 153
 21740
 21741 886C A9 2E			lda #$2E
 21742 886E 8D 5C F9			sta $F95C
 21743 8871 8D 5D F9			sta $F95C+1
 21744
 21745 				; optimize OK (map.pas), line = 154
 21746
 21747 8874 8D 5E F9			sta $F95E
 21748 8877 8D 5F F9			sta $F95E+1
 21749
 21750 				; optimize OK (map.pas), line = 155
 21751
 21752 887A A9 1C			lda #$1C
 21753 887C 8D 5C F5			sta $F55C
 21754
 21755 				; optimize OK (map.pas), line = 156
 21756
 21757 887F 8D 5E F5			sta $F55E
 21758
 21759 				; optimize OK (map.pas), line = 157
 21760
 21761 8882 A9 1D			lda #$1D
 21762 8884 8D 5D F5			sta $F55D
 21763
 21764 				; optimize OK (map.pas), line = 158
 21765
 21766 8887 8D 5F F5			sta $F55F
 21767 888A 4C F3 88			jmp l_536E
 21768 888D			l_532E
 21769
 21770 				; optimize OK (map.pas), line = 164
 21771
 21772 888D A9 4E			lda #$4E
 21773 888F 8D 0C F9			sta $F90C
 21774 8892 8D 0D F9			sta $F90C+1
 21775
 21776 				; optimize OK (map.pas), line = 165
 21777
 21778 8895 8D 0E F9			sta $F90E
 21779 8898 8D 0F F9			sta $F90E+1
 21780
 21781 				; optimize OK (map.pas), line = 166
 21782
 21783 889B A9 2C			lda #$2C
 21784 889D 8D 0C F5			sta $F50C
 21785 88A0 A9 2D			lda #$2D
 21786 88A2 8D 0D F5			sta $F50C+1
 21787
 21788 				; optimize OK (map.pas), line = 167
 21789
 21790 88A5 A9 2E			lda #$2E
 21791 88A7 8D 0E F5			sta $F50E
 21792 88AA A9 2F			lda #$2F
 21793 88AC 8D 0F F5			sta $F50E+1
 21794
 21795 				; optimize OK (map.pas), line = 169
 21796
 21797 88AF A9 4E			lda #$4E
 21798 88B1 8D 34 F9			sta $F934
 21799 88B4 8D 35 F9			sta $F934+1
 21800
 21801 				; optimize OK (map.pas), line = 170
 21802
 21803 88B7 8D 36 F9			sta $F936
 21804 88BA 8D 37 F9			sta $F936+1
 21805
 21806 				; optimize OK (map.pas), line = 171
 21807
 21808 88BD A9 38			lda #$38
 21809 88BF 8D 34 F5			sta $F534
 21810 88C2 A9 39			lda #$39
 21811 88C4 8D 35 F5			sta $F534+1
 21812
 21813 				; optimize OK (map.pas), line = 172
 21814
 21815 88C7 A9 3A			lda #$3A
 21816 88C9 8D 36 F5			sta $F536
 21817 88CC A9 3B			lda #$3B
 21818 88CE 8D 37 F5			sta $F536+1
 21819
 21820 				; optimize OK (map.pas), line = 174
 21821
 21822 88D1 A9 4E			lda #$4E
 21823 88D3 8D 5C F9			sta $F95C
 21824 88D6 8D 5D F9			sta $F95C+1
 21825
 21826 				; optimize OK (map.pas), line = 175
 21827
 21828 88D9 8D 5E F9			sta $F95E
 21829 88DC 8D 5F F9			sta $F95E+1
 21830
 21831 				; optimize OK (map.pas), line = 176
 21832
 21833 88DF A9 41			lda #$41
 21834 88E1 8D 5C F5			sta $F55C
 21835 88E4 A9 42			lda #$42
 21836 88E6 8D 5D F5			sta $F55C+1
 21837
 21838 				; optimize OK (map.pas), line = 177
 21839
 21840 88E9 A9 43			lda #$43
 21841 88EB 8D 5E F5			sta $F55E
 21842 88EE A9 44			lda #$44
 21843 88F0 8D 5F F5			sta $F55E+1
 21844 88F3			l_536E
 21845 88F3			l_5297
 21846
 21847 				; ------------------------------------------------------------
 21848
 21849 = BACC			I	= DATAORIGIN+$1657
 21850
 21851 = BACC			@VarData	= I
 21852 = 0001			@VarDataSize	= 1
 21853
 21854 88F3			@exit
 21855 					.ifdef @new
 21856 					lda <@VarData
 21857 					sta :ztmp
 21858 					lda >@VarData
 21859 					ldy #@VarDataSize-1
 21860 					jmp @FreeMem
 21861 					els
 21862 88F3 60				rts						; ret
 21863 					eif
 21864 				.endl
 21865
 21866 88F4			.local	PRELOADMAP					; PROCEDURE
 21867
 21868 				; optimize FAIL ('BLACKCONSOLE', map.pas), line = 185
 21869
 21870 88F4 20 72 25			jsr BLACKCONSOLE
 21871
 21872 				; optimize OK (map.pas), line = 187
 21873
 21874 88F7 A9 41			lda #$41
 21875 88F9 18 6D 20 E4			add CURRENTMAP
 21876 88FD 8D 49 E7			sta adr.FNTNAME+$01
 21877
 21878 				; optimize OK (map.pas), line = 189
 21879
 21880 8900 AD 86 A2			lda FNTNAME
 21881 8903 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 21882 8906 AD 87 A2			lda FNTNAME+1
 21883 8909 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 21884 890C A9 00			lda #$00
 21885 890E 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 21886 8911 A9 F0			lda #$F0
 21887 8913 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 21888 8916 20 65 17			jsr XBAPLIB.XBUNAPL
 21889
 21890 				; optimize FAIL ('CLEARSPRITES', map.pas), line = 192
 21891
 21892 8919 20 B4 39			jsr CLEARSPRITES
 21893
 21894 				; optimize OK (map.pas), line = 193
 21895
 21896 891C A9 00			lda #$00
 21897 891E 20 88 35			jsr PAINTPLAYER
 21898
 21899 				; optimize FAIL ('DRAWMAJORMONEY', map.pas), line = 196
 21900
 21901 8921 20 5B 87			jsr DRAWMAJORMONEY
 21902
 21903 				; optimize OK (map.pas), line = 197
 21904
 21905 8924 A9 00			lda #$00
 21906 8926 8D 77 B0			sta MAPRELOADED
 21907 8929			@exit
 21908 					.ifdef @new
 21909 					lda <@VarData
 21910 					sta :ztmp
 21911 					lda >@VarData
 21912 					ldy #@VarDataSize-1
 21913 					jmp @FreeMem
 21914 					els
 21915 8929 60				rts						; ret
 21916 					eif
 21917 				.endl
 21918
 21919 892A			.local	LOADMAP						; PROCEDURE
 21920
 21921 				; optimize FAIL ('PRELOADMAP', map.pas), line = 204
 21922
 21923 892A 20 F4 88			jsr PRELOADMAP
 21924
 21925 				; optimize FAIL ('ENABLEMAPCONSOLE', map.pas), line = 205
 21926
 21927 892D 20 DA 25			jsr ENABLEMAPCONSOLE
 21928
 21929 				; optimize FAIL ('PRINTMAPSTATUS', map.pas), line = 206
 21930
 21931 8930 20 23 84			jsr PRINTMAPSTATUS
 21932 8933			@exit
 21933 					.ifdef @new
 21934 					lda <@VarData
 21935 					sta :ztmp
 21936 					lda >@VarData
 21937 					ldy #@VarDataSize-1
 21938 					jmp @FreeMem
 21939 					els
 21940 8933 60				rts						; ret
 21941 					eif
 21942 				.endl
 21943
 21944 8934			.local	CHANGEMAP					; PROCEDURE
 21945
 21946 				; optimize OK (map.pas), line = 214
 21947
 21948 8934 AD B8 EA			lda PLAYERPOS_X
 21949 8937 C9 CB			cmp #$CB
 21950 8939 90 1E			jcc l_53CD
 21951
 21952 				; optimize OK (map.pas), line = 217
 21953
 21954 893B A9 31			lda #$31
 21955 893D 8D B8 EA			sta PLAYERPOS_X
 21956
 21957 				; optimize OK (map.pas), line = 218
 21958
 21959 8940 A9 00			lda #$00
 21960 8942 8D BA EA			sta MAPPOS_X
 21961
 21962 				; optimize OK (map.pas), line = 219
 21963
 21964 8945 AD 20 E4			lda CURRENTMAP
 21965 8948 C9 04			cmp #$04
 21966 894A F0 0D			jeq l_53F4
 21967 894C C9 09			cmp #$09
 21968 894E F0 09			jeq l_53F4
 21969
 21970 				; optimize OK (map.pas), line = 221
 21971
 21972 8950 EE 20 E4			inc CURRENTMAP
 21973
 21974 				; optimize FAIL ('LOADMAP', map.pas), line = 222
 21975
 21976 8953 20 2A 89			jsr LOADMAP
 21977 8956 4C C4 89			jmp @exit
 21978 8959			l_53F4
 21979 8959			l_53CD
 21980
 21981 				; optimize OK (map.pas), line = 227
 21982
 21983 8959 AD B8 EA			lda PLAYERPOS_X
 21984 895C C9 2F			cmp #$2F
 21985 895E B0 1C			jcs l_5416
 21986
 21987 				; optimize OK (map.pas), line = 230
 21988
 21989 8960 A9 C9			lda #$C9
 21990 8962 8D B8 EA			sta PLAYERPOS_X
 21991
 21992 				; optimize OK (map.pas), line = 231
 21993
 21994 8965 A9 13			lda #$13
 21995 8967 8D BA EA			sta MAPPOS_X
 21996
 21997 				; optimize OK (map.pas), line = 232
 21998
 21999 896A AD 20 E4			lda CURRENTMAP
 22000 896D F0 0D			jeq l_543D
 22001 896F C9 05			cmp #$05
 22002 8971 F0 09			jeq l_543D
 22003
 22004 				; optimize OK (map.pas), line = 234
 22005
 22006 8973 CE 20 E4			dec CURRENTMAP
 22007
 22008 				; optimize FAIL ('LOADMAP', map.pas), line = 235
 22009
 22010 8976 20 2A 89			jsr LOADMAP
 22011 8979 4C C4 89			jmp @exit
 22012 897C			l_543D
 22013 897C			l_5416
 22014
 22015 				; optimize OK (map.pas), line = 240
 22016
 22017 897C AD B9 EA			lda PLAYERPOS_Y
 22018 897F C9 AD			cmp #$AD
 22019 8981 90 1D			jcc l_545F
 22020
 22021 				; optimize OK (map.pas), line = 242
 22022
 22023 8983 A9 24			lda #$24
 22024 8985 8D B9 EA			sta PLAYERPOS_Y
 22025
 22026 				; optimize OK (map.pas), line = 243
 22027
 22028 8988 A9 00			lda #$00
 22029 898A 8D BB EA			sta MAPPOS_Y
 22030
 22031 				; optimize OK (map.pas), line = 244
 22032
 22033 898D AD 20 E4			lda CURRENTMAP
 22034 8990 C9 05			cmp #$05
 22035 8992 B0 0C			jcs l_547A
 22036
 22037 				; optimize OK (map.pas), line = 246
 22038
 22039 8994 18 69 05			add #$05
 22040 8997 8D 20 E4			sta CURRENTMAP
 22041
 22042 				; optimize FAIL ('LOADMAP', map.pas), line = 247
 22043
 22044 899A 20 2A 89			jsr LOADMAP
 22045 899D 4C C4 89			jmp @exit
 22046 89A0			l_547A
 22047 89A0			l_545F
 22048
 22049 				; optimize OK (map.pas), line = 252
 22050
 22051 89A0 AD B9 EA			lda PLAYERPOS_Y
 22052 89A3 C9 23			cmp #$23
 22053 89A5 B0 1D			jcs l_549C
 22054
 22055 				; optimize OK (map.pas), line = 254
 22056
 22057 89A7 A9 AC			lda #$AC
 22058 89A9 8D B9 EA			sta PLAYERPOS_Y
 22059
 22060 				; optimize OK (map.pas), line = 255
 22061
 22062 89AC A9 11			lda #$11
 22063 89AE 8D BB EA			sta MAPPOS_Y
 22064
 22065 				; optimize OK (map.pas), line = 256
 22066
 22067 89B1 AD 20 E4			lda CURRENTMAP
 22068 89B4 C9 05			cmp #$05
 22069 89B6 90 0C			jcc l_54B7
 22070
 22071 				; optimize OK (map.pas), line = 258
 22072
 22073 89B8 38 E9 05			sub #$05
 22074 89BB 8D 20 E4			sta CURRENTMAP
 22075
 22076 				; optimize FAIL ('LOADMAP', map.pas), line = 259
 22077
 22078 89BE 20 2A 89			jsr LOADMAP
 22079 89C1 4C C4 89			jmp @exit
 22080 89C4			l_54B7
 22081 89C4			l_549C
 22082 89C4			@exit
 22083 					.ifdef @new
 22084 					lda <@VarData
 22085 					sta :ztmp
 22086 					lda >@VarData
 22087 					ldy #@VarDataSize-1
 22088 					jmp @FreeMem
 22089 					els
 22090 89C4 60				rts						; ret
 22091 					eif
 22092 				.endl
 22093
 22094 89C5			.local	SETUPGAME					; PROCEDURE
 22095
 22096 				; optimize OK (setupGame.pas), line = 17
 22097
 22098 89C5 A9 1C			lda #$1C
 22099 89C7 20 B3 26			jsr LOADLOCATION
 22100
 22101 				; optimize FAIL ('SHOWLOCATIONHEADER', setupGame.pas), line = 19
 22102
 22103 89CA 20 1D 26			jsr SHOWLOCATIONHEADER
 22104
 22105 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 21
 22106
 22107 89CD E8				inx
 22108 89CE AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 22109 89D3 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 22110 89D8 E8				inx
 22111 89D9 A9 03 95 94			mva #$03 :STACKORIGIN,x
 22112 89DD 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22113
 22114 				; optimize OK (setupGame.pas), line = 22
 22115
 22116 89E0 A9 04			lda #$04
 22117 89E2 20 79 1F			jsr B_CRT.CRT_CLEARROW_0742
 22118
 22119 				; optimize OK (setupGame.pas), line = 23
 22120
 22121 89E5 A9 12			lda #$12
 22122 89E7 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 22123 89EA A9 04			lda #$04
 22124 89EC 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 22125 89EF 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 22126
 22127 				; optimize OK (setupGame.pas), line = 24
 22128
 22129 89F2 A9 3E			lda #$3E
 22130 89F4 8D 8D B6			sta GETANSWER.A
 22131 89F7 A9 00			lda #$00
 22132 89F9 8D 8E B6			sta GETANSWER.B
 22133 89FC 20 B1 21			jsr GETANSWER
 22134 89FF AD 8F B6			lda GETANSWER.RESULT
 22135 8A02 8D CE BA			sta R
 22136
 22137 				; optimize OK (setupGame.pas), line = 25
 22138
 22139 8A05 D0 0A			jne l_54EF
 22140
 22141 				; optimize OK (setupGame.pas), line = 26
 22142
 22143 8A07 A9 19			lda #$19
 22144 8A09 8D 54 E1			sta GAMELENGTH
 22145
 22146 				; optimize OK (setupGame.pas), line = 27
 22147
 22148 8A0C A9 64			lda #$64
 22149 8A0E 4C 18 8A			jmp l_5501
 22150 8A11			l_54EF
 22151
 22152 				; optimize OK (setupGame.pas), line = 31
 22153
 22154 8A11 A9 32			lda #$32
 22155 8A13 8D 54 E1			sta GAMELENGTH
 22156
 22157 				; optimize OK (setupGame.pas), line = 32
 22158
 22159 8A16 A9 C8			lda #$C8
 22160 8A18			l_5501
 22161 8A18 8D 55 E1			sta GAMEPOINTS
 22162 8A1B A9 00			lda #$00
 22163 8A1D 8D 56 E1			sta GAMEPOINTS+1
 22164
 22165 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', setupGame.pas), line = 34
 22166
 22167 8A20 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 22168
 22169 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', setupGame.pas), line = 35
 22170
 22171 8A23 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 22172
 22173 				; optimize OK (setupGame.pas), line = 36
 22174
 22175 8A26 A9 06			lda #$06
 22176 8A28 8D CF BA			sta K
 22177
 22178 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 52
 22179
 22180 8A2B E8				inx
 22181 8A2C AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 22182 8A31 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 22183 8A36 E8				inx
 22184 8A37 AD CF BA 95 94		mva K :STACKORIGIN,x
 22185 8A3C 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22186
 22187 				; --- RepeatUntilProlog
 22188 8A3F			l_5516
 22189
 22190 				; optimize OK (setupGame.pas), line = 54
 22191
 22192 8A3F A9 01			lda #$01
 22193 8A41 8D 91 B6			sta READVALUE.MINVALUE
 22194 8A44 A9 00			lda #$00
 22195 8A46 8D 92 B6			sta READVALUE.MINVALUE+1
 22196 8A49 A9 05			lda #$05
 22197 8A4B 8D 93 B6			sta READVALUE.MAXVALUE
 22198 8A4E A9 00			lda #$00
 22199 8A50 8D 94 B6			sta READVALUE.MAXVALUE+1
 22200 8A53 20 EE 21			jsr READVALUE
 22201 8A56 AD 95 B6			lda READVALUE.RESULT
 22202 8A59 8D 00 E0			sta NPLAYERS
 22203
 22204 				; optimize OK (setupGame.pas), line = 55
 22205
 22206 8A5C F0 E1			jeq l_5516
 22207 8A5E C9 05			cmp #$05
 22208 8A60 B0 DD			jcs l_5516
 22209
 22210 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', setupGame.pas), line = 56
 22211
 22212 8A62 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 22213
 22214 				; optimize OK (setupGame.pas), line = 59
 22215
 22216 8A65 AD 16 A4			lda PLGANGSTERS
 22217 8A68 85 82			sta :bp2
 22218 8A6A AD 17 A4			lda PLGANGSTERS+1
 22219 8A6D 85 83			sta :bp2+1
 22220 8A6F A9 63			lda #$63
 22221 8A71 A0 1F			ldy #$1F
 22222 8A73 91 82 88 10 FB		sta:rpl (:bp2),y-
 22223
 22224 				; optimize OK (setupGame.pas), line = 60
 22225
 22226 8A78 A9 00			lda #$00
 22227 8A7A 8D CD BA			sta J
 22228 8A7D AC 00 E0			ldy NPLAYERS
 22229 8A80 88				dey
 22230 8A81 8C 85 8A			sty @FORTMP_5547_0
 22231
 22232 8A84			l_554A
 22233 				; --- ForToDoCondition
 22234 8A84 A9 00			lda @FORTMP_5547_0::#$00
 22235 8A86 CD CD BA			cmp J
 22236 8A89 B0 03 4C F8 8D		jcc l_5558
 22237
 22238 				; optimize OK (setupGame.pas), line = 62
 22239
 22240 8A8E AD CD BA			lda J
 22241 8A91 8D 1A E4			sta CURRENTPLAYER
 22242
 22243 				; optimize FAIL ('SHOWLOCATIONHEADER', setupGame.pas), line = 64
 22244
 22245 8A94 20 1D 26			jsr SHOWLOCATIONHEADER
 22246
 22247 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 67
 22248
 22249 8A97 E8				inx
 22250 8A98 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 22251 8A9D AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 22252 8AA2 E8				inx
 22253 8AA3 A9 04 95 94			mva #$04 :STACKORIGIN,x
 22254 8AA7 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22255
 22256 				; optimize OK (setupGame.pas), line = 68
 22257
 22258 8AAA AD CD BA			lda J
 22259 8AAD 18 69 01			add #$01
 22260 8AB0 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 22261 8AB3 A9 00			lda #$00
 22262 8AB5 69 00			adc #$00
 22263 8AB7 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 22264 8ABA 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 22265
 22266 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', setupGame.pas), line = 69
 22267
 22268 8ABD 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 22269
 22270 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 70
 22271
 22272 8AC0 E8				inx
 22273 8AC1 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 22274 8AC6 AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 22275 8ACB E8				inx
 22276 8ACC A9 06 95 94			mva #$06 :STACKORIGIN,x
 22277 8AD0 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22278
 22279 				; optimize OK (setupGame.pas), line = 71
 22280
 22281 8AD3 A9 0B			lda #$0B
 22282 8AD5 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 22283 8AD8 A9 07			lda #$07
 22284 8ADA 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 22285 8ADD 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 22286
 22287 				; optimize FAIL (1, setupGame.pas), line = 72
 22288
 22289 8AE0 E8				inx
 22290 8AE1 AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22291 8AE6 E8				inx
 22292 8AE7 A9 03 95 94			mva #$03 :STACKORIGIN,x
 22293 8AEB 20 87 0F			jsr shlEAX_CL.BYTE
 22294 8AEE CA				dex
 22295 8AEF B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 22296 8AF1 16 94			asl :STACKORIGIN,x
 22297 8AF3 2A				rol @
 22298 8AF4 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 22299 8AF6 A9 0F			lda #$0F
 22300 8AF8 20 0D 1E			jsr B_CRT.CRT_READSTRING_06B7
 22301 8AFB E8				inx
 22302 8AFC AD 41 1E 95 94		mva B_CRT.CRT_READSTRING_06B7.RESULT :STACKORIGIN,x
 22303 8B01 AD 42 1E 95 A4		mva B_CRT.CRT_READSTRING_06B7.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22304 8B06 20 AB 1A			jsr B_CRT.ATASCII2ANTIC_0448
 22305 8B09 E8				inx
 22306 8B0A AD 04 1B 95 94		mva B_CRT.ATASCII2ANTIC_0448.RESULT :STACKORIGIN,x
 22307 8B0F AD 05 1B 95 A4		mva B_CRT.ATASCII2ANTIC_0448.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22308 8B14 B4 93			ldy :STACKORIGIN-1,x
 22309 8B16 B9 E0 B0			lda adr.GANGSTERNAMES,y
 22310 8B19 85 8C			sta @move.dst
 22311 8B1B B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 22312 8B1E 85 8D			sta @move.dst+1
 22313 8B20 B5 94			lda :STACKORIGIN,x
 22314 8B22 85 88			sta @move.src
 22315 8B24 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 22316 8B26 85 89			sta @move.src+1
 22317 8B28 A0 00			ldy #$00
 22318 8B2A B1 88			lda (@move.src),y
 22319 8B2C 18 69 01			add #1
 22320 8B2F 85 84			sta @move.cnt
 22321 8B31 90 01			scc
 22322 8B33 C8				iny
 22323 8B34 84 85			sty @move.cnt+1
 22324 8B36 20 35 10			jsr @move
 22325 8B39 CA				dex
 22326 8B3A CA				dex
 22327
 22328 				; optimize OK (setupGame.pas), line = 75
 22329
 22330 8B3B AC 1A E4			ldy CURRENTPLAYER
 22331 8B3E A9 01			lda #$01
 22332 8B40 99 41 E4			sta adr.PLNGANGSTERS,y
 22333
 22334 				; optimize OK (setupGame.pas), line = 76
 22335
 22336 8B43 98				tya
 22337 8B44 0A				asl @
 22338 8B45 0A				asl @
 22339 8B46 0A				asl @
 22340 8B47 A8				tay
 22341 8B48 AD CD BA			lda J
 22342 8B4B 99 21 E4			sta adr.PLGANGSTERS,y
 22343
 22344 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 78
 22345
 22346 8B4E E8				inx
 22347 8B4F AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 22348 8B54 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 22349 8B59 E8				inx
 22350 8B5A A9 09 95 94			mva #$09 :STACKORIGIN,x
 22351 8B5E 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22352
 22353 				; optimize OK (setupGame.pas), line = 79
 22354
 22355 8B61 A9 0C			lda #$0C
 22356 8B63 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 22357 8B66 A9 0A			lda #$0A
 22358 8B68 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 22359 8B6B 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 22360
 22361 				; optimize FAIL (1, setupGame.pas), line = 80
 22362
 22363 8B6E E8				inx
 22364 8B6F AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22365 8B74 A9 00			lda #$00
 22366 8B76 16 94			asl :STACKORIGIN,x
 22367 8B78 2A				rol @
 22368 8B79 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 22369 8B7B A9 0F			lda #$0F
 22370 8B7D 20 0D 1E			jsr B_CRT.CRT_READSTRING_06B7
 22371 8B80 E8				inx
 22372 8B81 AD 41 1E 95 94		mva B_CRT.CRT_READSTRING_06B7.RESULT :STACKORIGIN,x
 22373 8B86 AD 42 1E 95 A4		mva B_CRT.CRT_READSTRING_06B7.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22374 8B8B 20 AB 1A			jsr B_CRT.ATASCII2ANTIC_0448
 22375 8B8E E8				inx
 22376 8B8F AD 04 1B 95 94		mva B_CRT.ATASCII2ANTIC_0448.RESULT :STACKORIGIN,x
 22377 8B94 AD 05 1B 95 A4		mva B_CRT.ATASCII2ANTIC_0448.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22378 8B99 B4 93			ldy :STACKORIGIN-1,x
 22379 8B9B B9 D8 B0			lda adr.PLGANG,y
 22380 8B9E 85 8C			sta @move.dst
 22381 8BA0 B9 D9 B0			lda adr.PLGANG+1,y
 22382 8BA3 85 8D			sta @move.dst+1
 22383 8BA5 B5 94			lda :STACKORIGIN,x
 22384 8BA7 85 88			sta @move.src
 22385 8BA9 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 22386 8BAB 85 89			sta @move.src+1
 22387 8BAD A0 00			ldy #$00
 22388 8BAF B1 88			lda (@move.src),y
 22389 8BB1 18 69 01			add #1
 22390 8BB4 85 84			sta @move.cnt
 22391 8BB6 90 01			scc
 22392 8BB8 C8				iny
 22393 8BB9 84 85			sty @move.cnt+1
 22394 8BBB 20 35 10			jsr @move
 22395 8BBE CA				dex
 22396
 22397 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 82
 22398
 22399 8BBF AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 22400 8BC4 AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 22401 8BC9 E8				inx
 22402 8BCA A9 0C 95 94			mva #$0C :STACKORIGIN,x
 22403 8BCE 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22404
 22405 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 83
 22406
 22407 8BD1 E8				inx
 22408 8BD2 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 22409 8BD7 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 22410 8BDC E8				inx
 22411 8BDD A9 0E 95 94			mva #$0E :STACKORIGIN,x
 22412 8BE1 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22413
 22414 				; optimize OK (setupGame.pas), line = 84
 22415
 22416 8BE4 A9 38			lda #$38
 22417 8BE6 8D 8D B6			sta GETANSWER.A
 22418 8BE9 A9 25			lda #$25
 22419 8BEB 8D 8E B6			sta GETANSWER.B
 22420 8BEE 20 B1 21			jsr GETANSWER
 22421 8BF1 AD 8F B6			lda GETANSWER.RESULT
 22422 8BF4 8D CE BA			sta R
 22423
 22424 				; optimize OK (setupGame.pas), line = 85
 22425
 22426 8BF7 AD 1A E4			lda CURRENTPLAYER
 22427 8BFA 0A				asl @
 22428 8BFB 0A				asl @
 22429 8BFC 0A				asl @
 22430 8BFD 85 9D			sta :STACKORIGIN+9
 22431 8BFF A9 01			lda #$01
 22432 8C01 38 ED CE BA			sub R
 22433 8C05 A4 9D			ldy :STACKORIGIN+9
 22434 8C07 99 F8 E3			sta adr.GANGSTERSEX,y
 22435
 22436 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 87
 22437
 22438 8C0A E8				inx
 22439 8C0B AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 22440 8C10 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 22441 8C15 E8				inx
 22442 8C16 A9 0F 95 94			mva #$0F :STACKORIGIN,x
 22443 8C1A 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22444
 22445 				; optimize FAIL (1, setupGame.pas), line = 88
 22446
 22447 8C1D E8				inx
 22448 8C1E AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22449 8C23 E8				inx
 22450 8C24 A9 03 95 94			mva #$03 :STACKORIGIN,x
 22451 8C28 20 87 0F			jsr shlEAX_CL.BYTE
 22452 8C2B CA				dex
 22453 8C2C A9 0A			lda #$0A
 22454 8C2E 8D 7D B4			sta GETRANDOM.MINP
 22455 8C31 A9 00			lda #$00
 22456 8C33 8D 7E B4			sta GETRANDOM.MINP+1
 22457 8C36 A9 63			lda #$63
 22458 8C38 8D 7F B4			sta GETRANDOM.MAXP
 22459 8C3B A9 00			lda #$00
 22460 8C3D 8D 80 B4			sta GETRANDOM.MAXP+1
 22461 8C40 A9 05			lda #$05
 22462 8C42 8D 81 B4			sta GETRANDOM.STEPS
 22463 8C45 A9 00			lda #$00
 22464 8C47 8D 82 B4			sta GETRANDOM.STEPS+1
 22465 8C4A A9 17			lda #$17
 22466 8C4C 8D 83 B4			sta GETRANDOM.X
 22467 8C4F A9 0F			lda #$0F
 22468 8C51 8D 84 B4			sta GETRANDOM.Y
 22469 8C54 20 03 20			jsr GETRANDOM
 22470 8C57 E8				inx
 22471 8C58 AD 85 B4 95 94		mva GETRANDOM.RESULT :STACKORIGIN,x
 22472 8C5D AD 86 B4 95 A4		mva GETRANDOM.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22473 8C62 B4 93			ldy :STACKORIGIN-1,x
 22474 8C64 B5 94			lda :STACKORIGIN,x
 22475 8C66 99 58 E3			sta adr.GANGSTERSTR,y
 22476 8C69 CA				dex
 22477
 22478 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 89
 22479
 22480 8C6A AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 22481 8C6F AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 22482 8C74 E8				inx
 22483 8C75 A9 10 95 94			mva #$10 :STACKORIGIN,x
 22484 8C79 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22485
 22486 				; optimize FAIL (1, setupGame.pas), line = 90
 22487
 22488 8C7C E8				inx
 22489 8C7D AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22490 8C82 E8				inx
 22491 8C83 A9 03 95 94			mva #$03 :STACKORIGIN,x
 22492 8C87 20 87 0F			jsr shlEAX_CL.BYTE
 22493 8C8A CA				dex
 22494 8C8B A9 0A			lda #$0A
 22495 8C8D 8D 7D B4			sta GETRANDOM.MINP
 22496 8C90 A9 00			lda #$00
 22497 8C92 8D 7E B4			sta GETRANDOM.MINP+1
 22498 8C95 A9 63			lda #$63
 22499 8C97 8D 7F B4			sta GETRANDOM.MAXP
 22500 8C9A A9 00			lda #$00
 22501 8C9C 8D 80 B4			sta GETRANDOM.MAXP+1
 22502 8C9F A9 05			lda #$05
 22503 8CA1 8D 81 B4			sta GETRANDOM.STEPS
 22504 8CA4 A9 00			lda #$00
 22505 8CA6 8D 82 B4			sta GETRANDOM.STEPS+1
 22506 8CA9 A9 1A			lda #$1A
 22507 8CAB 8D 83 B4			sta GETRANDOM.X
 22508 8CAE A9 10			lda #$10
 22509 8CB0 8D 84 B4			sta GETRANDOM.Y
 22510 8CB3 20 03 20			jsr GETRANDOM
 22511 8CB6 E8				inx
 22512 8CB7 AD 85 B4 95 94		mva GETRANDOM.RESULT :STACKORIGIN,x
 22513 8CBC AD 86 B4 95 A4		mva GETRANDOM.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22514 8CC1 B4 93			ldy :STACKORIGIN-1,x
 22515 8CC3 B5 94			lda :STACKORIGIN,x
 22516 8CC5 99 78 E3			sta adr.GANGSTERINT,y
 22517 8CC8 CA				dex
 22518
 22519 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 91
 22520
 22521 8CC9 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 22522 8CCE AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 22523 8CD3 E8				inx
 22524 8CD4 A9 11 95 94			mva #$11 :STACKORIGIN,x
 22525 8CD8 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22526
 22527 				; optimize FAIL (1, setupGame.pas), line = 92
 22528
 22529 8CDB E8				inx
 22530 8CDC AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22531 8CE1 E8				inx
 22532 8CE2 A9 03 95 94			mva #$03 :STACKORIGIN,x
 22533 8CE6 20 87 0F			jsr shlEAX_CL.BYTE
 22534 8CE9 CA				dex
 22535 8CEA A9 0A			lda #$0A
 22536 8CEC 8D 7D B4			sta GETRANDOM.MINP
 22537 8CEF A9 00			lda #$00
 22538 8CF1 8D 7E B4			sta GETRANDOM.MINP+1
 22539 8CF4 A9 63			lda #$63
 22540 8CF6 8D 7F B4			sta GETRANDOM.MAXP
 22541 8CF9 A9 00			lda #$00
 22542 8CFB 8D 80 B4			sta GETRANDOM.MAXP+1
 22543 8CFE A9 05			lda #$05
 22544 8D00 8D 81 B4			sta GETRANDOM.STEPS
 22545 8D03 A9 00			lda #$00
 22546 8D05 8D 82 B4			sta GETRANDOM.STEPS+1
 22547 8D08 A9 1A			lda #$1A
 22548 8D0A 8D 83 B4			sta GETRANDOM.X
 22549 8D0D A9 11			lda #$11
 22550 8D0F 8D 84 B4			sta GETRANDOM.Y
 22551 8D12 20 03 20			jsr GETRANDOM
 22552 8D15 E8				inx
 22553 8D16 AD 85 B4 95 94		mva GETRANDOM.RESULT :STACKORIGIN,x
 22554 8D1B AD 86 B4 95 A4		mva GETRANDOM.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22555 8D20 B4 93			ldy :STACKORIGIN-1,x
 22556 8D22 B5 94			lda :STACKORIGIN,x
 22557 8D24 99 98 E3			sta adr.GANGSTERBRUT,y
 22558 8D27 CA				dex
 22559
 22560 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 93
 22561
 22562 8D28 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 22563 8D2D AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 22564 8D32 E8				inx
 22565 8D33 A9 12 95 94			mva #$12 :STACKORIGIN,x
 22566 8D37 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22567
 22568 				; optimize FAIL (1, setupGame.pas), line = 94
 22569
 22570 8D3A E8				inx
 22571 8D3B AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22572 8D40 E8				inx
 22573 8D41 A9 03 95 94			mva #$03 :STACKORIGIN,x
 22574 8D45 20 87 0F			jsr shlEAX_CL.BYTE
 22575 8D48 CA				dex
 22576 8D49 A9 0A			lda #$0A
 22577 8D4B 8D 7D B4			sta GETRANDOM.MINP
 22578 8D4E A9 00			lda #$00
 22579 8D50 8D 7E B4			sta GETRANDOM.MINP+1
 22580 8D53 A9 63			lda #$63
 22581 8D55 8D 7F B4			sta GETRANDOM.MAXP
 22582 8D58 A9 00			lda #$00
 22583 8D5A 8D 80 B4			sta GETRANDOM.MAXP+1
 22584 8D5D A9 05			lda #$05
 22585 8D5F 8D 81 B4			sta GETRANDOM.STEPS
 22586 8D62 A9 00			lda #$00
 22587 8D64 8D 82 B4			sta GETRANDOM.STEPS+1
 22588 8D67 A9 1A			lda #$1A
 22589 8D69 8D 83 B4			sta GETRANDOM.X
 22590 8D6C A9 12			lda #$12
 22591 8D6E 8D 84 B4			sta GETRANDOM.Y
 22592 8D71 20 03 20			jsr GETRANDOM
 22593 8D74 E8				inx
 22594 8D75 AD 85 B4 95 94		mva GETRANDOM.RESULT :STACKORIGIN,x
 22595 8D7A AD 86 B4 95 A4		mva GETRANDOM.RESULT+1 :STACKORIGIN+STACKWIDTH,x
 22596 8D7F B4 93			ldy :STACKORIGIN-1,x
 22597 8D81 B5 94			lda :STACKORIGIN,x
 22598 8D83 99 B8 E3			sta adr.GANGSTERHEALTH,y
 22599 8D86 CA				dex
 22600
 22601 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', setupGame.pas), line = 95
 22602
 22603 8D87 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 22604 8D8C AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 22605 8D91 E8				inx
 22606 8D92 A9 13 95 94			mva #$13 :STACKORIGIN,x
 22607 8D96 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22608
 22609 				; optimize FAIL (1, setupGame.pas), line = 96
 22610
 22611 8D99 E8				inx
 22612 8D9A AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22613 8D9F A9 00			lda #$00
 22614 8DA1 16 94			asl :STACKORIGIN,x
 22615 8DA3 2A				rol @
 22616 8DA4 16 94			asl :STACKORIGIN,x
 22617 8DA6 2A				rol @
 22618 8DA7 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 22619 8DA9 A9 88			lda #$88
 22620 8DAB 8D 7D B4			sta GETRANDOM.MINP
 22621 8DAE A9 13			lda #$13
 22622 8DB0 8D 7E B4			sta GETRANDOM.MINP+1
 22623 8DB3 A9 0F			lda #$0F
 22624 8DB5 8D 7F B4			sta GETRANDOM.MAXP
 22625 8DB8 A9 27			lda #$27
 22626 8DBA 8D 80 B4			sta GETRANDOM.MAXP+1
 22627 8DBD A9 FA			lda #$FA
 22628 8DBF 8D 81 B4			sta GETRANDOM.STEPS
 22629 8DC2 A9 00			lda #$00
 22630 8DC4 8D 82 B4			sta GETRANDOM.STEPS+1
 22631 8DC7 A9 18			lda #$18
 22632 8DC9 8D 83 B4			sta GETRANDOM.X
 22633 8DCC A9 13			lda #$13
 22634 8DCE 8D 84 B4			sta GETRANDOM.Y
 22635 8DD1 20 03 20			jsr GETRANDOM
 22636 8DD4 B4 94			ldy :STACKORIGIN,x
 22637 8DD6 AD 85 B4			lda GETRANDOM.RESULT
 22638 8DD9 99 10 E0			sta adr.PLMONEY,y
 22639 8DDC AD 86 B4			lda GETRANDOM.RESULT+1
 22640 8DDF 99 11 E0			sta adr.PLMONEY+1,y
 22641 8DE2 A9 00			lda #$00
 22642 8DE4 99 12 E0			sta adr.PLMONEY+2,y
 22643 8DE7 A9 00			lda #$00
 22644 8DE9 99 13 E0			sta adr.PLMONEY+3,y
 22645 8DEC CA				dex
 22646
 22647 				; optimize FAIL ('WAITFORKEY', setupGame.pas), line = 97
 22648
 22649 8DED 20 2E 21			jsr WAITFORKEY
 22650
 22651 				; --- ForToDoEpilog
 22652 8DF0 EE CD BA			inc J
 22653 8DF3 F0 03 4C 84 8A		jne l_554A
 22654 8DF8			l_5558
 22655
 22656 				; ------------------------------------------------------------
 22657
 22658 = BACD			J	= DATAORIGIN+$1658
 22659 = BACE			R	= DATAORIGIN+$1659
 22660 = BACF			K	= DATAORIGIN+$165A
 22661
 22662 = BACD			@VarData	= J
 22663 = 0003			@VarDataSize	= 3
 22664
 22665 8DF8			@exit
 22666 					.ifdef @new
 22667 					lda <@VarData
 22668 					sta :ztmp
 22669 					lda >@VarData
 22670 					ldy #@VarDataSize-1
 22671 					jmp @FreeMem
 22672 					els
 22673 8DF8 60				rts						; ret
 22674 					eif
 22675 				.endl
 22676
 22677 8DF9			.local	JOBWORKING					; PROCEDURE
 22678
 22679 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 5
 22680
 22681 8DF9 20 97 25			jsr ENABLECONSOLE
 22682
 22683 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', updates.pas), line = 6
 22684
 22685 8DFC 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
 22686
 22687 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', updates.pas), line = 7
 22688
 22689 8DFF E8				inx
 22690 8E00 AD A6 A3 95 94		mva LOC_STRING_32 :STACKORIGIN,x
 22691 8E05 AD A7 A3 95 A4		mva LOC_STRING_32+1 :STACKORIGIN+STACKWIDTH,x
 22692 8E0A E8				inx
 22693 8E0B A9 01 95 94			mva #$01 :STACKORIGIN,x
 22694 8E0F 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22695
 22696 				; optimize OK (updates.pas), line = 8
 22697
 22698 8E12 A9 00			lda #$00
 22699 8E14 8D DB AF			sta B_CRT.CRT_INVERT.X
 22700 8E17 A9 01			lda #$01
 22701 8E19 8D DC AF			sta B_CRT.CRT_INVERT.Y
 22702 8E1C AD B0 A6			lda B_CRT.CRT_SCREENWIDTH
 22703 8E1F 8D DD AF			sta B_CRT.CRT_INVERT.WIDTH
 22704 8E22 20 B6 1F			jsr B_CRT.CRT_INVERT
 22705
 22706 				; optimize OK (updates.pas), line = 9
 22707
 22708 8E25 A9 00			lda #$00
 22709 8E27 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 22710 8E2A A9 03			lda #$03
 22711 8E2C 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 22712 8E2F 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 22713 8E32			@exit
 22714 					.ifdef @new
 22715 					lda <@VarData
 22716 					sta :ztmp
 22717 					lda >@VarData
 22718 					ldy #@VarDataSize-1
 22719 					jmp @FreeMem
 22720 					els
 22721 8E32 60				rts						; ret
 22722 					eif
 22723 				.endl
 22724
 22725 8E33			.local	UPDATERANK					; PROCEDURE
 22726
 22727 				; optimize OK (updates.pas), line = 20
 22728
 22729 8E33 AC 1A E4			ldy CURRENTPLAYER
 22730 8E36 B9 78 E0			lda adr.PLRANK,y
 22731 8E39 8D D1 BA			sta OLDRANK
 22732
 22733 				; optimize OK (updates.pas), line = 21
 22734
 22735 8E3C B9 80 E0			lda adr.PLNEWPOINTS,y
 22736 8E3F 30 0C			jmi l_565E
 22737 8E41 F0 0A			jeq l_565E
 22738
 22739 				; optimize OK (updates.pas), line = 22
 22740
 22741 8E43 B9 7C E0			lda adr.PLPOINTS,y
 22742 8E46 18 79 80 E0			add adr.PLNEWPOINTS,y
 22743 8E4A 4C 82 8E			jmp l_567D
 22744 8E4D			l_565E
 22745
 22746 				; optimize OK (updates.pas), line = 26
 22747
 22748 8E4D AC 1A E4			ldy CURRENTPLAYER
 22749 8E50 B9 7C E0			lda adr.PLPOINTS,y
 22750 8E53 85 9D			sta :STACKORIGIN+9
 22751 8E55 B9 80 E0			lda adr.PLNEWPOINTS,y
 22752 8E58 85 9E			sta :STACKORIGIN+10
 22753 8E5A A0 00			ldy #$00
 22754 8E5C A5 9E			lda :STACKORIGIN+10
 22755 8E5E 10 01			spl
 22756 8E60 88				dey
 22757 8E61 84 AE			sty :STACKORIGIN+STACKWIDTH+10
 22758 8E63 A5 9D			lda :STACKORIGIN+9
 22759 8E65 18 65 9E			add :STACKORIGIN+10
 22760 8E68 8D D3 BA			sta K
 22761 8E6B A9 00			lda #$00
 22762 8E6D 65 AE			adc :STACKORIGIN+STACKWIDTH+10
 22763 8E6F 8D D4 BA			sta K+1
 22764
 22765 				; optimize OK (updates.pas), line = 27
 22766
 22767 8E72 10 08			jpl l_56A0
 22768 8E74 A9 00			lda #$00
 22769 8E76 8D D3 BA			sta K
 22770 8E79 8D D4 BA			sta K+1
 22771 8E7C			l_56A0
 22772
 22773 				; optimize OK (updates.pas), line = 28
 22774
 22775 8E7C AC 1A E4			ldy CURRENTPLAYER
 22776 8E7F AD D3 BA			lda K
 22777 8E82			l_567D
 22778 8E82 99 7C E0			sta adr.PLPOINTS,y
 22779
 22780 				; optimize OK (updates.pas), line = 30
 22781
 22782 8E85 AC 1A E4			ldy CURRENTPLAYER
 22783 8E88 A9 00			lda #$00
 22784 8E8A 99 80 E0			sta adr.PLNEWPOINTS,y
 22785
 22786 				; optimize OK (updates.pas), line = 32
 22787
 22788 8E8D A9 0A			lda #$0A
 22789 8E8F 85 8C			sta @WORD.DIV.B
 22790 8E91 A9 00			lda #$00
 22791 8E93 85 8D			sta @WORD.DIV.B+1
 22792 8E95 AD 55 E1			lda GAMEPOINTS
 22793 8E98 85 84			sta @WORD.DIV.A
 22794 8E9A AD 56 E1			lda GAMEPOINTS+1
 22795 8E9D 85 85			sta @WORD.DIV.A+1
 22796 8E9F 20 AD 12			jsr @WORD.DIV
 22797 8EA2 A5 84			lda :eax
 22798 8EA4 8D D5 BA			sta D
 22799
 22800 				; optimize OK (updates.pas), line = 33
 22801
 22802 8EA7 AC 1A E4			ldy CURRENTPLAYER
 22803 8EAA B9 7C E0			lda adr.PLPOINTS,y
 22804 8EAD 18 69 05			add #$05
 22805 8EB0 85 84			sta @WORD.DIV.A
 22806 8EB2 A9 00			lda #$00
 22807 8EB4 69 00			adc #$00
 22808 8EB6 85 85			sta @WORD.DIV.A+1
 22809 8EB8 AD D5 BA			lda D
 22810 8EBB 85 8C			sta @WORD.DIV.B
 22811 8EBD A9 00			lda #$00
 22812 8EBF 85 8D			sta @WORD.DIV.B+1
 22813 8EC1 20 AD 12			jsr @WORD.DIV
 22814 8EC4 A5 84			lda :eax
 22815 8EC6 8D D2 BA			sta NEWRANK
 22816
 22817 				; optimize OK (updates.pas), line = 34
 22818
 22819 8EC9 C9 0B			cmp #$0B
 22820 8ECB 90 05			jcc l_56E4
 22821 8ECD A9 0A			lda #$0A
 22822 8ECF 8D D2 BA			sta NEWRANK
 22823 8ED2			l_56E4
 22824
 22825 				; optimize OK (updates.pas), line = 40
 22826
 22827 8ED2 AD D1 BA			lda OLDRANK
 22828 8ED5 CD D2 BA			cmp NEWRANK
 22829 8ED8 90 03 4C 7D 90		jcs l_56FF
 22830
 22831 				; optimize FAIL ('BLACKCONSOLE', updates.pas), line = 42
 22832
 22833 8EDD 20 72 25			jsr BLACKCONSOLE
 22834
 22835 				; optimize OK (updates.pas), line = 43
 22836
 22837 8EE0 A9 13			lda #$13
 22838 8EE2 20 B3 26			jsr LOADLOCATION
 22839
 22840 				; optimize OK (updates.pas), line = 44
 22841
 22842 8EE5 A9 00			lda #$00
 22843 8EE7 8D B8 EA			sta PLAYERPOS_X
 22844
 22845 				; optimize OK (updates.pas), line = 45
 22846
 22847 8EEA 8D B9 EA			sta PLAYERPOS_Y
 22848
 22849 				; optimize OK (updates.pas), line = 46
 22850
 22851 8EED 85 88			sta SYSTEM.FILLCHAR_02BB.A
 22852 8EEF A9 F4			lda #$F4
 22853 8EF1 85 89			sta SYSTEM.FILLCHAR_02BB.A+1
 22854 8EF3 A9 C0			lda #$C0
 22855 8EF5 85 8C			sta SYSTEM.FILLCHAR_02BB.COUNT
 22856 8EF7 A9 03			lda #$03
 22857 8EF9 85 8D			sta SYSTEM.FILLCHAR_02BB.COUNT+1
 22858 8EFB A9 00			lda #$00
 22859 8EFD 85 84			sta SYSTEM.FILLCHAR_02BB.VALUE
 22860 8EFF				.LOCAL +MAIN.SYSTEM.FILLCHAR_02BB
 22861 8EFF				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_02BB.M@INLINE [Source: main.a65]
     4 8EFF 20 8A 10			jsr @fill
Source: main.a65
 22862 					.ENDL
 22863
 22864 				; optimize OK (updates.pas), line = 47
 22865
 22866 8F02 AD 1A E4			lda CURRENTPLAYER
 22867 8F05 85 9D			sta :STACKORIGIN+9
 22868 8F07 A9 00			lda #$00
 22869 8F09 06 9D			asl :STACKORIGIN+9
 22870 8F0B 2A				rol @
 22871 8F0C 06 9D			asl :STACKORIGIN+9
 22872 8F0E 2A				rol @
 22873 8F0F 06 9D			asl :STACKORIGIN+9
 22874 8F11 2A				rol @
 22875 8F12 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 22876 8F14 A5 9D			lda :STACKORIGIN+9
 22877 8F16 18 69 00			add #$00
 22878 8F19 A8				tay
 22879 8F1A A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 22880 8F1C 69 00			adc #$00
 22881 8F1E 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 22882 8F20 B9 F8 E3			lda adr.GANGSTERSEX,y
 22883 8F23 D0 25			jne l_5728
 22884
 22885 				; optimize OK (updates.pas), line = 49
 22886
 22887 8F25 AD 88 A2			lda WANTED_M_MFNAME
 22888 8F28 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 22889 8F2B AD 89 A2			lda WANTED_M_MFNAME+1
 22890 8F2E 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 22891 8F31 A9 00			lda #$00
 22892 8F33 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 22893 8F36 A9 F0			lda #$F0
 22894 8F38 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 22895 8F3B 20 65 17			jsr XBAPLIB.XBUNAPL
 22896
 22897 				; optimize OK (updates.pas), line = 50
 22898
 22899 8F3E AD 8A A2			lda WANTED_M_MSNAME
 22900 8F41 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 22901 8F44 AD 8B A2			lda WANTED_M_MSNAME+1
 22902 8F47 4C 6C 8F			jmp l_573A
 22903 8F4A			l_5728
 22904
 22905 				; optimize OK (updates.pas), line = 54
 22906
 22907 8F4A AD 8C A2			lda WANTED_F_MFNAME
 22908 8F4D 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 22909 8F50 AD 8D A2			lda WANTED_F_MFNAME+1
 22910 8F53 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 22911 8F56 A9 00			lda #$00
 22912 8F58 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 22913 8F5B A9 F0			lda #$F0
 22914 8F5D 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 22915 8F60 20 65 17			jsr XBAPLIB.XBUNAPL
 22916
 22917 				; optimize OK (updates.pas), line = 55
 22918
 22919 8F63 AD 8E A2			lda WANTED_F_MSNAME
 22920 8F66 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 22921 8F69 AD 8F A2			lda WANTED_F_MSNAME+1
 22922 8F6C			l_573A
 22923 8F6C 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 22924 8F6F A9 00			lda #$00
 22925 8F71 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 22926 8F74 A9 F4			lda #$F4
 22927 8F76 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 22928 8F79 20 65 17			jsr XBAPLIB.XBUNAPL
 22929
 22930 				; optimize FAIL ('ENABLEMAPCONSOLE', updates.pas), line = 57
 22931
 22932 8F7C 20 DA 25			jsr ENABLEMAPCONSOLE
 22933
 22934 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', updates.pas), line = 59
 22935
 22936 8F7F E8				inx
 22937 8F80 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 22938 8F85 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 22939 8F8A E8				inx
 22940 8F8B A9 13 95 94			mva #$13 :STACKORIGIN,x
 22941 8F8F 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 22942
 22943 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', updates.pas), line = 60
 22944
 22945 8F92 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 22946
 22947 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 61
 22948
 22949 8F95 E8				inx
 22950 8F96 AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 22951 8F9B AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 22952 8FA0 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 22953
 22954 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 62
 22955
 22956 8FA3 E8				inx
 22957 8FA4 AD 1A E4 95 94		mva CURRENTPLAYER :STACKORIGIN,x
 22958 8FA9 E8				inx
 22959 8FAA A9 03 95 94			mva #$03 :STACKORIGIN,x
 22960 8FAE 20 87 0F			jsr shlEAX_CL.BYTE
 22961 8FB1 CA				dex
 22962 8FB2 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 22963 8FB4 16 94			asl :STACKORIGIN,x
 22964 8FB6 2A				rol @
 22965 8FB7 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 22966 8FB9 B4 94			ldy :STACKORIGIN,x
 22967 8FBB B9 E0 B0			lda adr.GANGSTERNAMES,y
 22968 8FBE 95 94			sta :STACKORIGIN,x
 22969 8FC0 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 22970 8FC3 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 22971 8FC5 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 22972
 22973 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 63
 22974
 22975 8FC8 E8				inx
 22976 8FC9 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 22977 8FCE AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 22978 8FD3 20 80 21			jsr CRT_WRITELN
 22979
 22980 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 64
 22981
 22982 8FD6 E8				inx
 22983 8FD7 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 22984 8FDC AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 22985 8FE1 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 22986
 22987 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 65
 22988
 22989 8FE4 E8				inx
 22990 8FE5 AD 1A E4			lda CURRENTPLAYER
 22991 8FE8 0A				asl @
 22992 8FE9 A8				tay
 22993 8FEA B9 D8 B0			lda adr.PLGANG,y
 22994 8FED 95 94			sta :STACKORIGIN,x
 22995 8FEF B9 D9 B0			lda adr.PLGANG+1,y
 22996 8FF2 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 22997 8FF4 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 22998
 22999 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 66
 23000
 23001 8FF7 E8				inx
 23002 8FF8 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 23003 8FFD AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 23004 9002 20 80 21			jsr CRT_WRITELN
 23005
 23006 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 67
 23007
 23008 9005 E8				inx
 23009 9006 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 23010 900B AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 23011 9010 20 80 21			jsr CRT_WRITELN
 23012
 23013 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 68
 23014
 23015 9013 E8				inx
 23016 9014 AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 23017 9019 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 23018 901E 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23019
 23020 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 69
 23021
 23022 9021 E8				inx
 23023 9022 AD D2 BA			lda NEWRANK
 23024 9025 0A				asl @
 23025 9026 A8				tay
 23026 9027 B9 E0 AF			lda adr.RANKNAMES,y
 23027 902A 95 94			sta :STACKORIGIN,x
 23028 902C B9 E1 AF			lda adr.RANKNAMES+1,y
 23029 902F 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 23030 9031 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23031
 23032 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 70
 23033
 23034 9034 E8				inx
 23035 9035 A9 F8 95 94			mva #$F8 :STACKORIGIN,x
 23036 9039 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 23037 903D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23038
 23039 				; optimize OK (updates.pas), line = 71
 23040
 23041 9040 AC 1A E4			ldy CURRENTPLAYER
 23042 9043 B9 7C E0			lda adr.PLPOINTS,y
 23043 9046 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 23044
 23045 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 72
 23046
 23047 9049 E8				inx
 23048 904A AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 23049 904F AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 23050 9054 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23051
 23052 				; optimize FAIL ('B_CRT.CRT_READKEY', updates.pas), line = 73
 23053
 23054 9057 20 42 1D			jsr B_CRT.CRT_READKEY
 23055
 23056 				; optimize FAIL ('BLACKCONSOLE', updates.pas), line = 74
 23057
 23058 905A 20 72 25			jsr BLACKCONSOLE
 23059
 23060 				; optimize OK (updates.pas), line = 75
 23061
 23062 905D A9 58			lda #$58
 23063 905F 85 88			sta SYSTEM.FILLCHAR_02BB.A
 23064 9061 A9 F6			lda #$F6
 23065 9063 85 89			sta SYSTEM.FILLCHAR_02BB.A+1
 23066 9065 A9 68			lda #$68
 23067 9067 85 8C			sta SYSTEM.FILLCHAR_02BB.COUNT
 23068 9069 A9 01			lda #$01
 23069 906B 85 8D			sta SYSTEM.FILLCHAR_02BB.COUNT+1
 23070 906D A9 00			lda #$00
 23071 906F 85 84			sta SYSTEM.FILLCHAR_02BB.VALUE
 23072 9071				.LOCAL +MAIN.SYSTEM.FILLCHAR_02BB
 23073 9071				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_02BB.M@INLINE [Source: main.a65]
     4 9071 20 8A 10			jsr @fill
Source: main.a65
 23074 					.ENDL
 23075
 23076 				; optimize OK (updates.pas), line = 76
 23077
 23078 9074 AC 1A E4			ldy CURRENTPLAYER
 23079 9077 AD D2 BA			lda NEWRANK
 23080 907A 99 78 E0			sta adr.PLRANK,y
 23081 907D			l_56FF
 23082
 23083 				; ------------------------------------------------------------
 23084
 23085 = BAD1			OLDRANK	= DATAORIGIN+$165C
 23086 = BAD2			NEWRANK	= DATAORIGIN+$165D
 23087 = BAD3			K	= DATAORIGIN+$165E
 23088 = BAD5			D	= DATAORIGIN+$1660
 23089
 23090 = BAD1			@VarData	= OLDRANK
 23091 = 0005			@VarDataSize	= 5
 23092
 23093 907D			@exit
 23094 					.ifdef @new
 23095 					lda <@VarData
 23096 					sta :ztmp
 23097 					lda >@VarData
 23098 					ldy #@VarDataSize-1
 23099 					jmp @FreeMem
 23100 					els
 23101 907D 60				rts						; ret
 23102 					eif
 23103 				.endl
 23104
 23105 907E			.local	UPDATERENT					; PROCEDURE
 23106
 23107 				; optimize OK (updates.pas), line = 85
 23108
 23109 907E A9 00			lda #$00
 23110 9080 8D D9 BA			sta R
 23111
 23112 9083			l_579A
 23113 				; --- ForToDoCondition
 23114 9083 AC D9 BA			ldy R
 23115 9086 C0 04			cpy #$04
 23116 9088 90 03 4C 07 92		jcs l_57A8
 23117
 23118 				; optimize OK (updates.pas), line = 87
 23119
 23120 908D B9 1C E4			lda adr.PLRENT,y
 23121 9090 CD 1A E4			cmp CURRENTPLAYER
 23122 9093 F0 03			jeq l_57BF
 23123 9095 4C FF 91			jmp c_579A					; continue
 23124 9098			l_57BF
 23125
 23126 				; optimize OK (updates.pas), line = 89
 23127
 23128 9098 AC 1A E4			ldy CURRENTPLAYER
 23129 909B B9 54 E0			lda adr.PLRENTMONTHS,y
 23130 909E F0 09			jeq l_57D7
 23131
 23132 				; optimize OK (updates.pas), line = 91
 23133
 23134 90A0 38 E9 01			sub #$01
 23135 90A3 99 54 E0			sta adr.PLRENTMONTHS,y
 23136 90A6 4C 07 92			jmp @exit
 23137 90A9			l_57D7
 23138
 23139 				; optimize OK (updates.pas), line = 95
 23140
 23141 90A9 A9 13			lda #$13
 23142 90AB 20 B3 26			jsr LOADLOCATION
 23143
 23144 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', updates.pas), line = 98
 23145
 23146 90AE 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
 23147
 23148 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', updates.pas), line = 99
 23149
 23150 90B1 E8				inx
 23151 90B2 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 23152 90B7 AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 23153 90BC E8				inx
 23154 90BD A9 01 95 94			mva #$01 :STACKORIGIN,x
 23155 90C1 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 23156
 23157 				; optimize OK (updates.pas), line = 100
 23158
 23159 90C4 A9 00			lda #$00
 23160 90C6 8D DB AF			sta B_CRT.CRT_INVERT.X
 23161 90C9 A9 01			lda #$01
 23162 90CB 8D DC AF			sta B_CRT.CRT_INVERT.Y
 23163 90CE AD B0 A6			lda B_CRT.CRT_SCREENWIDTH
 23164 90D1 8D DD AF			sta B_CRT.CRT_INVERT.WIDTH
 23165 90D4 20 B6 1F			jsr B_CRT.CRT_INVERT
 23166
 23167 				; optimize OK (updates.pas), line = 101
 23168
 23169 90D7 A9 00			lda #$00
 23170 90D9 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 23171 90DC A9 03			lda #$03
 23172 90DE 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 23173 90E1 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 23174
 23175 				; optimize FAIL (1, updates.pas), line = 103
 23176
 23177 90E4 E8				inx
 23178 90E5 A9 C8 95 94			mva #$C8 :STACKORIGIN,x
 23179 90E9 A9 C8			lda #$C8
 23180 90EB 20 CB 15			jsr SYSTEM.RANDOM_02E9
 23181 90EE B5 94			lda :STACKORIGIN,x
 23182 90F0 18 6D 81 A4			add SYSTEM.RANDOM_02E9.RESULT
 23183 90F4 8D D6 BA			sta PR
 23184 90F7 A9 00			lda #$00
 23185 90F9 69 00			adc #$00
 23186 90FB 8D D7 BA			sta PR+1
 23187
 23188 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 104
 23189
 23190 90FE AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 23191 9103 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 23192 9108 20 80 21			jsr CRT_WRITELN
 23193
 23194 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 105
 23195
 23196 910B E8				inx
 23197 910C AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 23198 9111 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 23199 9116 20 80 21			jsr CRT_WRITELN
 23200
 23201 				; optimize OK (updates.pas), line = 106
 23202
 23203 9119 AD 1A E4			lda CURRENTPLAYER
 23204 911C 0A				asl @
 23205 911D 0A				asl @
 23206 911E A8				tay
 23207 911F				.LOCAL
 23208 911F B9 13 E0			lda adr.PLMONEY+3,y
 23209 9122 38 E9 00			sub #$00
 23210 9125 D0 21			bne L4
 23211 9127 B9 12 E0			lda adr.PLMONEY+2,y
 23212 912A C9 00			cmp #$00
 23213 912C D0 0E			bne L1
 23214 912E B9 11 E0			lda adr.PLMONEY+1,y
 23215 9131 CD D7 BA			cmp PR+1
 23216 9134 D0 06			bne L1
 23217 9136 B9 10 E0			lda adr.PLMONEY,y
 23218 9139 CD D6 BA			cmp PR
 23219 913C F0 10		L1	beq L5
 23220 913E B0 04			bcs L3
 23221 9140 A9 FF			lda #$FF
 23222 9142 D0 0A			bne L5
 23223 9144 A9 01		L3	lda #$01
 23224 9146 D0 06			bne L5
 23225 9148 50 04		L4	bvc L5
 23226 914A 49 FF			eor #$FF
 23227 914C 09 01			ora #$01
 23228 914E			L5
 23229 					.ENDL
 23230 914E 10 53			jpl l_581D
 23231
 23232 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 108
 23233
 23234 9150 E8				inx
 23235 9151 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 23236 9156 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 23237 915B 20 80 21			jsr CRT_WRITELN
 23238
 23239 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 109
 23240
 23241 915E E8				inx
 23242 915F AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 23243 9164 AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 23244 9169 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23245
 23246 				; optimize OK (updates.pas), line = 110
 23247
 23248 916C AD D6 BA			lda PR
 23249 916F 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 23250 9172 AD D7 BA			lda PR+1
 23251 9175 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 23252 9178 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 23253
 23254 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 111
 23255
 23256 917B E8				inx
 23257 917C AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 23258 9181 AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 23259 9186 20 80 21			jsr CRT_WRITELN
 23260
 23261 				; optimize OK (updates.pas), line = 112
 23262
 23263 9189 AD D6 BA			lda PR
 23264 918C 8D 37 B9			sta SUBMONEY.AMOUNT
 23265 918F AD D7 BA			lda PR+1
 23266 9192 8D 38 B9			sta SUBMONEY.AMOUNT+1
 23267 9195 20 1D 2B			jsr SUBMONEY
 23268
 23269 				; optimize OK (updates.pas), line = 113
 23270
 23271 9198 AC 1A E4			ldy CURRENTPLAYER
 23272 919B A9 00			lda #$00
 23273 919D 99 54 E0			sta adr.PLRENTMONTHS,y
 23274 91A0 4C FC 91			jmp l_583D
 23275 91A3			l_581D
 23276
 23277 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 117
 23278
 23279 91A3 E8				inx
 23280 91A4 AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 23281 91A9 AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 23282 91AE 20 80 21			jsr CRT_WRITELN
 23283
 23284 				; optimize OK (updates.pas), line = 118
 23285
 23286 91B1 AC 1A E4			ldy CURRENTPLAYER
 23287 91B4 B9 41 E4			lda adr.PLNGANGSTERS,y
 23288 91B7 F0 43			jeq l_5855
 23289
 23290 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 120
 23291
 23292 91B9 E8				inx
 23293 91BA AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 23294 91BF AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 23295 91C4 20 80 21			jsr CRT_WRITELN
 23296
 23297 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 121
 23298
 23299 91C7 E8				inx
 23300 91C8 AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 23301 91CD AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 23302 91D2 20 80 21			jsr CRT_WRITELN
 23303
 23304 				; optimize OK (updates.pas), line = 122
 23305
 23306 91D5 AC 1A E4			ldy CURRENTPLAYER
 23307 91D8 A9 00			lda #$00
 23308 91DA 99 41 E4			sta adr.PLNGANGSTERS,y
 23309
 23310 				; optimize OK (updates.pas), line = 123
 23311
 23312 91DD 8D D8 BA			sta K
 23313
 23314 91E0			l_586C
 23315 				; --- ForToDoCondition
 23316 91E0 AD D8 BA			lda K
 23317 91E3 C9 20			cmp #$20
 23318 91E5 B0 05			jcs l_587A
 23319
 23320 				; --- ForToDoEpilog
 23321 91E7 EE D8 BA			inc K
 23322 91EA D0 F4			jne l_586C
 23323 91EC			l_587A
 23324
 23325 				; optimize OK (updates.pas), line = 124
 23326
 23327 91EC AC D8 BA			ldy K
 23328 91EF B9 21 E4			lda adr.PLGANGSTERS,y
 23329 91F2 CD 1A E4			cmp CURRENTPLAYER
 23330 91F5 D0 05			jne l_5896
 23331 91F7 A9 63			lda #$63
 23332 91F9 99 21 E4			sta adr.PLGANGSTERS,y
 23333 91FC			l_583D
 23334 91FC			l_5896
 23335 91FC			l_5855
 23336
 23337 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 127
 23338
 23339 91FC 20 2E 21			jsr WAITFORKEY
 23340
 23341 				; --- ForToDoEpilog
 23342 91FF			c_579A
 23343 91FF EE D9 BA			inc R
 23344 9202 F0 03 4C 83 90		jne l_579A
 23345 9207			l_57A8
 23346
 23347 				; ------------------------------------------------------------
 23348
 23349 = BAD6			PR	= DATAORIGIN+$1661
 23350 = BAD8			K	= DATAORIGIN+$1663
 23351 = BAD9			R	= DATAORIGIN+$1664
 23352
 23353 = BAD6			@VarData	= PR
 23354 = 0004			@VarDataSize	= 4
 23355
 23356 9207			@exit
 23357 					.ifdef @new
 23358 					lda <@VarData
 23359 					sta :ztmp
 23360 					lda >@VarData
 23361 					ldy #@VarDataSize-1
 23362 					jmp @FreeMem
 23363 					els
 23364 9207 60				rts						; ret
 23365 					eif
 23366 				.endl
 23367
 23368 9208			.local	UPDATELOANSHARK					; PROCEDURE
 23369
 23370 				; optimize OK (updates.pas), line = 136
 23371
 23372 9208 A9 15			lda #$15
 23373 920A 20 B3 26			jsr LOADLOCATION
 23374
 23375 				; optimize OK (updates.pas), line = 137
 23376
 23377 920D AD 1A E4			lda CURRENTPLAYER
 23378 9210 0A				asl @
 23379 9211 A8				tay
 23380 9212 B9 84 E0			lda adr.PLLOANINVEST,y
 23381 9215 8D DA BA			sta P
 23382 9218 B9 85 E0			lda adr.PLLOANINVEST+1,y
 23383 921B 8D DB BA			sta P+1
 23384
 23385 				; optimize OK (updates.pas), line = 139
 23386
 23387 921E 0D DA BA			ora P
 23388 9221 D0 03 4C CD 92		jeq l_58C7
 23389
 23390 				; optimize FAIL ('JOBWORKING', updates.pas), line = 141
 23391
 23392 9226 20 F9 8D			jsr JOBWORKING
 23393
 23394 				; optimize OK (updates.pas), line = 142
 23395
 23396 9229 A9 03			lda #$03
 23397 922B 20 CB 15			jsr SYSTEM.RANDOM_02E9
 23398 922E AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 23399 9231 D0 78			jne l_58DA
 23400
 23401 				; optimize FAIL (1, updates.pas), line = 144
 23402
 23403 9233 E8				inx
 23404 9234 AD DA BA 95 94		mva P :STACKORIGIN,x
 23405 9239 AD DB BA 95 A4		mva P+1 :STACKORIGIN+STACKWIDTH,x
 23406 923E E8				inx
 23407 923F A9 06 95 94			mva #$06 :STACKORIGIN,x
 23408 9243 20 B6 0F			jsr shrAX_CL.WORD
 23409 9246 CA				dex
 23410 9247 A9 00			lda #$00
 23411 9249 20 CB 15			jsr SYSTEM.RANDOM_02E9
 23412 924C B5 94			lda :STACKORIGIN,x
 23413 924E 18 6D 81 A4			add SYSTEM.RANDOM_02E9.RESULT
 23414 9252 8D DA BA			sta P
 23415 9255 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 23416 9257 69 00			adc #$00
 23417 9259 8D DB BA			sta P+1
 23418 925C CA				dex
 23419
 23420 				; optimize OK (updates.pas), line = 145
 23421
 23422 925D AD DA BA			lda P
 23423 9260 8D 35 B9			sta ADDMONEY.AMOUNT
 23424 9263 AD DB BA			lda P+1
 23425 9266 8D 36 B9			sta ADDMONEY.AMOUNT+1
 23426 9269 20 E3 2A			jsr ADDMONEY
 23427
 23428 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 146
 23429
 23430 926C E8				inx
 23431 926D AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 23432 9272 AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 23433 9277 20 80 21			jsr CRT_WRITELN
 23434
 23435 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 147
 23436
 23437 927A E8				inx
 23438 927B AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 23439 9280 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 23440 9285 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23441
 23442 				; optimize OK (updates.pas), line = 148
 23443
 23444 9288 AD DA BA			lda P
 23445 928B 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 23446 928E AD DB BA			lda P+1
 23447 9291 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 23448 9294 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 23449
 23450 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 149
 23451
 23452 9297 E8				inx
 23453 9298 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 23454 929D AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 23455 92A2 20 80 21			jsr CRT_WRITELN
 23456
 23457 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 150
 23458
 23459 92A5 20 2E 21			jsr WAITFORKEY
 23460 92A8 4C AF 94			jmp @exit
 23461 92AB			l_58DA
 23462
 23463 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 155
 23464
 23465 92AB E8				inx
 23466 92AC AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 23467 92B1 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 23468 92B6 20 80 21			jsr CRT_WRITELN
 23469
 23470 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 156
 23471
 23472 92B9 E8				inx
 23473 92BA AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 23474 92BF AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 23475 92C4 20 80 21			jsr CRT_WRITELN
 23476
 23477 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 157
 23478
 23479 92C7 20 2E 21			jsr WAITFORKEY
 23480 92CA 4C AF 94			jmp @exit
 23481 92CD			l_5902
 23482 92CD			l_58C7
 23483
 23484 				; optimize OK (updates.pas), line = 163
 23485
 23486 92CD AD 1A E4			lda CURRENTPLAYER
 23487 92D0 0A				asl @
 23488 92D1 A8				tay
 23489 92D2 B9 45 E0			lda adr.PLLOAN+1,y
 23490 92D5 10 03 4C AF 94		jmi l_591F
 23491 92DA 19 44 E0			ora adr.PLLOAN,y
 23492 92DD D0 03 4C AF 94		jeq l_591F
 23493
 23494 				; optimize OK (updates.pas), line = 165
 23495
 23496 92E2 AC 1A E4			ldy CURRENTPLAYER
 23497 92E5 B9 4C E0			lda adr.PLLOANTIME,y
 23498 92E8 8D DC BA			sta K
 23499
 23500 				; optimize FAIL ('JOBWORKING', updates.pas), line = 166
 23501
 23502 92EB 20 F9 8D			jsr JOBWORKING
 23503
 23504 				; optimize OK (updates.pas), line = 167
 23505
 23506 92EE AD DC BA			lda K
 23507 92F1 F0 73			jeq l_593C
 23508
 23509 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 169
 23510
 23511 92F3 E8				inx
 23512 92F4 AD 72 A3 95 94		mva LOC_STRING_6 :STACKORIGIN,x
 23513 92F9 AD 73 A3 95 A4		mva LOC_STRING_6+1 :STACKORIGIN+STACKWIDTH,x
 23514 92FE 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23515
 23516 				; optimize OK (updates.pas), line = 170
 23517
 23518 9301 AD 1A E4			lda CURRENTPLAYER
 23519 9304 0A				asl @
 23520 9305 A8				tay
 23521 9306 B9 44 E0			lda adr.PLLOAN,y
 23522 9309 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 23523 930C B9 45 E0			lda adr.PLLOAN+1,y
 23524 930F 85 AD			sta :STACKORIGIN+STACKWIDTH+9
 23525 9311 A0 00			ldy #$00
 23526 9313 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
 23527 9315 10 01			spl
 23528 9317 88				dey
 23529 9318 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 23530 931B 8C CB AB			sty B_CRT.CRT_WRITE_056E.NUM+2
 23531 931E 8C CC AB			sty B_CRT.CRT_WRITE_056E.NUM+3
 23532 9321 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 23533
 23534 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 171
 23535
 23536 9324 E8				inx
 23537 9325 AD 74 A3 95 94		mva LOC_STRING_7 :STACKORIGIN,x
 23538 932A AD 75 A3 95 A4		mva LOC_STRING_7+1 :STACKORIGIN+STACKWIDTH,x
 23539 932F 20 80 21			jsr CRT_WRITELN
 23540
 23541 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 172
 23542
 23543 9332 E8				inx
 23544 9333 AD 76 A3 95 94		mva LOC_STRING_8 :STACKORIGIN,x
 23545 9338 AD 77 A3 95 A4		mva LOC_STRING_8+1 :STACKORIGIN+STACKWIDTH,x
 23546 933D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23547
 23548 				; optimize OK (updates.pas), line = 173
 23549
 23550 9340 AD DC BA			lda K
 23551 9343 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 23552
 23553 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 174
 23554
 23555 9346 E8				inx
 23556 9347 AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 23557 934C AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 23558 9351 20 80 21			jsr CRT_WRITELN
 23559
 23560 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 175
 23561
 23562 9354 20 2E 21			jsr WAITFORKEY
 23563
 23564 				; optimize OK (updates.pas), line = 176
 23565
 23566 9357 AD DC BA			lda K
 23567 935A 38 E9 01			sub #$01
 23568 935D AC 1A E4			ldy CURRENTPLAYER
 23569 9360 99 4C E0			sta adr.PLLOANTIME,y
 23570 9363 4C AF 94			jmp @exit
 23571 9366			l_593C
 23572
 23573 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 180
 23574
 23575 9366 E8				inx
 23576 9367 AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 23577 936C AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 23578 9371 20 80 21			jsr CRT_WRITELN
 23579
 23580 				; optimize FAIL ('CRT_WRITELN2', updates.pas), line = 181
 23581
 23582 9374 E8				inx
 23583 9375 AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 23584 937A AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 23585 937F 20 4C 21			jsr CRT_WRITELN2
 23586
 23587 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 182
 23588
 23589 9382 20 2E 21			jsr WAITFORKEY
 23590
 23591 				; optimize OK (updates.pas), line = 184
 23592
 23593 9385 A9 01			lda #$01
 23594 9387 8D 02 EC			sta adr.FP_AI+$01
 23595
 23596 				; optimize OK (updates.pas), line = 185
 23597
 23598 938A A9 05			lda #$05
 23599 938C 8D 04 EC			sta adr.FP_N+$01
 23600
 23601 				; optimize OK (updates.pas), line = 186
 23602
 23603 938F AD 7A B0			lda adr.FP_GANG+$02
 23604 9392 85 8C			sta @move.dst
 23605 9394 AD 7B B0			lda adr.FP_GANG+1+$02
 23606 9397 85 8D			sta @move.dst+1
 23607 9399 AD 7E A3			lda LOC_STRING_12
 23608 939C 85 88			sta @move.src
 23609 939E AD 7F A3			lda LOC_STRING_12+1
 23610 93A1 85 89			sta @move.src+1
 23611 93A3 A0 00			ldy #$00
 23612 93A5 B1 88			lda (@move.src),y
 23613 93A7 18 69 01			add #1
 23614 93AA 85 84			sta @move.cnt
 23615 93AC 90 01			scc
 23616 93AE C8				iny
 23617 93AF 84 85			sty @move.cnt+1
 23618 93B1 20 35 10			jsr @move
 23619
 23620 				; optimize OK (updates.pas), line = 187
 23621
 23622 93B4 A9 00			lda #$00
 23623 93B6 8D DC BA			sta K
 23624
 23625 93B9			l_5983
 23626 				; --- ForToDoCondition
 23627 93B9 AD DC BA			lda K
 23628 93BC C9 05			cmp #$05
 23629 93BE B0 67			jcs l_5991
 23630
 23631 				; optimize FAIL (1, updates.pas), line = 189
 23632
 23633 93C0 E8				inx
 23634 93C1 A9 10 95 94			mva #$10 :STACKORIGIN,x
 23635 93C5 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 23636 93C9 E8				inx
 23637 93CA AD DC BA 95 94		mva K :STACKORIGIN,x
 23638 93CF A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
 23639 93D3 20 70 0F			jsr addAX_CX
 23640 93D6 CA				dex
 23641 93D7 A9 02			lda #$02
 23642 93D9 20 CB 15			jsr SYSTEM.RANDOM_02E9
 23643 93DC B4 94			ldy :STACKORIGIN,x
 23644 93DE AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 23645 93E1 99 45 ED			sta adr.FP_SEX,y
 23646 93E4 CA				dex
 23647
 23648 				; optimize OK (updates.pas), line = 190
 23649
 23650 93E5 AD DC BA			lda K
 23651 93E8 0A				asl @
 23652 93E9 A8				tay
 23653 93EA B9 9C B0			lda adr.FP_NAME+$20,y
 23654 93ED 85 8C			sta @move.dst
 23655 93EF B9 9D B0			lda adr.FP_NAME+1+$20,y
 23656 93F2 85 8D			sta @move.dst+1
 23657 93F4 AD 7E A3			lda LOC_STRING_12
 23658 93F7 85 88			sta @move.src
 23659 93F9 AD 7F A3			lda LOC_STRING_12+1
 23660 93FC 85 89			sta @move.src+1
 23661 93FE A0 00			ldy #$00
 23662 9400 B1 88			lda (@move.src),y
 23663 9402 18 69 01			add #1
 23664 9405 85 84			sta @move.cnt
 23665 9407 90 01			scc
 23666 9409 C8				iny
 23667 940A 84 85			sty @move.cnt+1
 23668 940C 20 35 10			jsr @move
 23669
 23670 				; optimize OK (updates.pas), line = 191
 23671
 23672 940F AC DC BA			ldy K
 23673 9412 A9 03			lda #$03
 23674 9414 99 55 EC			sta adr.FP_WEAPON+$10,y
 23675
 23676 				; optimize OK (updates.pas), line = 192
 23677
 23678 9417 A9 1E			lda #$1E
 23679 9419 99 95 EC			sta adr.FP_ENERGY+$10,y
 23680
 23681 				; optimize OK (updates.pas), line = 193
 23682
 23683 941C 99 D5 EC			sta adr.FP_STRENGTH+$10,y
 23684
 23685 				; optimize OK (updates.pas), line = 194
 23686
 23687 941F 99 15 ED			sta adr.FP_BRUTALITY+$10,y
 23688
 23689 				; --- ForToDoEpilog
 23690 9422 EE DC BA			inc K
 23691 9425 D0 92			jne l_5983
 23692 9427			l_5991
 23693
 23694 				; optimize FAIL ('DOFIGHT', updates.pas), line = 197
 23695
 23696 9427 20 44 49			jsr DOFIGHT
 23697 942A AD E6 B9			lda DOFIGHT.RESULT
 23698 942D C9 01			cmp #$01
 23699 942F D0 46			jne l_59EA
 23700
 23701 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 199
 23702
 23703 9431 20 97 25			jsr ENABLECONSOLE
 23704
 23705 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 201
 23706
 23707 9434 E8				inx
 23708 9435 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 23709 943A AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 23710 943F 20 80 21			jsr CRT_WRITELN
 23711
 23712 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 202
 23713
 23714 9442 E8				inx
 23715 9443 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 23716 9448 AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 23717 944D 20 80 21			jsr CRT_WRITELN
 23718
 23719 				; optimize OK (updates.pas), line = 203
 23720
 23721 9450 AD 1A E4			lda CURRENTPLAYER
 23722 9453 0A				asl @
 23723 9454 0A				asl @
 23724 9455 A8				tay
 23725 9456 A9 00			lda #$00
 23726 9458 99 10 E0			sta adr.PLMONEY,y
 23727 945B 99 11 E0			sta adr.PLMONEY+1,y
 23728 945E 99 12 E0			sta adr.PLMONEY+2,y
 23729 9461 99 13 E0			sta adr.PLMONEY+3,y
 23730
 23731 				; optimize OK (updates.pas), line = 204
 23732
 23733 9464 AD 1A E4			lda CURRENTPLAYER
 23734 9467 0A				asl @
 23735 9468 A8				tay
 23736 9469 A9 00			lda #$00
 23737 946B 99 44 E0			sta adr.PLLOAN,y
 23738 946E 99 45 E0			sta adr.PLLOAN+1,y
 23739
 23740 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 205
 23741
 23742 9471 20 2E 21			jsr WAITFORKEY
 23743 9474 4C AF 94			jmp @exit
 23744 9477			l_59EA
 23745
 23746 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 209
 23747
 23748 9477 20 97 25			jsr ENABLECONSOLE
 23749
 23750 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 211
 23751
 23752 947A E8				inx
 23753 947B AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 23754 9480 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 23755 9485 20 80 21			jsr CRT_WRITELN
 23756
 23757 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 212
 23758
 23759 9488 E8				inx
 23760 9489 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 23761 948E AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 23762 9493 20 80 21			jsr CRT_WRITELN
 23763
 23764 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 213
 23765
 23766 9496 E8				inx
 23767 9497 AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 23768 949C AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 23769 94A1 20 80 21			jsr CRT_WRITELN
 23770
 23771 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 214
 23772
 23773 94A4 20 2E 21			jsr WAITFORKEY
 23774
 23775 				; optimize OK (updates.pas), line = 215
 23776
 23777 94A7 AC 1A E4			ldy CURRENTPLAYER
 23778 94AA A9 03			lda #$03
 23779 94AC 99 4C E0			sta adr.PLLOANTIME,y
 23780 94AF			l_591F
 23781
 23782 				; ------------------------------------------------------------
 23783
 23784 = BADA			P	= DATAORIGIN+$1665
 23785 = BADC			K	= DATAORIGIN+$1667
 23786
 23787 = BADA			@VarData	= P
 23788 = 0003			@VarDataSize	= 3
 23789
 23790 94AF			@exit
 23791 					.ifdef @new
 23792 					lda <@VarData
 23793 					sta :ztmp
 23794 					lda >@VarData
 23795 					ldy #@VarDataSize-1
 23796 					jmp @FreeMem
 23797 					els
 23798 94AF 60				rts						; ret
 23799 					eif
 23800 				.endl
 23801
 23802 94B0			.local	UPDATEOPPORTUNITIES				; PROCEDURE
 23803
 23804 				; optimize OK (updates.pas), line = 226
 23805
 23806 94B0 A9 16			lda #$16
 23807 94B2 20 B3 26			jsr LOADLOCATION
 23808
 23809 				; optimize OK (updates.pas), line = 227
 23810
 23811 94B5 AC 1A E4			ldy CURRENTPLAYER
 23812 94B8 B9 40 E0			lda adr.PLOPPORTUNITY,y
 23813 94BB D0 03			jne l_5A32
 23814 94BD 4C AD 95			jmp @exit
 23815 94C0			l_5A32
 23816
 23817 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 230
 23818
 23819 94C0 20 97 25			jsr ENABLECONSOLE
 23820
 23821 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', updates.pas), line = 231
 23822
 23823 94C3 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
 23824
 23825 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', updates.pas), line = 232
 23826
 23827 94C6 E8				inx
 23828 94C7 AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 23829 94CC AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 23830 94D1 E8				inx
 23831 94D2 A9 01 95 94			mva #$01 :STACKORIGIN,x
 23832 94D6 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 23833
 23834 				; optimize OK (updates.pas), line = 233
 23835
 23836 94D9 A9 00			lda #$00
 23837 94DB 8D DB AF			sta B_CRT.CRT_INVERT.X
 23838 94DE A9 01			lda #$01
 23839 94E0 8D DC AF			sta B_CRT.CRT_INVERT.Y
 23840 94E3 AD B0 A6			lda B_CRT.CRT_SCREENWIDTH
 23841 94E6 8D DD AF			sta B_CRT.CRT_INVERT.WIDTH
 23842 94E9 20 B6 1F			jsr B_CRT.CRT_INVERT
 23843
 23844 				; optimize OK (updates.pas), line = 234
 23845
 23846 94EC A9 00			lda #$00
 23847 94EE 8D C1 AA			sta B_CRT.CRT_GOTOXY.X
 23848 94F1 A9 03			lda #$03
 23849 94F3 8D C2 AA			sta B_CRT.CRT_GOTOXY.Y
 23850 94F6 20 C5 1B			jsr B_CRT.CRT_GOTOXY
 23851
 23852 				; optimize OK (updates.pas), line = 236
 23853
 23854 94F9 AC 1A E4			ldy CURRENTPLAYER
 23855 94FC B9 40 E0			lda adr.PLOPPORTUNITY,y
 23856 94FF C9 80			cmp #$80
 23857 9501 F0 03 4C AD 95		jne l_5A59
 23858
 23859 				; optimize OK (updates.pas), line = 238
 23860
 23861 9506 A9 00			lda #$00
 23862 9508 99 40 E0			sta adr.PLOPPORTUNITY,y
 23863
 23864 				; optimize OK (updates.pas), line = 239
 23865
 23866 950B A9 05			lda #$05
 23867 950D 20 CB 15			jsr SYSTEM.RANDOM_02E9
 23868 9510 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 23869 9513 D0 1F			jne l_5A72
 23870
 23871 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 242
 23872
 23873 9515 E8				inx
 23874 9516 AD 94 A3 95 94		mva LOC_STRING_23 :STACKORIGIN,x
 23875 951B AD 95 A3 95 A4		mva LOC_STRING_23+1 :STACKORIGIN+STACKWIDTH,x
 23876 9520 20 80 21			jsr CRT_WRITELN
 23877
 23878 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 243
 23879
 23880 9523 E8				inx
 23881 9524 AD 96 A3 95 94		mva LOC_STRING_24 :STACKORIGIN,x
 23882 9529 AD 97 A3 95 A4		mva LOC_STRING_24+1 :STACKORIGIN+STACKWIDTH,x
 23883 952E 20 80 21			jsr CRT_WRITELN
 23884 9531 4C AA 95			jmp l_5A82
 23885 9534			l_5A72
 23886
 23887 				; optimize FAIL (1, updates.pas), line = 247
 23888
 23889 9534 E8				inx
 23890 9535 A9 7C 95 94			mva #$7C :STACKORIGIN,x
 23891 9539 A9 15 95 A4			mva #$15 :STACKORIGIN+STACKWIDTH,x
 23892 953D A9 96			lda #$96
 23893 953F 20 CB 15			jsr SYSTEM.RANDOM_02E9
 23894 9542 E8				inx
 23895 9543 AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 23896 9548 E8				inx
 23897 9549 A9 06 95 94			mva #$06 :STACKORIGIN,x
 23898 954D 20 87 0F			jsr shlEAX_CL.BYTE
 23899 9550 CA				dex
 23900 9551 A9 00 95 B3			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
 23901 9555 95 C3			sta :STACKORIGIN-1+STACKWIDTH*3,x
 23902 9557 20 70 0F			jsr addAX_CX
 23903 955A CA				dex
 23904 955B B5 94			lda :STACKORIGIN,x
 23905 955D 8D DD BA			sta PR
 23906 9560 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 23907 9562 8D DE BA			sta PR+1
 23908
 23909 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 248
 23910
 23911 9565 AD 98 A3 95 94		mva LOC_STRING_25 :STACKORIGIN,x
 23912 956A AD 99 A3 95 A4		mva LOC_STRING_25+1 :STACKORIGIN+STACKWIDTH,x
 23913 956F 20 80 21			jsr CRT_WRITELN
 23914
 23915 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 249
 23916
 23917 9572 E8				inx
 23918 9573 AD 9A A3 95 94		mva LOC_STRING_26 :STACKORIGIN,x
 23919 9578 AD 9B A3 95 A4		mva LOC_STRING_26+1 :STACKORIGIN+STACKWIDTH,x
 23920 957D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 23921
 23922 				; optimize OK (updates.pas), line = 250
 23923
 23924 9580 AD DD BA			lda PR
 23925 9583 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 23926 9586 AD DE BA			lda PR+1
 23927 9589 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 23928 958C 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 23929
 23930 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 251
 23931
 23932 958F E8				inx
 23933 9590 A9 9D 95 94			mva #$9D :STACKORIGIN,x
 23934 9594 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 23935 9598 20 80 21			jsr CRT_WRITELN
 23936
 23937 				; optimize OK (updates.pas), line = 252
 23938
 23939 959B AD DD BA			lda PR
 23940 959E 8D 35 B9			sta ADDMONEY.AMOUNT
 23941 95A1 AD DE BA			lda PR+1
 23942 95A4 8D 36 B9			sta ADDMONEY.AMOUNT+1
 23943 95A7 20 E3 2A			jsr ADDMONEY
 23944 95AA			l_5A82
 23945
 23946 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 254
 23947
 23948 95AA 20 2E 21			jsr WAITFORKEY
 23949 95AD			l_5A59
 23950
 23951 				; ------------------------------------------------------------
 23952
 23953 = BADD			PR	= DATAORIGIN+$1668
 23954
 23955 = BADD			@VarData	= PR
 23956 = 0002			@VarDataSize	= 2
 23957
 23958 95AD			@exit
 23959 					.ifdef @new
 23960 					lda <@VarData
 23961 					sta :ztmp
 23962 					lda >@VarData
 23963 					ldy #@VarDataSize-1
 23964 					jmp @FreeMem
 23965 					els
 23966 95AD 60				rts						; ret
 23967 					eif
 23968 				.endl
 23969
 23970 95AE			.local	UPDATEGANGSTERS					; PROCEDURE
 23971
 23972 				; optimize OK (updates.pas), line = 262
 23973
 23974 95AE A9 00			lda #$00
 23975 95B0 8D DF BA			sta J
 23976
 23977 95B3			l_5AAD
 23978 				; --- ForToDoCondition
 23979 95B3 AC DF BA			ldy J
 23980 95B6 C0 20			cpy #$20
 23981 95B8 B0 44			jcs l_5ABB
 23982
 23983 				; optimize OK (updates.pas), line = 264
 23984
 23985 95BA B9 B8 E3			lda adr.GANGSTERHEALTH,y
 23986 95BD 8D E0 BA			sta EN
 23987
 23988 				; optimize OK (updates.pas), line = 265
 23989
 23990 95C0 B9 58 E3			lda adr.GANGSTERSTR,y
 23991 95C3 4A				lsr @
 23992 95C4 4A				lsr @
 23993 95C5 4A				lsr @
 23994 95C6 18 6D E0 BA			add EN
 23995 95CA 18 69 01			add #$01
 23996 95CD 18 69 01			add #$01
 23997 95D0 8D E0 BA			sta EN
 23998
 23999 				; optimize OK (updates.pas), line = 266
 24000
 24001 95D3 B9 98 E3			lda adr.GANGSTERBRUT,y
 24002 95D6 4A				lsr @
 24003 95D7 4A				lsr @
 24004 95D8 18 69 02			add #$02
 24005 95DB 85 9D			sta :STACKORIGIN+9
 24006 95DD B9 78 E3			lda adr.GANGSTERINT,y
 24007 95E0 4A				lsr @
 24008 95E1 4A				lsr @
 24009 95E2 18 65 9D			add :STACKORIGIN+9
 24010 95E5 8D E1 BA			sta MAXX
 24011
 24012 				; optimize OK (updates.pas), line = 267
 24013
 24014 95E8 CD E0 BA			cmp EN
 24015 95EB B0 03			jcs l_5B11
 24016 95ED 8D E0 BA			sta EN
 24017 95F0			l_5B11
 24018
 24019 				; optimize OK (updates.pas), line = 268
 24020
 24021 95F0 AC DF BA			ldy J
 24022 95F3 AD E0 BA			lda EN
 24023 95F6 99 B8 E3			sta adr.GANGSTERHEALTH,y
 24024
 24025 				; --- ForToDoEpilog
 24026 95F9 EE DF BA			inc J
 24027 95FC D0 B5			jne l_5AAD
 24028 95FE			l_5ABB
 24029
 24030 				; ------------------------------------------------------------
 24031
 24032 = BADF			J	= DATAORIGIN+$166A
 24033 = BAE0			EN	= DATAORIGIN+$166B
 24034 = BAE1			MAXX	= DATAORIGIN+$166C
 24035
 24036 = BADF			@VarData	= J
 24037 = 0003			@VarDataSize	= 3
 24038
 24039 95FE			@exit
 24040 					.ifdef @new
 24041 					lda <@VarData
 24042 					sta :ztmp
 24043 					lda >@VarData
 24044 					ldy #@VarDataSize-1
 24045 					jmp @FreeMem
 24046 					els
 24047 95FE 60				rts						; ret
 24048 					eif
 24049 				.endl
 24050
 24051 95FF			.local	UPDATEPRISON					; PROCEDURE
 24052
 24053 				; optimize OK (updates.pas), line = 278
 24054
 24055 95FF A9 13			lda #$13
 24056 9601 20 B3 26			jsr LOADLOCATION
 24057
 24058 				; optimize OK (updates.pas), line = 280
 24059
 24060 9604 AC 1A E4			ldy CURRENTPLAYER
 24061 9607 B9 74 E0			lda adr.PLPRISON,y
 24062 960A F0 72			jeq l_5B43
 24063
 24064 				; optimize OK (updates.pas), line = 282
 24065
 24066 960C AD 2A C1			lda adr.LOC_MAP_PLACES
 24067 960F 8D 20 E4			sta CURRENTMAP
 24068
 24069 				; optimize OK (updates.pas), line = 283
 24070
 24071 9612 AD 9C A3			lda LOC_STRING_27
 24072 9615 85 88			sta @move.src
 24073 9617 AD 9D A3			lda LOC_STRING_27+1
 24074 961A 85 89			sta @move.src+1
 24075 					@moveSTRING LOC_NAME #41
 24075 				 MWA LOC_NAME @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
 24075 961C AD 44 A3 85 8C AD +  MWA LOC_NAME @MOVE.DST
 24075 9626 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
 24075 962E 20 D2 10		 JSR @MOVESTRING
 24076
 24077 				; optimize FAIL ('SHOWLOCATIONHEADER', updates.pas), line = 284
 24078
 24079 9631 20 1D 26			jsr SHOWLOCATIONHEADER
 24080
 24081 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 285
 24082
 24083 9634 E8				inx
 24084 9635 AD 9E A3 95 94		mva LOC_STRING_28 :STACKORIGIN,x
 24085 963A AD 9F A3 95 A4		mva LOC_STRING_28+1 :STACKORIGIN+STACKWIDTH,x
 24086 963F 20 80 21			jsr CRT_WRITELN
 24087
 24088 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 286
 24089
 24090 9642 E8				inx
 24091 9643 AD A0 A3 95 94		mva LOC_STRING_29 :STACKORIGIN,x
 24092 9648 AD A1 A3 95 A4		mva LOC_STRING_29+1 :STACKORIGIN+STACKWIDTH,x
 24093 964D 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 24094
 24095 				; optimize OK (updates.pas), line = 287
 24096
 24097 9650 AC 1A E4			ldy CURRENTPLAYER
 24098 9653 B9 74 E0			lda adr.PLPRISON,y
 24099 9656 20 A1 1C			jsr B_CRT.CRT_WRITE_055B
 24100
 24101 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 288
 24102
 24103 9659 E8				inx
 24104 965A AD A2 A3 95 94		mva LOC_STRING_30 :STACKORIGIN,x
 24105 965F AD A3 A3 95 A4		mva LOC_STRING_30+1 :STACKORIGIN+STACKWIDTH,x
 24106 9664 20 80 21			jsr CRT_WRITELN
 24107
 24108 				; optimize OK (updates.pas), line = 289
 24109
 24110 9667 AC 1A E4			ldy CURRENTPLAYER
 24111 966A B9 74 E0			lda adr.PLPRISON,y
 24112 966D 38 E9 01			sub #$01
 24113 9670 99 74 E0			sta adr.PLPRISON,y
 24114
 24115 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 290
 24116
 24117 9673 20 2E 21			jsr WAITFORKEY
 24118
 24119 				; optimize OK (updates.pas), line = 291
 24120
 24121 9676 A9 11			lda #$11
 24122 9678 8D AE B8			sta CURRENTLOCATION
 24123 967B 4C 9C 97			jmp @exit
 24124 967E			l_5B43
 24125
 24126 				; optimize OK (updates.pas), line = 295
 24127
 24128 967E AC 1A E4			ldy CURRENTPLAYER
 24129 9681 B9 8C E0			lda adr.PLFREED,y
 24130 9684 C9 63			cmp #$63
 24131 9686 D0 03 4C 9C 97		jeq l_5B8A
 24132
 24133 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 297
 24134
 24135 968B E8				inx
 24136 968C AD A4 A3 95 94		mva LOC_STRING_31 :STACKORIGIN,x
 24137 9691 AD A5 A3 95 A4		mva LOC_STRING_31+1 :STACKORIGIN+STACKWIDTH,x
 24138 9696 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 24139
 24140 				; optimize OK (updates.pas), line = 298
 24141
 24142 9699 AC 1A E4			ldy CURRENTPLAYER
 24143 969C B9 8C E0			lda adr.PLFREED,y
 24144 969F 8D E2 BA			sta K
 24145
 24146 				; optimize OK (updates.pas), line = 299
 24147
 24148 96A2 0A				asl @
 24149 96A3 0A				asl @
 24150 96A4 0A				asl @
 24151 96A5 8D E3 BA			sta R
 24152
 24153 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 300
 24154
 24155 96A8 E8				inx
 24156 96A9 AD E3 BA			lda R
 24157 96AC 0A				asl @
 24158 96AD A8				tay
 24159 96AE B9 E0 B0			lda adr.GANGSTERNAMES,y
 24160 96B1 95 94			sta :STACKORIGIN,x
 24161 96B3 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 24162 96B6 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 24163 96B8 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 24164
 24165 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 301
 24166
 24167 96BB E8				inx
 24168 96BC AD A6 A3 95 94		mva LOC_STRING_32 :STACKORIGIN,x
 24169 96C1 AD A7 A3 95 A4		mva LOC_STRING_32+1 :STACKORIGIN+STACKWIDTH,x
 24170 96C6 20 80 21			jsr CRT_WRITELN
 24171
 24172 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 302
 24173
 24174 96C9 E8				inx
 24175 96CA AD A8 A3 95 94		mva LOC_STRING_33 :STACKORIGIN,x
 24176 96CF AD A9 A3 95 A4		mva LOC_STRING_33+1 :STACKORIGIN+STACKWIDTH,x
 24177 96D4 20 80 21			jsr CRT_WRITELN
 24178
 24179 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 303
 24180
 24181 96D7 E8				inx
 24182 96D8 AD AA A3 95 94		mva LOC_STRING_34 :STACKORIGIN,x
 24183 96DD AD AB A3 95 A4		mva LOC_STRING_34+1 :STACKORIGIN+STACKWIDTH,x
 24184 96E2 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 24185
 24186 				; optimize OK (updates.pas), line = 304
 24187
 24188 96E5 AD 1A E4			lda CURRENTPLAYER
 24189 96E8 0A				asl @
 24190 96E9 0A				asl @
 24191 96EA A8				tay
 24192 96EB B9 10 E0			lda adr.PLMONEY,y
 24193 96EE 8D C9 AB			sta B_CRT.CRT_WRITE_056E.NUM
 24194 96F1 B9 11 E0			lda adr.PLMONEY+1,y
 24195 96F4 8D CA AB			sta B_CRT.CRT_WRITE_056E.NUM+1
 24196 96F7 B9 12 E0			lda adr.PLMONEY+2,y
 24197 96FA 8D CB AB			sta B_CRT.CRT_WRITE_056E.NUM+2
 24198 96FD B9 13 E0			lda adr.PLMONEY+3,y
 24199 9700 8D CC AB			sta B_CRT.CRT_WRITE_056E.NUM+3
 24200 9703 20 ED 1C			jsr B_CRT.CRT_WRITE_056E
 24201
 24202 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 305
 24203
 24204 9706 E8				inx
 24205 9707 A9 4D 95 94			mva #$4D :STACKORIGIN,x
 24206 970B A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 24207 970F 20 80 21			jsr CRT_WRITELN
 24208
 24209 				; optimize OK (updates.pas), line = 306
 24210
 24211 9712 AD 1A E4			lda CURRENTPLAYER
 24212 9715 0A				asl @
 24213 9716 0A				asl @
 24214 9717 A8				tay
 24215 9718 B9 10 E0			lda adr.PLMONEY,y
 24216 971B 8D 93 B6			sta READVALUE.MAXVALUE
 24217 971E B9 11 E0			lda adr.PLMONEY+1,y
 24218 9721 8D 94 B6			sta READVALUE.MAXVALUE+1
 24219 9724 A9 00			lda #$00
 24220 9726 8D 91 B6			sta READVALUE.MINVALUE
 24221 9729 8D 92 B6			sta READVALUE.MINVALUE+1
 24222 972C 20 EE 21			jsr READVALUE
 24223 972F AD 95 B6			lda READVALUE.RESULT
 24224 9732 8D E4 BA			sta PR
 24225 9735 AD 96 B6			lda READVALUE.RESULT+1
 24226 9738 8D E5 BA			sta PR+1
 24227
 24228 				; optimize OK (updates.pas), line = 307
 24229
 24230 973B 0D E4 BA			ora PR
 24231 973E F0 54			jeq l_5BD1
 24232
 24233 				; optimize OK (updates.pas), line = 309
 24234
 24235 9740 AD E4 BA			lda PR
 24236 9743 8D 40 B9			sta PAYMONEY.PRICE
 24237 9746 AD E5 BA			lda PR+1
 24238 9749 8D 41 B9			sta PAYMONEY.PRICE+1
 24239 974C 20 98 2D			jsr PAYMONEY
 24240
 24241 				; optimize OK (updates.pas), line = 310
 24242
 24243 974F AC 1A E4			ldy CURRENTPLAYER
 24244 9752 B9 80 E0			lda adr.PLNEWPOINTS,y
 24245 9755 18 69 02			add #$02
 24246 9758 99 80 E0			sta adr.PLNEWPOINTS,y
 24247
 24248 				; optimize OK (updates.pas), line = 311
 24249
 24250 975B AD E2 BA			lda K
 24251 975E 0A				asl @
 24252 975F 0A				asl @
 24253 9760 A8				tay
 24254 9761 B9 10 E0			lda adr.PLMONEY,y
 24255 9764 18 6D E4 BA			add PR
 24256 9768 85 9E			sta :STACKORIGIN+10
 24257 976A B9 11 E0			lda adr.PLMONEY+1,y
 24258 976D 6D E5 BA			adc PR+1
 24259 9770 85 AE			sta :STACKORIGIN+STACKWIDTH+10
 24260 9772 B9 12 E0			lda adr.PLMONEY+2,y
 24261 9775 69 00			adc #$00
 24262 9777 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
 24263 9779 B9 13 E0			lda adr.PLMONEY+3,y
 24264 977C 69 00			adc #$00
 24265 977E 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
 24266 9780 A5 9E			lda :STACKORIGIN+10
 24267 9782 99 10 E0			sta adr.PLMONEY,y
 24268 9785 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
 24269 9787 99 11 E0			sta adr.PLMONEY+1,y
 24270 978A A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
 24271 978C 99 12 E0			sta adr.PLMONEY+2,y
 24272 978F A5 CE			lda :STACKORIGIN+STACKWIDTH*3+10
 24273 9791 99 13 E0			sta adr.PLMONEY+3,y
 24274 9794			l_5BD1
 24275
 24276 				; optimize OK (updates.pas), line = 313
 24277
 24278 9794 AC 1A E4			ldy CURRENTPLAYER
 24279 9797 A9 63			lda #$63
 24280 9799 99 8C E0			sta adr.PLFREED,y
 24281 979C			l_5B8A
 24282
 24283 				; ------------------------------------------------------------
 24284
 24285 = BAE2			K	= DATAORIGIN+$166D
 24286 = BAE3			R	= DATAORIGIN+$166E
 24287 = BAE4			PR	= DATAORIGIN+$166F
 24288
 24289 = BAE2			@VarData	= K
 24290 = 0004			@VarDataSize	= 4
 24291
 24292 979C			@exit
 24293 					.ifdef @new
 24294 					lda <@VarData
 24295 					sta :ztmp
 24296 					lda >@VarData
 24297 					ldy #@VarDataSize-1
 24298 					jmp @FreeMem
 24299 					els
 24300 979C 60				rts						; ret
 24301 					eif
 24302 				.endl
 24303
 24304 979D			.local	UPDATEJOB					; FUNCTION
 24305
 24306 				; optimize OK (updates.pas), line = 325
 24307
 24308 979D A9 16			lda #$16
 24309 979F 20 B3 26			jsr LOADLOCATION
 24310
 24311 				; optimize FAIL ('JOBWORKING', updates.pas), line = 326
 24312
 24313 97A2 20 F9 8D			jsr JOBWORKING
 24314
 24315 				; optimize OK (updates.pas), line = 328
 24316
 24317 97A5 AD 1A E4			lda CURRENTPLAYER
 24318 97A8 0A				asl @
 24319 97A9 A8				tay
 24320 97AA B9 6D E0			lda adr.PLJOBLOCATION+1,y
 24321 97AD D0 05			bne @+
 24322 97AF B9 6C E0			lda adr.PLJOBLOCATION,y
 24323 97B2 C9 07			cmp #$07
 24324 				@
 24325 97B4 F0 0F			jeq l_5C28x
 24326 97B6 B9 6D E0			lda adr.PLJOBLOCATION+1,y
 24327 97B9 D0 05			bne @+
 24328 97BB B9 6C E0			lda adr.PLJOBLOCATION,y
 24329 97BE C9 0A			cmp #$0A
 24330 				@
 24331 97C0 F0 03 4C 0B 99		jne l_5C28
 24332 				@
 24333 97C5			l_5C28x
 24334
 24335 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 330
 24336
 24337 97C5 E8				inx
 24338 97C6 AD 68 A3 95 94		mva LOC_STRING_1 :STACKORIGIN,x
 24339 97CB AD 69 A3 95 A4		mva LOC_STRING_1+1 :STACKORIGIN+STACKWIDTH,x
 24340 97D0 20 80 21			jsr CRT_WRITELN
 24341
 24342 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 331
 24343
 24344 97D3 E8				inx
 24345 97D4 AD 6A A3 95 94		mva LOC_STRING_2 :STACKORIGIN,x
 24346 97D9 AD 6B A3 95 A4		mva LOC_STRING_2+1 :STACKORIGIN+STACKWIDTH,x
 24347 97DE 20 80 21			jsr CRT_WRITELN
 24348
 24349 				; optimize FAIL ('EFFECTWAIT', updates.pas), line = 332
 24350
 24351 97E1 20 88 20			jsr EFFECTWAIT
 24352
 24353 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', updates.pas), line = 333
 24354
 24355 97E4 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 24356
 24357 				; optimize OK (updates.pas), line = 334
 24358
 24359 97E7 A9 02			lda #$02
 24360 97E9 20 CB 15			jsr SYSTEM.RANDOM_02E9
 24361 97EC AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 24362 97EF D0 19			jne l_5C42
 24363
 24364 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 336
 24365
 24366 97F1 E8				inx
 24367 97F2 AD 6C A3 95 94		mva LOC_STRING_3 :STACKORIGIN,x
 24368 97F7 AD 6D A3 95 A4		mva LOC_STRING_3+1 :STACKORIGIN+STACKWIDTH,x
 24369 97FC 20 80 21			jsr CRT_WRITELN
 24370
 24371 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 337
 24372
 24373 97FF 20 2E 21			jsr WAITFORKEY
 24374
 24375 				; optimize OK (updates.pas), line = 338
 24376
 24377 9802 A9 01			lda #$01
 24378 9804 8D E7 BA			sta JOBDONE
 24379 9807 4C 0B 99			jmp l_5C54
 24380 980A			l_5C42
 24381
 24382 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 342
 24383
 24384 980A E8				inx
 24385 980B AD 6E A3 95 94		mva LOC_STRING_4 :STACKORIGIN,x
 24386 9810 AD 6F A3 95 A4		mva LOC_STRING_4+1 :STACKORIGIN+STACKWIDTH,x
 24387 9815 20 80 21			jsr CRT_WRITELN
 24388
 24389 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 343
 24390
 24391 9818 E8				inx
 24392 9819 AD 70 A3 95 94		mva LOC_STRING_5 :STACKORIGIN,x
 24393 981E AD 71 A3 95 A4		mva LOC_STRING_5+1 :STACKORIGIN+STACKWIDTH,x
 24394 9823 20 80 21			jsr CRT_WRITELN
 24395
 24396 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 344
 24397
 24398 9826 20 2E 21			jsr WAITFORKEY
 24399
 24400 				; optimize OK (updates.pas), line = 345
 24401
 24402 9829 A9 00			lda #$00
 24403 982B 8D 55 ED			sta adr.FP_SEX+$10
 24404
 24405 				; optimize OK (updates.pas), line = 346
 24406
 24407 982E A9 03			lda #$03
 24408 9830 20 CB 15			jsr SYSTEM.RANDOM_02E9
 24409 9833 AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 24410 9836 8D EB BA			sta @CASETMP_0016
 24411 9839 D0 2D			jne l_5C6A
 24412 				@
 24413
 24414 				; optimize OK (updates.pas), line = 348
 24415
 24416 983B AD 7A B0			lda adr.FP_GANG+$02
 24417 983E 85 8C			sta @move.dst
 24418 9840 AD 7B B0			lda adr.FP_GANG+1+$02
 24419 9843 85 8D			sta @move.dst+1
 24420 9845 AD 72 A3			lda LOC_STRING_6
 24421 9848 85 88			sta @move.src
 24422 984A AD 73 A3			lda LOC_STRING_6+1
 24423 984D 85 89			sta @move.src+1
 24424 984F A0 00			ldy #$00
 24425 9851 B1 88			lda (@move.src),y
 24426 9853 18 69 01			add #1
 24427 9856 85 84			sta @move.cnt
 24428 9858 90 01			scc
 24429 985A C8				iny
 24430 985B 84 85			sty @move.cnt+1
 24431 985D 20 35 10			jsr @move
 24432
 24433 				; optimize OK (updates.pas), line = 349
 24434
 24435 9860 A9 01			lda #$01
 24436 9862 8D 55 ED			sta adr.FP_SEX+$10
 24437 9865 4C BD 98			jmp a_0016
 24438 9868			l_5C6A
 24439 9868 C9 01			cmp #$01
 24440 986A D0 28			jne l_5C7E
 24441
 24442 				; optimize OK (updates.pas), line = 351
 24443
 24444 986C AD 7A B0			lda adr.FP_GANG+$02
 24445 986F 85 8C			sta @move.dst
 24446 9871 AD 7B B0			lda adr.FP_GANG+1+$02
 24447 9874 85 8D			sta @move.dst+1
 24448 9876 AD 74 A3			lda LOC_STRING_7
 24449 9879 85 88			sta @move.src
 24450 987B AD 75 A3			lda LOC_STRING_7+1
 24451 987E 85 89			sta @move.src+1
 24452 9880 A0 00			ldy #$00
 24453 9882 B1 88			lda (@move.src),y
 24454 9884 18 69 01			add #1
 24455 9887 85 84			sta @move.cnt
 24456 9889 90 01			scc
 24457 988B C8				iny
 24458 988C 84 85			sty @move.cnt+1
 24459 988E 20 35 10			jsr @move
 24460 9891 4C BD 98			jmp a_0016
 24461 9894			l_5C7E
 24462 9894 C9 02			cmp #$02
 24463 9896 D0 25			jne l_5C8D
 24464
 24465 				; optimize OK (updates.pas), line = 352
 24466
 24467 9898 AD 7A B0			lda adr.FP_GANG+$02
 24468 989B 85 8C			sta @move.dst
 24469 989D AD 7B B0			lda adr.FP_GANG+1+$02
 24470 98A0 85 8D			sta @move.dst+1
 24471 98A2 AD 76 A3			lda LOC_STRING_8
 24472 98A5 85 88			sta @move.src
 24473 98A7 AD 77 A3			lda LOC_STRING_8+1
 24474 98AA 85 89			sta @move.src+1
 24475 98AC A0 00			ldy #$00
 24476 98AE B1 88			lda (@move.src),y
 24477 98B0 18 69 01			add #1
 24478 98B3 85 84			sta @move.cnt
 24479 98B5 90 01			scc
 24480 98B7 C8				iny
 24481 98B8 84 85			sty @move.cnt+1
 24482 98BA 20 35 10			jsr @move
 24483 98BD			l_5C8D
 24484 98BD			a_0016
 24485
 24486 				; optimize OK (updates.pas), line = 354
 24487
 24488 98BD A9 01			lda #$01
 24489 98BF 8D 02 EC			sta adr.FP_AI+$01
 24490
 24491 				; optimize OK (updates.pas), line = 355
 24492
 24493 98C2 8D 04 EC			sta adr.FP_N+$01
 24494
 24495 				; optimize OK (updates.pas), line = 356
 24496
 24497 98C5 AD 7A B0			lda adr.FP_GANG+$02
 24498 98C8 85 88			sta @move.src
 24499 98CA AD 7B B0			lda adr.FP_GANG+1+$02
 24500 98CD 85 89			sta @move.src+1
 24501 98CF AD 9C B0			lda adr.FP_NAME+$20
 24502 98D2 85 8C			sta @move.dst
 24503 98D4 AD 9D B0			lda adr.FP_NAME+1+$20
 24504 98D7 85 8D			sta @move.dst+1
 24505 98D9 A0 00			ldy #$00
 24506 98DB B1 88			lda (@move.src),y
 24507 98DD 18 69 01			add #1
 24508 98E0 85 84			sta @move.cnt
 24509 98E2 90 01			scc
 24510 98E4 C8				iny
 24511 98E5 84 85			sty @move.cnt+1
 24512 98E7 20 35 10			jsr @move
 24513
 24514 				; optimize OK (updates.pas), line = 357
 24515
 24516 98EA A9 05			lda #$05
 24517 98EC 8D 55 EC			sta adr.FP_WEAPON+$10
 24518
 24519 				; optimize OK (updates.pas), line = 358
 24520
 24521 98EF A9 1E			lda #$1E
 24522 98F1 8D 95 EC			sta adr.FP_ENERGY+$10
 24523
 24524 				; optimize FAIL ('DOFIGHT', updates.pas), line = 360
 24525
 24526 98F4 20 44 49			jsr DOFIGHT
 24527 98F7 AD E6 B9			lda DOFIGHT.RESULT
 24528 98FA C9 01			cmp #$01
 24529 98FC D0 05			jne l_5CC5
 24530
 24531 				; optimize OK (updates.pas), line = 361
 24532
 24533 98FE A9 00			lda #$00
 24534 9900 4C 05 99			jmp l_5CD3
 24535 9903			l_5CC5
 24536
 24537 				; optimize OK (updates.pas), line = 363
 24538
 24539 9903 A9 01			lda #$01
 24540 9905			l_5CD3
 24541 9905 8D E7 BA			sta JOBDONE
 24542
 24543 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 364
 24544
 24545 9908 20 97 25			jsr ENABLECONSOLE
 24546 990B			l_5C54
 24547 990B			l_5C28
 24548
 24549 				; optimize OK (updates.pas), line = 368
 24550
 24551 990B AD 1A E4			lda CURRENTPLAYER
 24552 990E 0A				asl @
 24553 990F A8				tay
 24554 9910 B9 6D E0			lda adr.PLJOBLOCATION+1,y
 24555 9913 D0 05			bne @+
 24556 9915 B9 6C E0			lda adr.PLJOBLOCATION,y
 24557 9918 C9 0B			cmp #$0B
 24558 				@
 24559 991A F0 03 4C C1 9A		jne l_5CEE
 24560
 24561 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 370
 24562
 24563 991F E8				inx
 24564 9920 AD 78 A3 95 94		mva LOC_STRING_9 :STACKORIGIN,x
 24565 9925 AD 79 A3 95 A4		mva LOC_STRING_9+1 :STACKORIGIN+STACKWIDTH,x
 24566 992A 20 80 21			jsr CRT_WRITELN
 24567
 24568 				; optimize FAIL ('CRT_WRITELN2', updates.pas), line = 371
 24569
 24570 992D E8				inx
 24571 992E AD 7A A3 95 94		mva LOC_STRING_10 :STACKORIGIN,x
 24572 9933 AD 7B A3 95 A4		mva LOC_STRING_10+1 :STACKORIGIN+STACKWIDTH,x
 24573 9938 20 4C 21			jsr CRT_WRITELN2
 24574
 24575 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 372
 24576
 24577 993B E8				inx
 24578 993C AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 24579 9941 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 24580 9946 20 80 21			jsr CRT_WRITELN
 24581
 24582 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 373
 24583
 24584 9949 E8				inx
 24585 994A AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 24586 994F AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 24587 9954 20 80 21			jsr CRT_WRITELN
 24588
 24589 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 374
 24590
 24591 9957 E8				inx
 24592 9958 AD 80 A3 95 94		mva LOC_STRING_13 :STACKORIGIN,x
 24593 995D AD 81 A3 95 A4		mva LOC_STRING_13+1 :STACKORIGIN+STACKWIDTH,x
 24594 9962 20 80 21			jsr CRT_WRITELN
 24595
 24596 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 375
 24597
 24598 9965 E8				inx
 24599 9966 AD 82 A3 95 94		mva LOC_STRING_14 :STACKORIGIN,x
 24600 996B AD 83 A3 95 A4		mva LOC_STRING_14+1 :STACKORIGIN+STACKWIDTH,x
 24601 9970 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 24602
 24603 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', updates.pas), line = 376
 24604
 24605 9973 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 24606
 24607 				; optimize OK (updates.pas), line = 377
 24608
 24609 9976 A9 01			lda #$01
 24610 9978 8D 91 B6			sta READVALUE.MINVALUE
 24611 997B A9 00			lda #$00
 24612 997D 8D 92 B6			sta READVALUE.MINVALUE+1
 24613 9980 A9 03			lda #$03
 24614 9982 8D 93 B6			sta READVALUE.MAXVALUE
 24615 9985 A9 00			lda #$00
 24616 9987 8D 94 B6			sta READVALUE.MAXVALUE+1
 24617 998A 20 EE 21			jsr READVALUE
 24618 998D AD 95 B6			lda READVALUE.RESULT
 24619 9990 8D E8 BA			sta R
 24620
 24621 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', updates.pas), line = 378
 24622
 24623 9993 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 24624
 24625 				; optimize FAIL ('B_CRT.CRT_NEWLINE_06EB', updates.pas), line = 379
 24626
 24627 9996 20 A9 1E			jsr B_CRT.CRT_NEWLINE_06EB
 24628
 24629 				; optimize OK (updates.pas), line = 381
 24630
 24631 9999 A9 06			lda #$06
 24632 999B 20 CB 15			jsr SYSTEM.RANDOM_02E9
 24633 999E AD E8 BA			lda R
 24634 99A1 CD 81 A4			cmp SYSTEM.RANDOM_02E9.RESULT
 24635 99A4 B0 7C			jcs l_5D1D
 24636
 24637 				; optimize OK (updates.pas), line = 383
 24638
 24639 99A6 A9 64			lda #$64
 24640 99A8 20 CB 15			jsr SYSTEM.RANDOM_02E9
 24641 99AB E8				inx
 24642 99AC AD 81 A4 95 94		mva SYSTEM.RANDOM_02E9.RESULT :STACKORIGIN,x
 24643 99B1 E8				inx
 24644 99B2 AD E8 BA 95 94		mva R :STACKORIGIN,x
 24645 99B7 20 E7 11			jsr imulBYTE
 24646 99BA A5 84			lda :eax
 24647 99BC 18 69 2C			add #$2C
 24648 99BF 95 93			sta :STACKORIGIN-1,x
 24649 99C1 A5 85			lda :eax+1
 24650 99C3 69 01			adc #$01
 24651 99C5 95 A3			sta :STACKORIGIN-1+STACKWIDTH,x
 24652 99C7 CA				dex
 24653 99C8 B5 94			lda :STACKORIGIN,x
 24654 99CA 8D E9 BA			sta P
 24655 99CD B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 24656 99CF 8D EA BA			sta P+1
 24657
 24658 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 384
 24659
 24660 99D2 AD 84 A3 95 94		mva LOC_STRING_15 :STACKORIGIN,x
 24661 99D7 AD 85 A3 95 A4		mva LOC_STRING_15+1 :STACKORIGIN+STACKWIDTH,x
 24662 99DC 20 80 21			jsr CRT_WRITELN
 24663
 24664 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', updates.pas), line = 385
 24665
 24666 99DF E8				inx
 24667 99E0 AD 86 A3 95 94		mva LOC_STRING_16 :STACKORIGIN,x
 24668 99E5 AD 87 A3 95 A4		mva LOC_STRING_16+1 :STACKORIGIN+STACKWIDTH,x
 24669 99EA 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 24670
 24671 				; optimize OK (updates.pas), line = 386
 24672
 24673 99ED AD E9 BA			lda P
 24674 99F0 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 24675 99F3 AD EA BA			lda P+1
 24676 99F6 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 24677 99F9 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 24678
 24679 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 387
 24680
 24681 99FC E8				inx
 24682 99FD A9 9D 95 94			mva #$9D :STACKORIGIN,x
 24683 9A01 A9 0D 95 A4			mva #$0D :STACKORIGIN+STACKWIDTH,x
 24684 9A05 20 80 21			jsr CRT_WRITELN
 24685
 24686 				; optimize OK (updates.pas), line = 388
 24687
 24688 9A08 AD E9 BA			lda P
 24689 9A0B 8D 35 B9			sta ADDMONEY.AMOUNT
 24690 9A0E AD EA BA			lda P+1
 24691 9A11 8D 36 B9			sta ADDMONEY.AMOUNT+1
 24692 9A14 20 E3 2A			jsr ADDMONEY
 24693
 24694 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 389
 24695
 24696 9A17 20 2E 21			jsr WAITFORKEY
 24697
 24698 				; optimize OK (updates.pas), line = 390
 24699
 24700 9A1A A9 01			lda #$01
 24701 9A1C 8D E7 BA			sta JOBDONE
 24702 9A1F 4C C1 9A			jmp l_5D49
 24703 9A22			l_5D1D
 24704
 24705 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 394
 24706
 24707 9A22 E8				inx
 24708 9A23 AD 88 A3 95 94		mva LOC_STRING_17 :STACKORIGIN,x
 24709 9A28 AD 89 A3 95 A4		mva LOC_STRING_17+1 :STACKORIGIN+STACKWIDTH,x
 24710 9A2D 20 80 21			jsr CRT_WRITELN
 24711
 24712 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 395
 24713
 24714 9A30 E8				inx
 24715 9A31 AD 8A A3 95 94		mva LOC_STRING_18 :STACKORIGIN,x
 24716 9A36 AD 8B A3 95 A4		mva LOC_STRING_18+1 :STACKORIGIN+STACKWIDTH,x
 24717 9A3B 20 80 21			jsr CRT_WRITELN
 24718
 24719 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 396
 24720
 24721 9A3E 20 2E 21			jsr WAITFORKEY
 24722
 24723 				; optimize OK (updates.pas), line = 397
 24724
 24725 9A41 A9 01			lda #$01
 24726 9A43 8D 02 EC			sta adr.FP_AI+$01
 24727
 24728 				; optimize OK (updates.pas), line = 398
 24729
 24730 9A46 8D 04 EC			sta adr.FP_N+$01
 24731
 24732 				; optimize OK (updates.pas), line = 399
 24733
 24734 9A49 AD 9C B0			lda adr.FP_NAME+$20
 24735 9A4C 85 8C			sta @move.dst
 24736 9A4E AD 9D B0			lda adr.FP_NAME+1+$20
 24737 9A51 85 8D			sta @move.dst+1
 24738 9A53 AD A2 A3			lda LOC_STRING_30
 24739 9A56 85 88			sta @move.src
 24740 9A58 AD A3 A3			lda LOC_STRING_30+1
 24741 9A5B 85 89			sta @move.src+1
 24742 9A5D A0 00			ldy #$00
 24743 9A5F B1 88			lda (@move.src),y
 24744 9A61 18 69 01			add #1
 24745 9A64 85 84			sta @move.cnt
 24746 9A66 90 01			scc
 24747 9A68 C8				iny
 24748 9A69 84 85			sty @move.cnt+1
 24749 9A6B 20 35 10			jsr @move
 24750
 24751 				; optimize OK (updates.pas), line = 400
 24752
 24753 9A6E AD 7A B0			lda adr.FP_GANG+$02
 24754 9A71 85 8C			sta @move.dst
 24755 9A73 AD 7B B0			lda adr.FP_GANG+1+$02
 24756 9A76 85 8D			sta @move.dst+1
 24757 9A78 AD A2 A3			lda LOC_STRING_30
 24758 9A7B 85 88			sta @move.src
 24759 9A7D AD A3 A3			lda LOC_STRING_30+1
 24760 9A80 85 89			sta @move.src+1
 24761 9A82 A0 00			ldy #$00
 24762 9A84 B1 88			lda (@move.src),y
 24763 9A86 18 69 01			add #1
 24764 9A89 85 84			sta @move.cnt
 24765 9A8B 90 01			scc
 24766 9A8D C8				iny
 24767 9A8E 84 85			sty @move.cnt+1
 24768 9A90 20 35 10			jsr @move
 24769
 24770 				; optimize OK (updates.pas), line = 401
 24771
 24772 9A93 A9 00			lda #$00
 24773 9A95 8D 55 ED			sta adr.FP_SEX+$10
 24774
 24775 				; optimize OK (updates.pas), line = 402
 24776
 24777 9A98 A9 01			lda #$01
 24778 9A9A 8D 55 EC			sta adr.FP_WEAPON+$10
 24779
 24780 				; optimize OK (updates.pas), line = 403
 24781
 24782 9A9D A9 0A			lda #$0A
 24783 9A9F 8D 95 EC			sta adr.FP_ENERGY+$10
 24784
 24785 				; optimize OK (updates.pas), line = 404
 24786
 24787 9AA2 A9 1E			lda #$1E
 24788 9AA4 8D D5 EC			sta adr.FP_STRENGTH+$10
 24789
 24790 				; optimize OK (updates.pas), line = 405
 24791
 24792 9AA7 8D 15 ED			sta adr.FP_BRUTALITY+$10
 24793
 24794 				; optimize FAIL ('DOFIGHT', updates.pas), line = 407
 24795
 24796 9AAA 20 44 49			jsr DOFIGHT
 24797 9AAD AD E6 B9			lda DOFIGHT.RESULT
 24798 9AB0 C9 01			cmp #$01
 24799 9AB2 D0 05			jne l_5D8F
 24800
 24801 				; optimize OK (updates.pas), line = 408
 24802
 24803 9AB4 A9 00			lda #$00
 24804 9AB6 4C BB 9A			jmp l_5D9D
 24805 9AB9			l_5D8F
 24806
 24807 				; optimize OK (updates.pas), line = 410
 24808
 24809 9AB9 A9 01			lda #$01
 24810 9ABB			l_5D9D
 24811 9ABB 8D E7 BA			sta JOBDONE
 24812
 24813 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 411
 24814
 24815 9ABE 20 97 25			jsr ENABLECONSOLE
 24816 9AC1			l_5D49
 24817 9AC1			l_5CEE
 24818
 24819 				; optimize OK (updates.pas), line = 415
 24820
 24821 9AC1 AD 1A E4			lda CURRENTPLAYER
 24822 9AC4 0A				asl @
 24823 9AC5 A8				tay
 24824 9AC6 B9 6D E0			lda adr.PLJOBLOCATION+1,y
 24825 9AC9 D0 05			bne @+
 24826 9ACB B9 6C E0			lda adr.PLJOBLOCATION,y
 24827 9ACE C9 10			cmp #$10
 24828 				@
 24829 9AD0 D0 78			jne l_5DB8
 24830
 24831 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 417
 24832
 24833 9AD2 E8				inx
 24834 9AD3 AD 8C A3 95 94		mva LOC_STRING_19 :STACKORIGIN,x
 24835 9AD8 AD 8D A3 95 A4		mva LOC_STRING_19+1 :STACKORIGIN+STACKWIDTH,x
 24836 9ADD 20 80 21			jsr CRT_WRITELN
 24837
 24838 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 418
 24839
 24840 9AE0 E8				inx
 24841 9AE1 AD 8E A3 95 94		mva LOC_STRING_20 :STACKORIGIN,x
 24842 9AE6 AD 8F A3 95 A4		mva LOC_STRING_20+1 :STACKORIGIN+STACKWIDTH,x
 24843 9AEB 20 80 21			jsr CRT_WRITELN
 24844
 24845 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 419
 24846
 24847 9AEE 20 2E 21			jsr WAITFORKEY
 24848
 24849 				; optimize OK (updates.pas), line = 420
 24850
 24851 9AF1 A9 01			lda #$01
 24852 9AF3 8D 02 EC			sta adr.FP_AI+$01
 24853
 24854 				; optimize OK (updates.pas), line = 421
 24855
 24856 9AF6 8D 04 EC			sta adr.FP_N+$01
 24857
 24858 				; optimize OK (updates.pas), line = 422
 24859
 24860 9AF9 AD 9C B0			lda adr.FP_NAME+$20
 24861 9AFC 85 8C			sta @move.dst
 24862 9AFE AD 9D B0			lda adr.FP_NAME+1+$20
 24863 9B01 85 8D			sta @move.dst+1
 24864 9B03 AD A4 A3			lda LOC_STRING_31
 24865 9B06 85 88			sta @move.src
 24866 9B08 AD A5 A3			lda LOC_STRING_31+1
 24867 9B0B 85 89			sta @move.src+1
 24868 9B0D A0 00			ldy #$00
 24869 9B0F B1 88			lda (@move.src),y
 24870 9B11 18 69 01			add #1
 24871 9B14 85 84			sta @move.cnt
 24872 9B16 90 01			scc
 24873 9B18 C8				iny
 24874 9B19 84 85			sty @move.cnt+1
 24875 9B1B 20 35 10			jsr @move
 24876
 24877 				; optimize OK (updates.pas), line = 423
 24878
 24879 9B1E A9 00			lda #$00
 24880 9B20 8D 55 ED			sta adr.FP_SEX+$10
 24881
 24882 				; optimize OK (updates.pas), line = 424
 24883
 24884 9B23 8D 55 EC			sta adr.FP_WEAPON+$10
 24885
 24886 				; optimize OK (updates.pas), line = 425
 24887
 24888 9B26 A9 14			lda #$14
 24889 9B28 8D 95 EC			sta adr.FP_ENERGY+$10
 24890
 24891 				; optimize OK (updates.pas), line = 426
 24892
 24893 9B2B A9 1E			lda #$1E
 24894 9B2D 8D D5 EC			sta adr.FP_STRENGTH+$10
 24895
 24896 				; optimize OK (updates.pas), line = 427
 24897
 24898 9B30 8D 15 ED			sta adr.FP_BRUTALITY+$10
 24899
 24900 				; optimize FAIL ('DOFIGHT', updates.pas), line = 429
 24901
 24902 9B33 20 44 49			jsr DOFIGHT
 24903 9B36 AD E6 B9			lda DOFIGHT.RESULT
 24904 9B39 C9 01			cmp #$01
 24905 9B3B D0 05			jne l_5DF9
 24906
 24907 				; optimize OK (updates.pas), line = 430
 24908
 24909 9B3D A9 00			lda #$00
 24910 9B3F 4C 44 9B			jmp l_5E07
 24911 9B42			l_5DF9
 24912
 24913 				; optimize OK (updates.pas), line = 432
 24914
 24915 9B42 A9 01			lda #$01
 24916 9B44			l_5E07
 24917 9B44 8D E7 BA			sta JOBDONE
 24918
 24919 				; optimize FAIL ('ENABLECONSOLE', updates.pas), line = 433
 24920
 24921 9B47 20 97 25			jsr ENABLECONSOLE
 24922 9B4A			l_5DB8
 24923
 24924 				; optimize OK (updates.pas), line = 437
 24925
 24926 9B4A AD E7 BA			lda JOBDONE
 24927 9B4D C9 01			cmp #$01
 24928 9B4F F0 03 4C D2 9B		jne l_5E20
 24929
 24930 				; optimize OK (updates.pas), line = 439
 24931
 24932 9B54 AC 1A E4			ldy CURRENTPLAYER
 24933 9B57 B9 60 E0			lda adr.PLJOB,y
 24934 9B5A 38 E9 01			sub #$01
 24935 9B5D 99 60 E0			sta adr.PLJOB,y
 24936
 24937 				; optimize OK (updates.pas), line = 440
 24938
 24939 9B60 F0 03			jeq l_5E46
 24940 9B62 4C 13 9C			jmp @exit
 24941 9B65			l_5E46
 24942
 24943 				; optimize FAIL ('JOBWORKING', updates.pas), line = 441
 24944
 24945 9B65 20 F9 8D			jsr JOBWORKING
 24946
 24947 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 442
 24948
 24949 9B68 E8				inx
 24950 9B69 AD 90 A3 95 94		mva LOC_STRING_21 :STACKORIGIN,x
 24951 9B6E AD 91 A3 95 A4		mva LOC_STRING_21+1 :STACKORIGIN+STACKWIDTH,x
 24952 9B73 20 80 21			jsr CRT_WRITELN
 24953
 24954 				; optimize OK (updates.pas), line = 443
 24955
 24956 9B76 AD 1A E4			lda CURRENTPLAYER
 24957 9B79 0A				asl @
 24958 9B7A A8				tay
 24959 9B7B B9 64 E0			lda adr.PLJOBWAGE,y
 24960 9B7E 8D C7 AB			sta B_CRT.CRT_WRITE_0565.NUM
 24961 9B81 B9 65 E0			lda adr.PLJOBWAGE+1,y
 24962 9B84 8D C8 AB			sta B_CRT.CRT_WRITE_0565.NUM+1
 24963 9B87 20 C7 1C			jsr B_CRT.CRT_WRITE_0565
 24964
 24965 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 444
 24966
 24967 9B8A E8				inx
 24968 9B8B AD 92 A3 95 94		mva LOC_STRING_22 :STACKORIGIN,x
 24969 9B90 AD 93 A3 95 A4		mva LOC_STRING_22+1 :STACKORIGIN+STACKWIDTH,x
 24970 9B95 20 80 21			jsr CRT_WRITELN
 24971
 24972 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 445
 24973
 24974 9B98 20 2E 21			jsr WAITFORKEY
 24975
 24976 				; optimize OK (updates.pas), line = 446
 24977
 24978 9B9B AD 1A E4			lda CURRENTPLAYER
 24979 9B9E 0A				asl @
 24980 9B9F A8				tay
 24981 9BA0 B9 64 E0			lda adr.PLJOBWAGE,y
 24982 9BA3 8D 35 B9			sta ADDMONEY.AMOUNT
 24983 9BA6 B9 65 E0			lda adr.PLJOBWAGE+1,y
 24984 9BA9 8D 36 B9			sta ADDMONEY.AMOUNT+1
 24985 9BAC 20 E3 2A			jsr ADDMONEY
 24986
 24987 				; optimize OK (updates.pas), line = 447
 24988
 24989 9BAF AC 1A E4			ldy CURRENTPLAYER
 24990 9BB2 B9 80 E0			lda adr.PLNEWPOINTS,y
 24991 9BB5 18 69 03			add #$03
 24992 9BB8 99 80 E0			sta adr.PLNEWPOINTS,y
 24993
 24994 				; optimize OK (updates.pas), line = 449
 24995
 24996 9BBB A9 00			lda #$00
 24997 9BBD 99 60 E0			sta adr.PLJOB,y
 24998
 24999 				; optimize OK (updates.pas), line = 450
 25000
 25001 9BC0 AD 1A E4			lda CURRENTPLAYER
 25002 9BC3 0A				asl @
 25003 9BC4 A8				tay
 25004 9BC5 A9 0F			lda #$0F
 25005 9BC7 99 6C E0			sta adr.PLJOBLOCATION,y
 25006 9BCA A9 00			lda #$00
 25007 9BCC 99 6D E0			sta adr.PLJOBLOCATION+1,y
 25008 9BCF 4C 13 9C			jmp @exit
 25009 9BD2			l_5E20
 25010
 25011 				; optimize FAIL ('JOBWORKING', updates.pas), line = 454
 25012
 25013 9BD2 20 F9 8D			jsr JOBWORKING
 25014
 25015 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 455
 25016
 25017 9BD5 E8				inx
 25018 9BD6 AD 94 A3 95 94		mva LOC_STRING_23 :STACKORIGIN,x
 25019 9BDB AD 95 A3 95 A4		mva LOC_STRING_23+1 :STACKORIGIN+STACKWIDTH,x
 25020 9BE0 20 80 21			jsr CRT_WRITELN
 25021
 25022 				; optimize FAIL ('CRT_WRITELN', updates.pas), line = 456
 25023
 25024 9BE3 E8				inx
 25025 9BE4 AD 96 A3 95 94		mva LOC_STRING_24 :STACKORIGIN,x
 25026 9BE9 AD 97 A3 95 A4		mva LOC_STRING_24+1 :STACKORIGIN+STACKWIDTH,x
 25027 9BEE 20 80 21			jsr CRT_WRITELN
 25028
 25029 				; optimize FAIL ('WAITFORKEY', updates.pas), line = 457
 25030
 25031 9BF1 20 2E 21			jsr WAITFORKEY
 25032
 25033 				; optimize OK (updates.pas), line = 458
 25034
 25035 9BF4 AC 1A E4			ldy CURRENTPLAYER
 25036 9BF7 B9 80 E0			lda adr.PLNEWPOINTS,y
 25037 9BFA 38 E9 02			sub #$02
 25038 9BFD 99 80 E0			sta adr.PLNEWPOINTS,y
 25039
 25040 				; optimize OK (updates.pas), line = 459
 25041
 25042 9C00 AD 1A E4			lda CURRENTPLAYER
 25043 9C03 0A				asl @
 25044 9C04 A8				tay
 25045 9C05 A9 00			lda #$00
 25046 9C07 99 6C E0			sta adr.PLJOBLOCATION,y
 25047 9C0A 99 6D E0			sta adr.PLJOBLOCATION+1,y
 25048
 25049 				; optimize OK (updates.pas), line = 460
 25050
 25051 9C0D AC 1A E4			ldy CURRENTPLAYER
 25052 9C10 99 60 E0			sta adr.PLJOB,y
 25053 9C13			@exit
 25054
 25055 				; ------------------------------------------------------------
 25056
 25057 = BAE6			RESULT	= DATAORIGIN+$1671
 25058 = BAE7			JOBDONE	= DATAORIGIN+$1672
 25059 = BAE8			R	= DATAORIGIN+$1673
 25060 = BAE9			P	= DATAORIGIN+$1674
 25061 = BAEB			@CASETMP_0016	= DATAORIGIN+$1676
 25062
 25063 = BAE7			@VarData	= JOBDONE
 25064 = 0005			@VarDataSize	= 5
 25065
 25066 9C13 60				rts						; ret
 25067 				.endl
 25068
 25069 9C14			.local	INITGLOBALVARS					; PROCEDURE
 25070
 25071 				; optimize OK (main.pas), line = 75
 25072
 25073 9C14 A9 00			lda #$00
 25074 9C16 A8				tay
 25075
 25076 9C17			l_5EB0
 25077 				; --- ForToDoCondition
 25078 9C17 C0 04			cpy #$04
 25079 9C19 B0 0E			jcs l_5EBE
 25080
 25081 				; optimize OK (main.pas), line = 77
 25082
 25083 9C1B A9 63			lda #$63
 25084 9C1D 99 1C E4			sta adr.PLRENT,y
 25085
 25086 				; optimize OK (main.pas), line = 78
 25087
 25088 9C20 99 50 E0			sta adr.PLLOANSHARK,y
 25089
 25090 				; optimize OK (main.pas), line = 79
 25091
 25092 9C23 99 8C E0			sta adr.PLFREED,y
 25093
 25094 				; --- ForToDoEpilog
 25095 9C26 C8				iny
 25096 9C27 D0 EE			jne l_5EB0
 25097 9C29			l_5EBE
 25098 9C29 8C EC BA			sty K
 25099
 25100 				; ------------------------------------------------------------
 25101
 25102 = BAEC			K	= DATAORIGIN+$1677
 25103
 25104 = BAEC			@VarData	= K
 25105 = 0001			@VarDataSize	= 1
 25106
 25107 9C2C			@exit
 25108 					.ifdef @new
 25109 					lda <@VarData
 25110 					sta :ztmp
 25111 					lda >@VarData
 25112 					ldy #@VarDataSize-1
 25113 					jmp @FreeMem
 25114 					els
 25115 9C2C 60				rts						; ret
 25116 					eif
 25117 				.endl
 25118 9C2D			l_0261
 25119
 25120 				; optimize OK (main.pas), line = 91
 25121
 25122 9C2D A9 22			lda #$22
 25123 9C2F 8D 00 D4			sta ATARI.DMACTL
 25124
 25125 				; -------------------  ASM Block 00000181  -------------------
 25126
 25127 				;
 25128 9C32 48			        pha
 25129 9C33 20 2A 08		        jsr xbios.xBIOS_SET_DEFAULT_DEVICE
 25130 9C36 A9 00		        lda #$00
 25131 9C38 8D E8 0B		        sta xbios.xIRQEN
 25132 9C3B 68			        pla
 25133 				    
 25134 				; optimize FAIL ('SYSTEM.RANDOMIZE', main.pas), line = 101
 25135
 25136 9C3C 20 BF 15			jsr SYSTEM.RANDOMIZE
 25137
 25138 				; optimize FAIL ('B_SYSTEM.SYSTEMOFF_0415', main.pas), line = 102
 25139
 25140 9C3F 20 26 1A			jsr B_SYSTEM.SYSTEMOFF_0415
 25141
 25142 				; optimize OK (main.pas), line = 105
 25143
 25144 9C42 AD 00 08			lda $0800
 25145 9C45 8D F0 BA			sta CS
 25146 9C48 AD 01 08			lda $0800+1
 25147 9C4B 8D F1 BA			sta CS+1
 25148
 25149 				; optimize OK (main.pas), line = 106
 25150
 25151 9C4E AD F0 BA			lda CS
 25152 9C51 C9 78			cmp #$78
 25153 9C53 D0 07			jne l_5F00x
 25154 9C55 AD F1 BA			lda CS+1
 25155 9C58 C9 42			cmp #$42
 25156 9C5A F0 0F			jeq l_5F00
 25157 9C5C			l_5F00x
 25158
 25159 				; --- RepeatUntilProlog
 25160 9C5C			l_5F02
 25161
 25162 				; optimize FAIL ('B_CRT.CRT_WRITE_053A', main.pas), line = 109
 25163
 25164 9C5C E8				inx
 25165 9C5D A9 52 95 94			mva #$52 :STACKORIGIN,x
 25166 9C61 A9 0E 95 A4			mva #$0E :STACKORIGIN+STACKWIDTH,x
 25167 9C65 20 38 1C			jsr B_CRT.CRT_WRITE_053A
 25168
 25169 				; optimize OK (main.pas), line = 110
 25170
 25171 9C68 4C 5C 9C			jmp l_5F02
 25172 9C6B			l_5F00
 25173
 25174 				; optimize FAIL ('ENABLECONSOLE', main.pas), line = 112
 25175
 25176 9C6B 20 97 25			jsr ENABLECONSOLE
 25177
 25178 				; optimize OK (main.pas), line = 114
 25179
 25180 9C6E AD FE A2			lda E7FNAME
 25181 9C71 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 25182 9C74 AD FF A2			lda E7FNAME+1
 25183 9C77 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 25184 9C7A A9 00			lda #$00
 25185 9C7C 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 25186 9C7F A9 E7			lda #$E7
 25187 9C81 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 25188 9C84 20 65 17			jsr XBAPLIB.XBUNAPL
 25189
 25190 				; optimize FAIL ('INITGLOBALVARS', main.pas), line = 116
 25191
 25192 9C87 20 14 9C			jsr INITGLOBALVARS
 25193
 25194 				; optimize FAIL ('SETUPGAME', main.pas), line = 117
 25195
 25196 9C8A 20 C5 89			jsr SETUPGAME
 25197
 25198 				; optimize FAIL ('INITPLAYERS', main.pas), line = 118
 25199
 25200 9C8D 20 D8 29			jsr INITPLAYERS
 25201
 25202 				; optimize OK (main.pas), line = 127
 25203
 25204 9C90 A9 00			lda #$00
 25205 9C92 8D 0E D2			sta $D20E
 25206
 25207 				; optimize OK (main.pas), line = 139
 25208
 25209 9C95 8D 1A E4			sta CURRENTPLAYER
 25210
 25211 				; optimize OK (main.pas), line = 140
 25212
 25213 9C98 A9 01			lda #$01
 25214 9C9A 8D 52 E1			sta CURRENTMONTH
 25215
 25216 				; optimize OK (main.pas), line = 141
 25217
 25218 9C9D A9 00			lda #$00
 25219 9C9F 8D 53 E1			sta CURRENTYEAR
 25220
 25221 				; --- RepeatUntilProlog
 25222 9CA2			l_5F23
 25223
 25224 				; optimize OK (main.pas), line = 143
 25225
 25226 9CA2 A9 13			lda #$13
 25227 9CA4 20 B3 26			jsr LOADLOCATION
 25228
 25229 				; optimize FAIL ('ENABLECONSOLE', main.pas), line = 144
 25230
 25231 9CA7 20 97 25			jsr ENABLECONSOLE
 25232
 25233 				; optimize FAIL ('PLAYERSTURN', main.pas), line = 145
 25234
 25235 9CAA 20 F5 29			jsr PLAYERSTURN
 25236
 25237 				; optimize FAIL ('BLACKCONSOLE', main.pas), line = 146
 25238
 25239 9CAD 20 72 25			jsr BLACKCONSOLE
 25240
 25241 				; optimize OK (main.pas), line = 147
 25242
 25243 9CB0 A9 0F			lda #$0F
 25244 9CB2 8D AE B8			sta CURRENTLOCATION
 25245
 25246 				; optimize OK (main.pas), line = 148
 25247
 25248 9CB5 8D EC B9			sta LASTLOCATION
 25249
 25250 				; optimize FAIL ('UPDATERANK', main.pas), line = 150
 25251
 25252 9CB8 20 33 8E			jsr UPDATERANK
 25253
 25254 				; optimize OK (main.pas), line = 156
 25255
 25256 9CBB AC 1A E4			ldy CURRENTPLAYER
 25257 9CBE B9 20 E0			lda adr.PLFAKEMONEY,y
 25258 9CC1 F0 1C			jeq l_5F46
 25259
 25260 				; optimize OK (main.pas), line = 158
 25261
 25262 9CC3 38 E9 01			sub #$01
 25263 9CC6 99 20 E0			sta adr.PLFAKEMONEY,y
 25264
 25265 				; optimize OK (main.pas), line = 159
 25266
 25267 9CC9 D0 14			jne l_5F6C
 25268
 25269 				; optimize FAIL ('ENABLECONSOLE', main.pas), line = 161
 25270
 25271 9CCB 20 97 25			jsr ENABLECONSOLE
 25272
 25273 				; optimize FAIL ('CRT_WRITELN', main.pas), line = 162
 25274
 25275 9CCE E8				inx
 25276 9CCF AD 7C A3 95 94		mva LOC_STRING_11 :STACKORIGIN,x
 25277 9CD4 AD 7D A3 95 A4		mva LOC_STRING_11+1 :STACKORIGIN+STACKWIDTH,x
 25278 9CD9 20 80 21			jsr CRT_WRITELN
 25279
 25280 				; optimize FAIL ('WAITFORKEY', main.pas), line = 163
 25281
 25282 9CDC 20 2E 21			jsr WAITFORKEY
 25283 9CDF			l_5F6C
 25284 9CDF			l_5F46
 25285
 25286 				; optimize OK (main.pas), line = 168
 25287
 25288 9CDF AC 1A E4			ldy CURRENTPLAYER
 25289 9CE2 B9 28 E0			lda adr.PLFORGEDID,y
 25290 9CE5 F0 28			jeq l_5F8B
 25291
 25292 				; optimize OK (main.pas), line = 170
 25293
 25294 9CE7 A9 0C			lda #$0C
 25295 9CE9 20 CB 15			jsr SYSTEM.RANDOM_02E9
 25296 9CEC AD 81 A4			lda SYSTEM.RANDOM_02E9.RESULT
 25297 9CEF C9 01			cmp #$01
 25298 9CF1 D0 1C			jne l_5F9D
 25299
 25300 				; optimize FAIL ('ENABLECONSOLE', main.pas), line = 172
 25301
 25302 9CF3 20 97 25			jsr ENABLECONSOLE
 25303
 25304 				; optimize FAIL ('CRT_WRITELN', main.pas), line = 173
 25305
 25306 9CF6 E8				inx
 25307 9CF7 AD 7E A3 95 94		mva LOC_STRING_12 :STACKORIGIN,x
 25308 9CFC AD 7F A3 95 A4		mva LOC_STRING_12+1 :STACKORIGIN+STACKWIDTH,x
 25309 9D01 20 80 21			jsr CRT_WRITELN
 25310
 25311 				; optimize FAIL ('WAITFORKEY', main.pas), line = 174
 25312
 25313 9D04 20 2E 21			jsr WAITFORKEY
 25314
 25315 				; optimize OK (main.pas), line = 175
 25316
 25317 9D07 AC 1A E4			ldy CURRENTPLAYER
 25318 9D0A A9 00			lda #$00
 25319 9D0C 99 28 E0			sta adr.PLFORGEDID,y
 25320 9D0F			l_5F9D
 25321 9D0F			l_5F8B
 25322
 25323 				; optimize FAIL ('UPDATEGANGSTERS', main.pas), line = 179
 25324
 25325 9D0F 20 AE 95			jsr UPDATEGANGSTERS
 25326
 25327 				; optimize FAIL ('UPDATERENT', main.pas), line = 180
 25328
 25329 9D12 20 7E 90			jsr UPDATERENT
 25330
 25331 				; optimize FAIL ('UPDATEOPPORTUNITIES', main.pas), line = 181
 25332
 25333 9D15 20 B0 94			jsr UPDATEOPPORTUNITIES
 25334
 25335 				; optimize FAIL ('UPDATEPRISON', main.pas), line = 182
 25336
 25337 9D18 20 FF 95			jsr UPDATEPRISON
 25338
 25339 				; optimize OK (main.pas), line = 183
 25340
 25341 9D1B AD AE B8			lda CURRENTLOCATION
 25342 9D1E C9 11			cmp #$11
 25343 9D20 D0 06			jne l_5FC4
 25344
 25345 				; optimize FAIL ('NEXTPLAYER', main.pas), line = 184
 25346
 25347 9D22 20 9B 29			jsr NEXTPLAYER
 25348 9D25 4C 7D A0			jmp c_5F23					; continue
 25349 9D28			l_5FC4
 25350
 25351 				; optimize OK (main.pas), line = 189
 25352
 25353 9D28 AC 1A E4			ldy CURRENTPLAYER
 25354 9D2B B9 5C E0			lda adr.PLBRIBE,y
 25355 9D2E F0 06			jeq l_5FDD
 25356
 25357 				; optimize OK (main.pas), line = 190
 25358
 25359 9D30 38 E9 01			sub #$01
 25360 9D33 99 5C E0			sta adr.PLBRIBE,y
 25361 9D36			l_5FDD
 25362
 25363 				; optimize OK (main.pas), line = 192
 25364
 25365 9D36 A9 16			lda #$16
 25366 9D38 20 B3 26			jsr LOADLOCATION
 25367
 25368 				; optimize FAIL ('UPDATELOANSHARK', main.pas), line = 193
 25369
 25370 9D3B 20 08 92			jsr UPDATELOANSHARK
 25371
 25372 				; optimize OK (main.pas), line = 194
 25373
 25374 9D3E AC 1A E4			ldy CURRENTPLAYER
 25375 9D41 B9 60 E0			lda adr.PLJOB,y
 25376 9D44 F0 0E			jeq l_6008
 25377
 25378 				; optimize FAIL ('UPDATEJOB', main.pas), line = 196
 25379
 25380 9D46 20 9D 97			jsr UPDATEJOB
 25381
 25382 				; optimize OK (main.pas), line = 197
 25383
 25384 9D49 A9 11			lda #$11
 25385 9D4B 8D AE B8			sta CURRENTLOCATION
 25386
 25387 				; optimize FAIL ('NEXTPLAYER', main.pas), line = 199
 25388
 25389 9D4E 20 9B 29			jsr NEXTPLAYER
 25390 9D51 4C 7D A0			jmp c_5F23					; continue
 25391 9D54			l_6008
 25392
 25393 				; optimize OK (main.pas), line = 203
 25394
 25395 9D54 AC 1A E4			ldy CURRENTPLAYER
 25396 9D57 B9 2C E0			lda adr.PLCAR,y
 25397 9D5A A8				tay
 25398 9D5B B9 0C E7			lda adr.CARRANGE,y
 25399 9D5E AC 1A E4			ldy CURRENTPLAYER
 25400 9D61 99 30 E0			sta adr.PLSTEPS,y
 25401
 25402 				; optimize FAIL ('PLACECURRENTPLAYER', main.pas), line = 204
 25403
 25404 9D64 20 A9 2A			jsr PLACECURRENTPLAYER
 25405
 25406 				; optimize FAIL ('LOADMAP', main.pas), line = 205
 25407
 25408 9D67 20 2A 89			jsr LOADMAP
 25409
 25410 				; optimize FAIL ('ENABLESPRITES', main.pas), line = 206
 25411
 25412 9D6A 20 DA 39			jsr ENABLESPRITES
 25413
 25414 				; optimize FAIL ('PRINTMAPSTATUS', main.pas), line = 207
 25415
 25416 9D6D 20 23 84			jsr PRINTMAPSTATUS
 25417
 25418 				; --- WhileProlog
 25419 9D70 4C FF 9F			jmp l_6026
 25420 9D73			l_6027
 25421
 25422 				; optimize FAIL ('ENABLEMAPCONSOLE', main.pas), line = 212
 25423
 25424 9D73 20 DA 25			jsr ENABLEMAPCONSOLE
 25425
 25426 				; optimize FAIL ('PRINTMAPSTATUS', main.pas), line = 213
 25427
 25428 9D76 20 23 84			jsr PRINTMAPSTATUS
 25429
 25430 				; optimize OK (main.pas), line = 214
 25431
 25432 9D79 A9 00			lda #$00
 25433 9D7B 20 88 35			jsr PAINTPLAYER
 25434
 25435 				; --- RepeatUntilProlog
 25436 9D7E			l_602C
 25437
 25438 				; optimize FAIL ('READKEYANDSTICK', main.pas), line = 217
 25439
 25440 9D7E 20 8E 20			jsr READKEYANDSTICK
 25441 9D81 AD 89 B4			lda READKEYANDSTICK.RESULT
 25442 9D84 8D F2 BA			sta CH
 25443
 25444 				; optimize OK (main.pas), line = 218
 25445
 25446 9D87 C9 1E			cmp #$1E
 25447 9D89 D0 06			jne l_6042
 25448
 25449 				; optimize FAIL ('LOADGAME', main.pas), line = 219
 25450
 25451 9D8B 20 CE 2F			jsr LOADGAME
 25452 9D8E 4C E0 9D			jmp c_602C					; continue
 25453 9D91			l_6042
 25454
 25455 				; optimize OK (main.pas), line = 222
 25456
 25457 9D91 AD F2 BA			lda CH
 25458 9D94 C9 1F			cmp #$1F
 25459 9D96 D0 06			jne l_6058
 25460
 25461 				; optimize FAIL ('SAVEGAME', main.pas), line = 223
 25462
 25463 9D98 20 84 2F			jsr SAVEGAME
 25464 9D9B 4C E0 9D			jmp c_602C					; continue
 25465 9D9E			l_6058
 25466
 25467 				; optimize OK (main.pas), line = 226
 25468
 25469 9D9E AD F2 BA			lda CH
 25470 9DA1 20 12 37			jsr MOVECURRENTPLAYER
 25471 9DA4 AD 66 B9			lda MOVECURRENTPLAYER.RESULT
 25472 9DA7 8D AE B8			sta CURRENTLOCATION
 25473
 25474 				; optimize OK (main.pas), line = 227
 25475
 25476 9DAA C9 11			cmp #$11
 25477 9DAC D0 03			jne l_6075
 25478 9DAE 4C E3 9D			jmp b_602C					; break
 25479 9DB1			l_6075
 25480
 25481 				; optimize FAIL ('PRINTMAPSTATUS', main.pas), line = 228
 25482
 25483 9DB1 20 23 84			jsr PRINTMAPSTATUS
 25484
 25485 				; optimize OK (main.pas), line = 229
 25486
 25487 9DB4 A9 01			lda #$01
 25488 9DB6 8D 77 B0			sta MAPRELOADED
 25489
 25490 				; optimize FAIL ('CHANGEMAP', main.pas), line = 230
 25491
 25492 9DB9 20 34 89			jsr CHANGEMAP
 25493
 25494 				; optimize OK (main.pas), line = 231
 25495
 25496 9DBC A0 01			ldy #1
 25497 9DBE AD AE B8			lda CURRENTLOCATION
 25498 9DC1 C9 10			cmp #$10
 25499 9DC3 D0 01			bne @+
 25500 9DC5 88				dey
 25501 				@
 25502 9DC6 84 9D			sty :STACKORIGIN+9
 25503 9DC8 AC 1A E4			ldy CURRENTPLAYER
 25504 9DCB B9 30 E0			lda adr.PLSTEPS,y
 25505 9DCE 85 9E			sta :STACKORIGIN+10
 25506 9DD0 A0 01			ldy #1
 25507 9DD2 A5 9E			lda :STACKORIGIN+10
 25508 9DD4 30 03			bmi @+
 25509 9DD6 F0 01			beq @+
 25510 9DD8 88				dey
 25511 				@
 25512 9DD9 98				tya
 25513 9DDA 05 9D			ora :STACKORIGIN+9
 25514 9DDC 85 9D			sta :STACKORIGIN+9
 25515 9DDE D0 03			bne *+5
 25516 9DE0			c_602C
 25517 9DE0 4C 7E 9D			jmp l_602C
 25518 9DE3			b_602C
 25519
 25520 				; optimize OK (main.pas), line = 233
 25521
 25522 9DE3 AD AE B8			lda CURRENTLOCATION
 25523 9DE6 C9 11			cmp #$11
 25524 9DE8 D0 0E			jne l_60AC
 25525
 25526 				; optimize OK (main.pas), line = 235
 25527
 25528 9DEA AC 1A E4			ldy CURRENTPLAYER
 25529 9DED A9 00			lda #$00
 25530 9DEF 99 30 E0			sta adr.PLSTEPS,y
 25531
 25532 				; optimize FAIL ('BLACKCONSOLE', main.pas), line = 236
 25533
 25534 9DF2 20 72 25			jsr BLACKCONSOLE
 25535 9DF5 4C 16 A0			jmp b_6027					; break
 25536 9DF8			l_60AC
 25537
 25538 				; optimize OK (main.pas), line = 241
 25539
 25540 9DF8 AD AE B8			lda CURRENTLOCATION
 25541 9DFB C9 0F			cmp #$0F
 25542 9DFD F0 04			jeq l_60D5x
 25543 9DFF C9 10			cmp #$10
 25544 9E01 D0 03			jne l_60D5
 25545 9E03			l_60D5x
 25546 9E03 4C 16 A0			jmp b_6027					; break
 25547 9E06			l_60D5
 25548
 25549 				; optimize OK (main.pas), line = 244
 25550
 25551 9E06 AD BC EA			lda OLDMAPPOS_X
 25552 9E09 8D BA EA			sta MAPPOS_X
 25553
 25554 				; optimize OK (main.pas), line = 245
 25555
 25556 9E0C AD BD EA			lda OLDMAPPOS_Y
 25557 9E0F 8D BB EA			sta MAPPOS_Y
 25558
 25559 				; optimize OK (main.pas), line = 246
 25560
 25561 9E12 AD BE EA			lda OLDPLAYERPOS_X
 25562 9E15 8D B8 EA			sta PLAYERPOS_X
 25563
 25564 				; optimize OK (main.pas), line = 247
 25565
 25566 9E18 AD BF EA			lda OLDPLAYERPOS_Y
 25567 9E1B 8D B9 EA			sta PLAYERPOS_Y
 25568
 25569 				; optimize OK (main.pas), line = 248
 25570
 25571 9E1E AC 1A E4			ldy CURRENTPLAYER
 25572 9E21 B9 30 E0			lda adr.PLSTEPS,y
 25573 9E24 38 E9 04			sub #$04
 25574 9E27 99 30 E0			sta adr.PLSTEPS,y
 25575
 25576 				; optimize FAIL ('CLEARSPRITES', main.pas), line = 250
 25577
 25578 9E2A 20 B4 39			jsr CLEARSPRITES
 25579
 25580 				; optimize FAIL ('BLACKCONSOLE', main.pas), line = 253
 25581
 25582 9E2D 20 72 25			jsr BLACKCONSOLE
 25583
 25584 				; optimize OK (main.pas), line = 255
 25585
 25586 9E30 AD AE B8			lda CURRENTLOCATION
 25587 9E33 20 86 28			jsr SHOWLOCATION
 25588 9E36 AD 08 B9			lda SHOWLOCATION.RESULT
 25589 9E39 8D EE BA			sta CHOICE
 25590
 25591 				; optimize OK (main.pas), line = 256
 25592
 25593 9E3C CD 29 C1			cmp LOC_NOPTIONS
 25594 9E3F D0 05			jne l_611D
 25595
 25596 				; optimize OK (main.pas), line = 257
 25597
 25598 9E41 A9 0F			lda #$0F
 25599 9E43 8D AE B8			sta CURRENTLOCATION
 25600 9E46			l_611D
 25601
 25602 				; optimize OK (main.pas), line = 259
 25603
 25604 9E46 AD AE B8			lda CURRENTLOCATION
 25605 9E49 8D F3 BA			sta @CASETMP_0017
 25606 9E4C C9 01			cmp #$01
 25607 9E4E D0 16			jne l_612F
 25608 				@
 25609
 25610 				; optimize OK (main.pas), line = 260
 25611
 25612 9E50 A9 EE			lda <CHOICE
 25613 9E52 8D 42 BA			sta BANKCHOICES.CHOICE
 25614 9E55 A9 BA			lda >CHOICE
 25615 9E57 8D 43 BA			sta BANKCHOICES.CHOICE+1
 25616 9E5A 20 7E 50			jsr BANKCHOICES
 25617 9E5D AD 44 BA			lda BANKCHOICES.RESULT
 25618 9E60 8D EF BA			sta OUTCOME
 25619 9E63 4C C1 9F			jmp a_0017
 25620 9E66			l_612F
 25621 9E66 C9 02			cmp #$02
 25622 9E68 D0 16			jne l_613D
 25623
 25624 				; optimize OK (main.pas), line = 261
 25625
 25626 9E6A A9 EE			lda <CHOICE
 25627 9E6C 8D 5D BA			sta FORGERYCHOICES.CHOICE
 25628 9E6F A9 BA			lda >CHOICE
 25629 9E71 8D 5E BA			sta FORGERYCHOICES.CHOICE+1
 25630 9E74 20 6B 59			jsr FORGERYCHOICES
 25631 9E77 AD 5F BA			lda FORGERYCHOICES.RESULT
 25632 9E7A 8D EF BA			sta OUTCOME
 25633 9E7D 4C C1 9F			jmp a_0017
 25634 9E80			l_613D
 25635 9E80 C9 03			cmp #$03
 25636 9E82 D0 16			jne l_614B
 25637
 25638 				; optimize OK (main.pas), line = 262
 25639
 25640 9E84 A9 EE			lda <CHOICE
 25641 9E86 8D C4 BA			sta MONEYTRANSPORTERCHOICES.CHOICE
 25642 9E89 A9 BA			lda >CHOICE
 25643 9E8B 8D C5 BA			sta MONEYTRANSPORTERCHOICES.CHOICE+1
 25644 9E8E 20 54 83			jsr MONEYTRANSPORTERCHOICES
 25645 9E91 AD C6 BA			lda MONEYTRANSPORTERCHOICES.RESULT
 25646 9E94 8D EF BA			sta OUTCOME
 25647 9E97 4C C1 9F			jmp a_0017
 25648 9E9A			l_614B
 25649 9E9A C9 04			cmp #$04
 25650 9E9C D0 16			jne l_6159
 25651
 25652 				; optimize OK (main.pas), line = 263
 25653
 25654 9E9E A9 EE			lda <CHOICE
 25655 9EA0 8D 7C BA			sta LOANSHARKCHOICES.CHOICE
 25656 9EA3 A9 BA			lda >CHOICE
 25657 9EA5 8D 7D BA			sta LOANSHARKCHOICES.CHOICE+1
 25658 9EA8 20 3E 64			jsr LOANSHARKCHOICES
 25659 9EAB AD 7E BA			lda LOANSHARKCHOICES.RESULT
 25660 9EAE 8D EF BA			sta OUTCOME
 25661 9EB1 4C C1 9F			jmp a_0017
 25662 9EB4			l_6159
 25663 9EB4 C9 05			cmp #$05
 25664 9EB6 D0 16			jne l_6167
 25665
 25666 				; optimize OK (main.pas), line = 264
 25667
 25668 9EB8 A9 EE			lda <CHOICE
 25669 9EBA 8D 87 BA			sta POLICECHOICES.CHOICE
 25670 9EBD A9 BA			lda >CHOICE
 25671 9EBF 8D 88 BA			sta POLICECHOICES.CHOICE+1
 25672 9EC2 20 BC 6B			jsr POLICECHOICES
 25673 9EC5 AD 89 BA			lda POLICECHOICES.RESULT
 25674 9EC8 8D EF BA			sta OUTCOME
 25675 9ECB 4C C1 9F			jmp a_0017
 25676 9ECE			l_6167
 25677 9ECE C9 06			cmp #$06
 25678 9ED0 D0 16			jne l_6175
 25679
 25680 				; optimize OK (main.pas), line = 265
 25681
 25682 9ED2 A9 EE			lda <CHOICE
 25683 9ED4 8D 54 BA			sta CARDEALERCHOICES.CHOICE
 25684 9ED7 A9 BA			lda >CHOICE
 25685 9ED9 8D 55 BA			sta CARDEALERCHOICES.CHOICE+1
 25686 9EDC 20 06 56			jsr CARDEALERCHOICES
 25687 9EDF AD 56 BA			lda CARDEALERCHOICES.RESULT
 25688 9EE2 8D EF BA			sta OUTCOME
 25689 9EE5 4C C1 9F			jmp a_0017
 25690 9EE8			l_6175
 25691 9EE8 C9 07			cmp #$07
 25692 9EEA D0 16			jne l_6183
 25693
 25694 				; optimize OK (main.pas), line = 266
 25695
 25696 9EEC A9 EE			lda <CHOICE
 25697 9EEE 8D 8F BA			sta PUBCHOICES.CHOICE
 25698 9EF1 A9 BA			lda >CHOICE
 25699 9EF3 8D 90 BA			sta PUBCHOICES.CHOICE+1
 25700 9EF6 20 33 6E			jsr PUBCHOICES
 25701 9EF9 AD 91 BA			lda PUBCHOICES.RESULT
 25702 9EFC 8D EF BA			sta OUTCOME
 25703 9EFF 4C C1 9F			jmp a_0017
 25704 9F02			l_6183
 25705 9F02 C9 17			cmp #$17
 25706 9F04 D0 16			jne l_6191
 25707
 25708 				; optimize OK (main.pas), line = 267
 25709
 25710 9F06 A9 EE			lda <CHOICE
 25711 9F08 8D BA BA			sta CENTRALSTATIONCHOICES.CHOICE
 25712 9F0B A9 BA			lda >CHOICE
 25713 9F0D 8D BB BA			sta CENTRALSTATIONCHOICES.CHOICE+1
 25714 9F10 20 AF 80			jsr CENTRALSTATIONCHOICES
 25715 9F13 AD BC BA			lda CENTRALSTATIONCHOICES.RESULT
 25716 9F16 8D EF BA			sta OUTCOME
 25717 9F19 4C C1 9F			jmp a_0017
 25718 9F1C			l_6191
 25719 9F1C C9 09			cmp #$09
 25720 9F1E D0 16			jne l_619F
 25721
 25722 				; optimize OK (main.pas), line = 268
 25723
 25724 9F20 A9 EE			lda <CHOICE
 25725 9F22 8D A4 BA			sta STORECHOICES.CHOICE
 25726 9F25 A9 BA			lda >CHOICE
 25727 9F27 8D A5 BA			sta STORECHOICES.CHOICE+1
 25728 9F2A 20 BD 77			jsr STORECHOICES
 25729 9F2D AD A6 BA			lda STORECHOICES.RESULT
 25730 9F30 8D EF BA			sta OUTCOME
 25731 9F33 4C C1 9F			jmp a_0017
 25732 9F36			l_619F
 25733 9F36 C9 0A			cmp #$0A
 25734 9F38 D0 16			jne l_61AD
 25735
 25736 				; optimize OK (main.pas), line = 269
 25737
 25738 9F3A A9 EE			lda <CHOICE
 25739 9F3C 8D 70 BA			sta HIDEOUTCHOICES.CHOICE
 25740 9F3F A9 BA			lda >CHOICE
 25741 9F41 8D 71 BA			sta HIDEOUTCHOICES.CHOICE+1
 25742 9F44 20 1B 5E			jsr HIDEOUTCHOICES
 25743 9F47 AD 72 BA			lda HIDEOUTCHOICES.RESULT
 25744 9F4A 8D EF BA			sta OUTCOME
 25745 9F4D 4C C1 9F			jmp a_0017
 25746 9F50			l_61AD
 25747 9F50 C9 0B			cmp #$0B
 25748 9F52 D0 16			jne l_61BB
 25749
 25750 				; optimize OK (main.pas), line = 270
 25751
 25752 9F54 A9 EE			lda <CHOICE
 25753 9F56 8D 67 BA			sta GAMBLINGCHOICES.CHOICE
 25754 9F59 A9 BA			lda >CHOICE
 25755 9F5B 8D 68 BA			sta GAMBLINGCHOICES.CHOICE+1
 25756 9F5E 20 3A 5C			jsr GAMBLINGCHOICES
 25757 9F61 AD 69 BA			lda GAMBLINGCHOICES.RESULT
 25758 9F64 8D EF BA			sta OUTCOME
 25759 9F67 4C C1 9F			jmp a_0017
 25760 9F6A			l_61BB
 25761 9F6A C9 0C			cmp #$0C
 25762 9F6C D0 16			jne l_61C9
 25763
 25764 				; optimize OK (main.pas), line = 271
 25765
 25766 9F6E A9 EE			lda <CHOICE
 25767 9F70 8D AE BA			sta SUBWAYCHOICES.CHOICE
 25768 9F73 A9 BA			lda >CHOICE
 25769 9F75 8D AF BA			sta SUBWAYCHOICES.CHOICE+1
 25770 9F78 20 EB 7D			jsr SUBWAYCHOICES
 25771 9F7B AD B0 BA			lda SUBWAYCHOICES.RESULT
 25772 9F7E 8D EF BA			sta OUTCOME
 25773 9F81 4C C1 9F			jmp a_0017
 25774 9F84			l_61C9
 25775 9F84 C9 0D			cmp #$0D
 25776 9F86 D0 16			jne l_61D7
 25777
 25778 				; optimize OK (main.pas), line = 272
 25779
 25780 9F88 A9 EE			lda <CHOICE
 25781 9F8A 8D F0 B9			sta ARMSDEALERCHOICES.CHOICE
 25782 9F8D A9 BA			lda >CHOICE
 25783 9F8F 8D F1 B9			sta ARMSDEALERCHOICES.CHOICE+1
 25784 9F92 20 39 4B			jsr ARMSDEALERCHOICES
 25785 9F95 AD F2 B9			lda ARMSDEALERCHOICES.RESULT
 25786 9F98 8D EF BA			sta OUTCOME
 25787 9F9B 4C C1 9F			jmp a_0017
 25788 9F9E			l_61D7
 25789 9F9E C9 18			cmp #$18
 25790 9FA0 D0 16			jne l_61E5
 25791
 25792 				; optimize OK (main.pas), line = 273
 25793
 25794 9FA2 A9 EE			lda <CHOICE
 25795 9FA4 8D C0 BA			sta MAJORCHOICES.CHOICE
 25796 9FA7 A9 BA			lda >CHOICE
 25797 9FA9 8D C1 BA			sta MAJORCHOICES.CHOICE+1
 25798 9FAC 20 2C 82			jsr MAJORCHOICES
 25799 9FAF AD C2 BA			lda MAJORCHOICES.RESULT
 25800 9FB2 8D EF BA			sta OUTCOME
 25801 9FB5 4C C1 9F			jmp a_0017
 25802 9FB8			l_61E5
 25803 9FB8 C9 0F			cmp #$0F
 25804 9FBA D0 05			jne l_61F3
 25805
 25806 				; optimize OK (main.pas), line = 274
 25807
 25808 9FBC A9 0F			lda #$0F
 25809 9FBE 8D EF BA			sta OUTCOME
 25810 9FC1			l_61F3
 25811 9FC1			a_0017
 25812
 25813 				; optimize OK (main.pas), line = 277
 25814
 25815 9FC1 A9 00			lda #$00
 25816 9FC3 8D 77 B0			sta MAPRELOADED
 25817
 25818 				; optimize OK (main.pas), line = 278
 25819
 25820 9FC6 AD AE B8			lda CURRENTLOCATION
 25821 9FC9 8D EC B9			sta LASTLOCATION
 25822
 25823 				; optimize OK (main.pas), line = 279
 25824
 25825 9FCC AD EF BA			lda OUTCOME
 25826 9FCF 8D AE B8			sta CURRENTLOCATION
 25827
 25828 				; optimize OK (main.pas), line = 282
 25829
 25830 9FD2 AD 45 E4			lda DIDFIGHT
 25831 9FD5 C9 01			cmp #$01
 25832 9FD7 D0 26			jne l_622C
 25833
 25834 				; optimize FAIL ('LOADMAP', main.pas), line = 283
 25835
 25836 9FD9 20 2A 89			jsr LOADMAP
 25837
 25838 				; optimize FAIL ('ENABLESPRITES', main.pas), line = 284
 25839
 25840 9FDC 20 DA 39			jsr ENABLESPRITES
 25841
 25842 				; optimize OK (main.pas), line = 285
 25843
 25844 9FDF A9 00			lda #$00
 25845 9FE1 8D 45 E4			sta DIDFIGHT
 25846
 25847 				; optimize OK (main.pas), line = 286
 25848
 25849 9FE4 AD BC EA			lda OLDMAPPOS_X
 25850 9FE7 8D BA EA			sta MAPPOS_X
 25851
 25852 				; optimize OK (main.pas), line = 287
 25853
 25854 9FEA AD BD EA			lda OLDMAPPOS_Y
 25855 9FED 8D BB EA			sta MAPPOS_Y
 25856
 25857 				; optimize OK (main.pas), line = 288
 25858
 25859 9FF0 AD BE EA			lda OLDPLAYERPOS_X
 25860 9FF3 8D B8 EA			sta PLAYERPOS_X
 25861
 25862 				; optimize OK (main.pas), line = 289
 25863
 25864 9FF6 AD BF EA			lda OLDPLAYERPOS_Y
 25865 9FF9 8D B9 EA			sta PLAYERPOS_Y
 25866
 25867 				; optimize FAIL ('PRINTMAPSTATUS', main.pas), line = 290
 25868
 25869 9FFC 20 23 84			jsr PRINTMAPSTATUS
 25870 9FFF			l_622C
 25871 9FFF			l_6026
 25872
 25873 				; optimize OK (main.pas), line = 210
 25874
 25875 9FFF AC 1A E4			ldy CURRENTPLAYER
 25876 A002 B9 30 E0			lda adr.PLSTEPS,y
 25877 A005 30 02			smi
 25878 A007 D0 03			bne @+
 25879 A009 4C 16 A0			jmp l_6027w
 25880 				@
 25881 A00C AD AE B8			lda CURRENTLOCATION
 25882 A00F C9 11			cmp #$11
 25883 A011 F0 03			jeq l_6027w
 25884 				@
 25885 A013 4C 73 9D			jmp l_6027
 25886 A016			l_6027w
 25887 A016			b_6027
 25888
 25889 				; optimize OK (main.pas), line = 295
 25890
 25891 A016 AC 1A E4			ldy CURRENTPLAYER
 25892 A019 AD BA EA			lda MAPPOS_X
 25893 A01C 99 34 E0			sta adr.PLMAPPOSX,y
 25894
 25895 				; optimize OK (main.pas), line = 296
 25896
 25897 A01F AD BB EA			lda MAPPOS_Y
 25898 A022 99 38 E0			sta adr.PLMAPPOSY,y
 25899
 25900 				; optimize OK (main.pas), line = 297
 25901
 25902 A025 AD 20 E4			lda CURRENTMAP
 25903 A028 99 3C E0			sta adr.PLCURRENTMAP,y
 25904
 25905 				; optimize FAIL ('NEXTPLAYER', main.pas), line = 299
 25906
 25907 A02B 20 9B 29			jsr NEXTPLAYER
 25908
 25909 				; optimize OK (main.pas), line = 301
 25910
 25911 A02E A0 01			ldy #1
 25912 A030 AD 54 E1			lda GAMELENGTH
 25913 A033 CD 53 E1			cmp CURRENTYEAR
 25914 A036 90 01			bcc @+
 25915 A038 88				dey
 25916 				@
 25917 A039 98				tya
 25918 A03A 8D 19 E4			sta GAMEENDS
 25919
 25920 				; optimize OK (main.pas), line = 302
 25921
 25922 A03D A9 00			lda #$00
 25923 A03F 8D ED BA			sta K
 25924 A042 AC 00 E0			ldy NPLAYERS
 25925 A045 88				dey
 25926 A046 8C 4A A0			sty @FORTMP_629F_0
 25927
 25928 A049			l_62A2
 25929 				; --- ForToDoCondition
 25930 A049 A9 00			lda @FORTMP_629F_0::#$00
 25931 A04B CD ED BA			cmp K
 25932 A04E 90 20			jcc l_62B0
 25933
 25934 				; optimize OK (main.pas), line = 303
 25935
 25936 A050 AC ED BA			ldy K
 25937 A053 B9 78 E0			lda adr.PLRANK,y
 25938 A056 C9 0B			cmp #$0B
 25939 A058 D0 11			jne l_62E3
 25940 A05A B9 08 E0			lda adr.PLMONEYTRANSPORTER,y
 25941 A05D C9 01			cmp #$01
 25942 A05F D0 0A			jne l_62E3
 25943 A061 B9 0C E0			lda adr.PLKILLEDMAJOR,y
 25944 A064 C9 01			cmp #$01
 25945 A066 D0 03			jne l_62E3
 25946 A068 EE 19 E4			inc GAMEENDS
 25947 A06B			l_62E3
 25948
 25949 				; --- ForToDoEpilog
 25950 A06B EE ED BA			inc K
 25951 A06E D0 D9			jne l_62A2
 25952 A070			l_62B0
 25953
 25954 				; optimize OK (main.pas), line = 304
 25955
 25956 A070 A0 01			ldy #1
 25957 A072 AD 19 E4			lda GAMEENDS
 25958 A075 C9 01			cmp #$01
 25959 A077 F0 01			beq @+
 25960 A079 88				dey
 25961 				@
 25962 A07A 98				tya
 25963 A07B D0 03			bne *+5
 25964 A07D			c_5F23
 25965 A07D 4C A2 9C			jmp l_5F23
 25966
 25967 				; optimize FAIL ('ENABLECONSOLE', main.pas), line = 307
 25968
 25969 A080 20 97 25			jsr ENABLECONSOLE
 25970
 25971 				; optimize FAIL ('B_CRT.CRT_CLEAR_04E8', main.pas), line = 308
 25972
 25973 A083 20 9D 1B			jsr B_CRT.CRT_CLEAR_04E8
 25974
 25975 				; optimize OK (main.pas), line = 310
 25976
 25977 A086 A9 00			lda #$00
 25978 A088 8D B8 EA			sta PLAYERPOS_X
 25979
 25980 				; optimize OK (main.pas), line = 311
 25981
 25982 A08B 8D ED BA			sta K
 25983 A08E AC 00 E0			ldy NPLAYERS
 25984 A091 88				dey
 25985 A092 8C 96 A0			sty @FORTMP_6314_0
 25986
 25987 A095			l_6317
 25988 				; --- ForToDoCondition
 25989 A095 A9 00			lda @FORTMP_6314_0::#$00
 25990 A097 CD ED BA			cmp K
 25991 A09A 90 37			jcc l_6325
 25992
 25993 				; optimize OK (main.pas), line = 313
 25994
 25995 A09C AC ED BA			ldy K
 25996 A09F B9 78 E0			lda adr.PLRANK,y
 25997 A0A2 C9 0B			cmp #$0B
 25998 A0A4 D0 13			jne l_6358
 25999 A0A6 B9 08 E0			lda adr.PLMONEYTRANSPORTER,y
 26000 A0A9 C9 01			cmp #$01
 26001 A0AB D0 0C			jne l_6358
 26002 A0AD B9 0C E0			lda adr.PLKILLEDMAJOR,y
 26003 A0B0 C9 01			cmp #$01
 26004 A0B2 D0 05			jne l_6358
 26005
 26006 				; optimize OK (main.pas), line = 314
 26007
 26008 A0B4 A9 00			lda #$00
 26009 A0B6 4C BE A0			jmp l_6369
 26010 A0B9			l_6358
 26011
 26012 				; optimize OK (main.pas), line = 315
 26013
 26014 A0B9 AC ED BA			ldy K
 26015 A0BC A9 01			lda #$01
 26016 A0BE			l_6369
 26017 A0BE 99 3C E0			sta adr.PLCURRENTMAP,y
 26018
 26019 				; optimize OK (main.pas), line = 316
 26020
 26021 A0C1 AC ED BA			ldy K
 26022 A0C4 AD B8 EA			lda PLAYERPOS_X
 26023 A0C7 18 79 3C E0			add adr.PLCURRENTMAP,y
 26024 A0CB 8D B8 EA			sta PLAYERPOS_X
 26025
 26026 				; --- ForToDoEpilog
 26027 A0CE EE ED BA			inc K
 26028 A0D1 D0 C2			jne l_6317
 26029 A0D3			l_6325
 26030
 26031 				; optimize OK (main.pas), line = 319
 26032
 26033 A0D3 A9 13			lda #$13
 26034 A0D5 20 B3 26			jsr LOADLOCATION
 26035
 26036 				; optimize OK (main.pas), line = 321
 26037
 26038 A0D8 AD B8 EA			lda PLAYERPOS_X
 26039 A0DB C9 01			cmp #$01
 26040 A0DD F0 03 4C 68 A1		jne l_6398
 26041
 26042 				; optimize OK (main.pas), line = 322
 26043
 26044 A0E2 A9 00			lda #$00
 26045 A0E4 8D ED BA			sta K
 26046 A0E7 AC 00 E0			ldy NPLAYERS
 26047 A0EA 88				dey
 26048 A0EB 8C EF A0			sty @FORTMP_63A5_0
 26049
 26050 A0EE			l_63A8
 26051 				; --- ForToDoCondition
 26052 A0EE A9 00			lda @FORTMP_63A5_0::#$00
 26053 A0F0 CD ED BA			cmp K
 26054 A0F3 90 70			jcc l_63B6
 26055
 26056 				; optimize OK (main.pas), line = 324
 26057
 26058 A0F5 AC ED BA			ldy K
 26059 A0F8 B9 3C E0			lda adr.PLCURRENTMAP,y
 26060 A0FB C9 01			cmp #$01
 26061 A0FD D0 61			jne l_63CB
 26062
 26063 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 326
 26064
 26065 A0FF E8				inx
 26066 A100 AD ED BA 95 94		mva K :STACKORIGIN,x
 26067 A105 E8				inx
 26068 A106 A9 03 95 94			mva #$03 :STACKORIGIN,x
 26069 A10A 20 A4 0F			jsr shrAL_CL.BYTE
 26070 A10D CA				dex
 26071 A10E B5 94			lda :STACKORIGIN,x
 26072 A110 0A				asl @
 26073 A111 A8				tay
 26074 A112 B9 E0 B0			lda adr.GANGSTERNAMES,y
 26075 A115 95 94			sta :STACKORIGIN,x
 26076 A117 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 26077 A11A 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 26078 A11C E8				inx
 26079 A11D A9 05 95 94			mva #$05 :STACKORIGIN,x
 26080 A121 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26081
 26082 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 327
 26083
 26084 A124 E8				inx
 26085 A125 AD AC A3 95 94		mva LOC_STRING_35 :STACKORIGIN,x
 26086 A12A AD AD A3 95 A4		mva LOC_STRING_35+1 :STACKORIGIN+STACKWIDTH,x
 26087 A12F E8				inx
 26088 A130 A9 07 95 94			mva #$07 :STACKORIGIN,x
 26089 A134 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26090
 26091 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 328
 26092
 26093 A137 E8				inx
 26094 A138 AD AE A3 95 94		mva LOC_STRING_36 :STACKORIGIN,x
 26095 A13D AD AF A3 95 A4		mva LOC_STRING_36+1 :STACKORIGIN+STACKWIDTH,x
 26096 A142 E8				inx
 26097 A143 A9 08 95 94			mva #$08 :STACKORIGIN,x
 26098 A147 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26099
 26100 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 329
 26101
 26102 A14A E8				inx
 26103 A14B AD B0 A3 95 94		mva LOC_STRING_37 :STACKORIGIN,x
 26104 A150 AD B1 A3 95 A4		mva LOC_STRING_37+1 :STACKORIGIN+STACKWIDTH,x
 26105 A155 E8				inx
 26106 A156 A9 09 95 94			mva #$09 :STACKORIGIN,x
 26107 A15A 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26108 A15D 4C 65 A1			jmp b_63A8					; break
 26109 A160			l_63CB
 26110
 26111 				; --- ForToDoEpilog
 26112 A160 EE ED BA			inc K
 26113 A163 D0 89			jne l_63A8
 26114 A165			l_63B6
 26115 A165			b_63A8
 26116 A165 4C F1 A1			jmp l_63F3
 26117 A168			l_6398
 26118
 26119 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 336
 26120
 26121 A168 E8				inx
 26122 A169 AD B2 A3 95 94		mva LOC_STRING_38 :STACKORIGIN,x
 26123 A16E AD B3 A3 95 A4		mva LOC_STRING_38+1 :STACKORIGIN+STACKWIDTH,x
 26124 A173 E8				inx
 26125 A174 A9 05 95 94			mva #$05 :STACKORIGIN,x
 26126 A178 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26127
 26128 				; optimize OK (main.pas), line = 337
 26129
 26130 A17B A9 00			lda #$00
 26131 A17D 8D EE BA			sta CHOICE
 26132
 26133 				; optimize OK (main.pas), line = 338
 26134
 26135 A180 8D ED BA			sta K
 26136 A183 AC 00 E0			ldy NPLAYERS
 26137 A186 88				dey
 26138 A187 8C 8B A1			sty @FORTMP_6407_0
 26139
 26140 A18A			l_640A
 26141 				; --- ForToDoCondition
 26142 A18A A9 00			lda @FORTMP_6407_0::#$00
 26143 A18C CD ED BA			cmp K
 26144 A18F 90 40			jcc l_6418
 26145
 26146 				; optimize OK (main.pas), line = 340
 26147
 26148 A191 AC ED BA			ldy K
 26149 A194 B9 3C E0			lda adr.PLCURRENTMAP,y
 26150 A197 C9 01			cmp #$01
 26151 A199 D0 31			jne l_642D
 26152
 26153 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 342
 26154
 26155 A19B E8				inx
 26156 A19C AD ED BA 95 94		mva K :STACKORIGIN,x
 26157 A1A1 E8				inx
 26158 A1A2 A9 03 95 94			mva #$03 :STACKORIGIN,x
 26159 A1A6 20 87 0F			jsr shlEAX_CL.BYTE
 26160 A1A9 CA				dex
 26161 A1AA B5 A4			lda :STACKORIGIN+STACKWIDTH,x
 26162 A1AC 16 94			asl :STACKORIGIN,x
 26163 A1AE 2A				rol @
 26164 A1AF 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 26165 A1B1 B4 94			ldy :STACKORIGIN,x
 26166 A1B3 B9 E0 B0			lda adr.GANGSTERNAMES,y
 26167 A1B6 95 94			sta :STACKORIGIN,x
 26168 A1B8 B9 E1 B0			lda adr.GANGSTERNAMES+1,y
 26169 A1BB 95 A4			sta :STACKORIGIN+STACKWIDTH,x
 26170 A1BD E8				inx
 26171 A1BE A9 07			lda #$07
 26172 A1C0 18 6D EE BA			add CHOICE
 26173 A1C4 95 94			sta :STACKORIGIN,x
 26174 A1C6 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26175
 26176 				; optimize OK (main.pas), line = 343
 26177
 26178 A1C9 EE EE BA			inc CHOICE
 26179 A1CC			l_642D
 26180
 26181 				; --- ForToDoEpilog
 26182 A1CC EE ED BA			inc K
 26183 A1CF D0 B9			jne l_640A
 26184 A1D1			l_6418
 26185
 26186 				; optimize FAIL ('B_CRT.CRT_WRITECENTERED_06F6', main.pas), line = 346
 26187
 26188 A1D1 E8				inx
 26189 A1D2 AD B4 A3 95 94		mva LOC_STRING_39 :STACKORIGIN,x
 26190 A1D7 AD B5 A3 95 A4		mva LOC_STRING_39+1 :STACKORIGIN+STACKWIDTH,x
 26191 A1DC E8				inx
 26192 A1DD A9 07			lda #$07
 26193 A1DF 18 6D EE BA			add CHOICE
 26194 A1E3 95 94			sta :STACKORIGIN,x
 26195 A1E5 E8				inx
 26196 A1E6 A9 02 95 94			mva #$02 :STACKORIGIN,x
 26197 A1EA 20 5D 0F			jsr addAL_CL
 26198 A1ED CA				dex
 26199 A1EE 20 B0 1E			jsr B_CRT.CRT_WRITECENTERED_06F6
 26200 A1F1			l_63F3
 26201
 26202 				; optimize FAIL ('WAITFORKEY', main.pas), line = 348
 26203
 26204 A1F1 20 2E 21			jsr WAITFORKEY
 26205
 26206 				; optimize FAIL ('B_SYSTEM.DISABLEDLI', main.pas), line = 350
 26207
 26208 A1F4 20 4C 1A			jsr B_SYSTEM.DISABLEDLI
 26209
 26210 				; optimize OK (main.pas), line = 351
 26211
 26212 A1F7 A9 40			lda #$40
 26213 A1F9 8D 02 D4			sta ATARI.DLISTL
 26214 A1FC A9 FC			lda #$FC
 26215 A1FE 8D 03 D4			sta ATARI.DLISTL+1
 26216
 26217 				; optimize OK (main.pas), line = 352
 26218
 26219 A201 A9 0A			lda #$0A
 26220 A203 20 60 25			jsr WAITFRAMES
 26221
 26222 				; optimize OK (main.pas), line = 354
 26223
 26224 A206 AD 02 A3			lda FINALFNAME
 26225 A209 8D B4 A5			sta XBAPLIB.XBUNAPL.FNAM
 26226 A20C AD 03 A3			lda FINALFNAME+1
 26227 A20F 8D B5 A5			sta XBAPLIB.XBUNAPL.FNAM+1
 26228 A212 A9 FA			lda #$FA
 26229 A214 8D B6 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER
 26230 A217 A9 1F			lda #$1F
 26231 A219 8D B7 A5			sta XBAPLIB.XBUNAPL.OUTPUTPOINTER+1
 26232 A21C 20 65 17			jsr XBAPLIB.XBUNAPL
 26233
 26234 				; -------------------  ASM Block 00000182  -------------------
 26235
 26236 A21F			    lpend:
 26237 A21F 20 00 50		        jsr $5000;
 26238 A222 4C 1F A2		        jmp lpend
 26239 				    
 26240 				; ------------------------------------------------------------
 26241
 26242 = C800			TXT_ADDRESS	= $C800
 26243 = CC00			MAINFONT_ADR	= $CC00
 26244 = D800			PMG_BASE_ADR	= $D800
 26245 = F000			MAP_FNT_ADDRESS	= $F000
 26246 = F400			MAP_SCR_ADDRESS	= $F400
 26247 = F800			LOC_MAP_ADR	= $F800
 26248 = FC00			DL_CONSOLE_ADR	= $FC00
 26249 = FC40			DL_BLACK_CONSOLE_ADR	= $FC40
 26250 = FC80			DL_MAP_ADR	= $FC80
 26251 = 1FFA			XEX_ADDRESS	= $1FFA
 26252 = E000			VARADRESSE	= $E000
 26253 = E000			NPLAYERS	= $E000
 26254 = E001			LASTLOCATIONSTRINGS	= $E001
 26255 = E004			adr.PLSTUFF	= $E004
 26256 A225			.var PLSTUFF	= adr.PLSTUFF .word
 26257 = E008			adr.PLMONEYTRANSPORTER	= $E008
 26258 A225			.var PLMONEYTRANSPORTER	= adr.PLMONEYTRANSPORTER .word
 26259 = E00C			adr.PLKILLEDMAJOR	= $E00C
 26260 A225			.var PLKILLEDMAJOR	= adr.PLKILLEDMAJOR .word
 26261 = E010			adr.PLMONEY	= $E010
 26262 A225			.var PLMONEY	= adr.PLMONEY .word
 26263 = E020			adr.PLFAKEMONEY	= $E020
 26264 A225			.var PLFAKEMONEY	= adr.PLFAKEMONEY .word
 26265 = E024			adr.PLALCOHOL	= $E024
 26266 A225			.var PLALCOHOL	= adr.PLALCOHOL .word
 26267 = E028			adr.PLFORGEDID	= $E028
 26268 A225			.var PLFORGEDID	= adr.PLFORGEDID .word
 26269 = E02C			adr.PLCAR	= $E02C
 26270 A225			.var PLCAR	= adr.PLCAR .word
 26271 = E030			adr.PLSTEPS	= $E030
 26272 A225			.var PLSTEPS	= adr.PLSTEPS .word
 26273 = E034			adr.PLMAPPOSX	= $E034
 26274 A225			.var PLMAPPOSX	= adr.PLMAPPOSX .word
 26275 = E038			adr.PLMAPPOSY	= $E038
 26276 A225			.var PLMAPPOSY	= adr.PLMAPPOSY .word
 26277 = E03C			adr.PLCURRENTMAP	= $E03C
 26278 A225			.var PLCURRENTMAP	= adr.PLCURRENTMAP .word
 26279 = E040			adr.PLOPPORTUNITY	= $E040
 26280 A225			.var PLOPPORTUNITY	= adr.PLOPPORTUNITY .word
 26281 = E044			adr.PLLOAN	= $E044
 26282 A225			.var PLLOAN	= adr.PLLOAN .word
 26283 = E04C			adr.PLLOANTIME	= $E04C
 26284 A225			.var PLLOANTIME	= adr.PLLOANTIME .word
 26285 = E050			adr.PLLOANSHARK	= $E050
 26286 A225			.var PLLOANSHARK	= adr.PLLOANSHARK .word
 26287 = E054			adr.PLRENTMONTHS	= $E054
 26288 A225			.var PLRENTMONTHS	= adr.PLRENTMONTHS .word
 26289 = E058			adr.PLRENTCOST	= $E058
 26290 A225			.var PLRENTCOST	= adr.PLRENTCOST .word
 26291 = E05C			adr.PLBRIBE	= $E05C
 26292 A225			.var PLBRIBE	= adr.PLBRIBE .word
 26293 = E060			adr.PLJOB	= $E060
 26294 A225			.var PLJOB	= adr.PLJOB .word
 26295 = E064			adr.PLJOBWAGE	= $E064
 26296 A225			.var PLJOBWAGE	= adr.PLJOBWAGE .word
 26297 = E06C			adr.PLJOBLOCATION	= $E06C
 26298 A225			.var PLJOBLOCATION	= adr.PLJOBLOCATION .word
 26299 = E074			adr.PLPRISON	= $E074
 26300 A225			.var PLPRISON	= adr.PLPRISON .word
 26301 = E078			adr.PLRANK	= $E078
 26302 A225			.var PLRANK	= adr.PLRANK .word
 26303 = E07C			adr.PLPOINTS	= $E07C
 26304 A225			.var PLPOINTS	= adr.PLPOINTS .word
 26305 = E080			adr.PLNEWPOINTS	= $E080
 26306 A225			.var PLNEWPOINTS	= adr.PLNEWPOINTS .word
 26307 = E084			adr.PLLOANINVEST	= $E084
 26308 A225			.var PLLOANINVEST	= adr.PLLOANINVEST .word
 26309 = E08C			adr.PLFREED	= $E08C
 26310 A225			.var PLFREED	= adr.PLFREED .word
 26311 = E700			E7ADR	= $E700
 26312 = E700			adr.CARPRICES	= $E700
 26313 A225			.var CARPRICES	= adr.CARPRICES .word
 26314 = E706			adr.CARCARGO	= $E706
 26315 A225			.var CARCARGO	= adr.CARCARGO .word
 26316 = E70C			adr.CARRANGE	= $E70C
 26317 A225			.var CARRANGE	= adr.CARRANGE .word
 26318 = E712			adr.WEAPONPRICES	= $E712
 26319 A225			.var WEAPONPRICES	= adr.WEAPONPRICES .word
 26320 = E724			adr.WEAPONREACH	= $E724
 26321 A225			.var WEAPONREACH	= adr.WEAPONREACH .word
 26322 = E72D			adr.WEAPONPRECISION	= $E72D
 26323 A225			.var WEAPONPRECISION	= adr.WEAPONPRECISION .word
 26324 = E736			adr.WEAPONEFFECT	= $E736
 26325 A225			.var WEAPONEFFECT	= adr.WEAPONEFFECT .word
 26326 = E73F			adr.WEAPONSOUND	= $E73F
 26327 A225			.var WEAPONSOUND	= adr.WEAPONSOUND .word
 26328 = E748			adr.FNTNAME	= $E748
 26329 A225			.var FNTNAME	= adr.FNTNAME .word
 26330 = E758			adr.WANTED_M_MFNAME	= $E758
 26331 A225			.var WANTED_M_MFNAME	= adr.WANTED_M_MFNAME .word
 26332 = E768			adr.WANTED_M_MSNAME	= $E768
 26333 A225			.var WANTED_M_MSNAME	= adr.WANTED_M_MSNAME .word
 26334 = E778			adr.WANTED_F_MFNAME	= $E778
 26335 A225			.var WANTED_F_MFNAME	= adr.WANTED_F_MFNAME .word
 26336 = E788			adr.WANTED_F_MSNAME	= $E788
 26337 A225			.var WANTED_F_MSNAME	= adr.WANTED_F_MSNAME .word
 26338 = E798			adr.FIGHTSCRNAME	= $E798
 26339 A225			.var FIGHTSCRNAME	= adr.FIGHTSCRNAME .word
 26340 = E7A8			adr.FIGHTFNTNAME	= $E7A8
 26341 A225			.var FIGHTFNTNAME	= adr.FIGHTFNTNAME .word
 26342 = E7B8			adr.GANGSTERFILENAME	= $E7B8
 26343 A225			.var GANGSTERFILENAME	= adr.GANGSTERFILENAME .word
 26344 = E7C8			adr.LOCABANKFNAME	= $E7C8
 26345 A225			.var LOCABANKFNAME	= adr.LOCABANKFNAME .word
 26346 = E7D8			adr.LOCAFORGFNAME	= $E7D8
 26347 A225			.var LOCAFORGFNAME	= adr.LOCAFORGFNAME .word
 26348 = E7E8			adr.LOCAMONYFNAME	= $E7E8
 26349 A225			.var LOCAMONYFNAME	= adr.LOCAMONYFNAME .word
 26350 = E7F8			adr.LOCALOANFNAME	= $E7F8
 26351 A225			.var LOCALOANFNAME	= adr.LOCALOANFNAME .word
 26352 = E808			adr.LOCAPOLIFNAME	= $E808
 26353 A225			.var LOCAPOLIFNAME	= adr.LOCAPOLIFNAME .word
 26354 = E818			adr.LOCACARSFNAME	= $E818
 26355 A225			.var LOCACARSFNAME	= adr.LOCACARSFNAME .word
 26356 = E828			adr.LOCAPUBBFNAME	= $E828
 26357 A225			.var LOCAPUBBFNAME	= adr.LOCAPUBBFNAME .word
 26358 = E838			adr.LOCAPUBCFNAME	= $E838
 26359 A225			.var LOCAPUBCFNAME	= adr.LOCAPUBCFNAME .word
 26360 = E848			adr.LOCASTORFNAME	= $E848
 26361 A225			.var LOCASTORFNAME	= adr.LOCASTORFNAME .word
 26362 = E858			adr.LOCAHIDEFNAME	= $E858
 26363 A225			.var LOCAHIDEFNAME	= adr.LOCAHIDEFNAME .word
 26364 = E868			adr.LOCAGAMBFNAME	= $E868
 26365 A225			.var LOCAGAMBFNAME	= adr.LOCAGAMBFNAME .word
 26366 = E878			adr.LOCASUBWFNAME	= $E878
 26367 A225			.var LOCASUBWFNAME	= adr.LOCASUBWFNAME .word
 26368 = E888			adr.LOCAARMSFNAME	= $E888
 26369 A225			.var LOCAARMSFNAME	= adr.LOCAARMSFNAME .word
 26370 = E898			adr.LOCAMAINFNAME	= $E898
 26371 A225			.var LOCAMAINFNAME	= adr.LOCAMAINFNAME .word
 26372 = E8A8			adr.LOCAJOBBFNAME	= $E8A8
 26373 A225			.var LOCAJOBBFNAME	= adr.LOCAJOBBFNAME .word
 26374 = E8B8			adr.LOCMAJOFNAME	= $E8B8
 26375 A225			.var LOCMAJOFNAME	= adr.LOCMAJOFNAME .word
 26376 = E8C8			adr.LOCACOURFNAME	= $E8C8
 26377 A225			.var LOCACOURFNAME	= adr.LOCACOURFNAME .word
 26378 = E8D8			adr.LOCACAUGFNAME	= $E8D8
 26379 A225			.var LOCACAUGFNAME	= adr.LOCACAUGFNAME .word
 26380 = E8E8			adr.LOCAROADFNAME	= $E8E8
 26381 A225			.var LOCAROADFNAME	= adr.LOCAROADFNAME .word
 26382 = E8F8			adr.LOCAUPDTFNAME	= $E8F8
 26383 A225			.var LOCAUPDTFNAME	= adr.LOCAUPDTFNAME .word
 26384 = E908			adr.LOCASETUFNAME	= $E908
 26385 A225			.var LOCASETUFNAME	= adr.LOCASETUFNAME .word
 26386 = E918			adr.RANK_1	= $E918
 26387 A225			.var RANK_1	= adr.RANK_1 .word
 26388 = E928			adr.RANK_2	= $E928
 26389 A225			.var RANK_2	= adr.RANK_2 .word
 26390 = E938			adr.RANK_3	= $E938
 26391 A225			.var RANK_3	= adr.RANK_3 .word
 26392 = E948			adr.RANK_4	= $E948
 26393 A225			.var RANK_4	= adr.RANK_4 .word
 26394 = E958			adr.RANK_5	= $E958
 26395 A225			.var RANK_5	= adr.RANK_5 .word
 26396 = E968			adr.RANK_6	= $E968
 26397 A225			.var RANK_6	= adr.RANK_6 .word
 26398 = E978			adr.RANK_7	= $E978
 26399 A225			.var RANK_7	= adr.RANK_7 .word
 26400 = E988			adr.RANK_8	= $E988
 26401 A225			.var RANK_8	= adr.RANK_8 .word
 26402 = E998			adr.RANK_9	= $E998
 26403 A225			.var RANK_9	= adr.RANK_9 .word
 26404 = E9A8			adr.RANK_10	= $E9A8
 26405 A225			.var RANK_10	= adr.RANK_10 .word
 26406 = E9B8			adr.RANK_11	= $E9B8
 26407 A225			.var RANK_11	= adr.RANK_11 .word
 26408 = E9C8			adr.WEAPONNAME_1	= $E9C8
 26409 A225			.var WEAPONNAME_1	= adr.WEAPONNAME_1 .word
 26410 = E9D8			adr.WEAPONNAME_2	= $E9D8
 26411 A225			.var WEAPONNAME_2	= adr.WEAPONNAME_2 .word
 26412 = E9E8			adr.WEAPONNAME_3	= $E9E8
 26413 A225			.var WEAPONNAME_3	= adr.WEAPONNAME_3 .word
 26414 = E9F8			adr.WEAPONNAME_4	= $E9F8
 26415 A225			.var WEAPONNAME_4	= adr.WEAPONNAME_4 .word
 26416 = EA08			adr.WEAPONNAME_5	= $EA08
 26417 A225			.var WEAPONNAME_5	= adr.WEAPONNAME_5 .word
 26418 = EA18			adr.WEAPONNAME_6	= $EA18
 26419 A225			.var WEAPONNAME_6	= adr.WEAPONNAME_6 .word
 26420 = EA28			adr.WEAPONNAME_7	= $EA28
 26421 A225			.var WEAPONNAME_7	= adr.WEAPONNAME_7 .word
 26422 = EA38			adr.WEAPONNAME_8	= $EA38
 26423 A225			.var WEAPONNAME_8	= adr.WEAPONNAME_8 .word
 26424 = EA48			adr.WEAPONNAME_9	= $EA48
 26425 A225			.var WEAPONNAME_9	= adr.WEAPONNAME_9 .word
 26426 = EA58			adr.CARNAMES_1	= $EA58
 26427 A225			.var CARNAMES_1	= adr.CARNAMES_1 .word
 26428 = EA68			adr.CARNAMES_2	= $EA68
 26429 A225			.var CARNAMES_2	= adr.CARNAMES_2 .word
 26430 = EA78			adr.CARNAMES_3	= $EA78
 26431 A225			.var CARNAMES_3	= adr.CARNAMES_3 .word
 26432 = EA88			adr.CARNAMES_4	= $EA88
 26433 A225			.var CARNAMES_4	= adr.CARNAMES_4 .word
 26434 = EA98			adr.CARNAMES_5	= $EA98
 26435 A225			.var CARNAMES_5	= adr.CARNAMES_5 .word
 26436 = EAA8			adr.CARNAMES_6	= $EAA8
 26437 A225			.var CARNAMES_6	= adr.CARNAMES_6 .word
 26438 = AFE0			adr.RANKNAMES	= [DATAORIGIN+$0B6B] .array [11] .word
 26439 A225			.var RANKNAMES	= adr.RANKNAMES .word
 26440 = AFF6			adr.WEAPONNAMES	= [DATAORIGIN+$0B81] .array [9] .word
 26441 A225			.var WEAPONNAMES	= adr.WEAPONNAMES .word
 26442 = B008			adr.CARNAMES	= [DATAORIGIN+$0B93] .array [6] .word
 26443 A225			.var CARNAMES	= adr.CARNAMES .word
 26444 = EAB8			PLAYERPOS_X	= $EAB8
 26445 = EAB9			PLAYERPOS_Y	= $EAB9
 26446 = EABA			MAPPOS_X	= $EABA
 26447 = EABB			MAPPOS_Y	= $EABB
 26448 = EABC			OLDMAPPOS_X	= $EABC
 26449 = EABD			OLDMAPPOS_Y	= $EABD
 26450 = EABE			OLDPLAYERPOS_X	= $EABE
 26451 = EABF			OLDPLAYERPOS_Y	= $EABF
 26452 = EAC0			adr.FPPOSSTART	= $EAC0
 26453 A225			.var FPPOSSTART	= adr.FPPOSSTART .word
 26454 = EB00			adr.LOCACENTFNAME	= $EB00
 26455 A225			.var LOCACENTFNAME	= adr.LOCACENTFNAME .word
 26456 = B014			adr.E7FNAME	= [DATAORIGIN+$0B9F] .array [33]
 26457 A225			.var E7FNAME	= adr.E7FNAME .word
 26458 = B035			adr.SAVEFNAME	= [DATAORIGIN+$0BC0] .array [33]
 26459 A225			.var SAVEFNAME	= adr.SAVEFNAME .word
 26460 = B056			adr.FINALFNAME	= [DATAORIGIN+$0BE1] .array [33]
 26461 A225			.var FINALFNAME	= adr.FINALFNAME .word
 26462 = B077			MAPRELOADED	= DATAORIGIN+$0C02
 26463 = 0278			STICK	= $0278
 26464 = D012			PCOLR0	= $D012
 26465 = D013			PCOLR1	= $D013
 26466 = D014			PCOLR2	= $D014
 26467 = D015			PCOLR3	= $D015
 26468 = EC00			FP_WINNER	= $EC00
 26469 = EC01			adr.FP_AI	= $EC01
 26470 A225			.var FP_AI	= adr.FP_AI .word
 26471 = EC03			adr.FP_N	= $EC03
 26472 A225			.var FP_N	= adr.FP_N .word
 26473 = EC05			adr.FP_POSW	= $EC05
 26474 A225			.var FP_POSW	= adr.FP_POSW .word
 26475 = EC45			adr.FP_WEAPON	= $EC45
 26476 A225			.var FP_WEAPON	= adr.FP_WEAPON .word
 26477 = EC85			adr.FP_ENERGY	= $EC85
 26478 A225			.var FP_ENERGY	= adr.FP_ENERGY .word
 26479 = ECC5			adr.FP_STRENGTH	= $ECC5
 26480 A225			.var FP_STRENGTH	= adr.FP_STRENGTH .word
 26481 = ED05			adr.FP_BRUTALITY	= $ED05
 26482 A225			.var FP_BRUTALITY	= adr.FP_BRUTALITY .word
 26483 = ED45			adr.FP_SEX	= $ED45
 26484 A225			.var FP_SEX	= adr.FP_SEX .word
 26485 = ED85			adr.FP_GANG_1	= $ED85
 26486 A225			.var FP_GANG_1	= adr.FP_GANG_1 .word
 26487 = ED95			adr.FP_GANG_2	= $ED95
 26488 A225			.var FP_GANG_2	= adr.FP_GANG_2 .word
 26489 = EDA5			adr.FP_NAME_1	= $EDA5
 26490 A225			.var FP_NAME_1	= adr.FP_NAME_1 .word
 26491 = EDB5			adr.FP_NAME_2	= $EDB5
 26492 A225			.var FP_NAME_2	= adr.FP_NAME_2 .word
 26493 = EDC5			adr.FP_NAME_3	= $EDC5
 26494 A225			.var FP_NAME_3	= adr.FP_NAME_3 .word
 26495 = EDD5			adr.FP_NAME_4	= $EDD5
 26496 A225			.var FP_NAME_4	= adr.FP_NAME_4 .word
 26497 = EDE5			adr.FP_NAME_5	= $EDE5
 26498 A225			.var FP_NAME_5	= adr.FP_NAME_5 .word
 26499 = EDF5			adr.FP_NAME_6	= $EDF5
 26500 A225			.var FP_NAME_6	= adr.FP_NAME_6 .word
 26501 = EE05			adr.FP_NAME_7	= $EE05
 26502 A225			.var FP_NAME_7	= adr.FP_NAME_7 .word
 26503 = EE15			adr.FP_NAME_8	= $EE15
 26504 A225			.var FP_NAME_8	= adr.FP_NAME_8 .word
 26505 = EE25			adr.FP_NAME_9	= $EE25
 26506 A225			.var FP_NAME_9	= adr.FP_NAME_9 .word
 26507 = EE35			adr.FP_NAME_10	= $EE35
 26508 A225			.var FP_NAME_10	= adr.FP_NAME_10 .word
 26509 = EE45			adr.FP_NAME_11	= $EE45
 26510 A225			.var FP_NAME_11	= adr.FP_NAME_11 .word
 26511 = EE55			adr.FP_NAME_12	= $EE55
 26512 A225			.var FP_NAME_12	= adr.FP_NAME_12 .word
 26513 = EE65			adr.FP_NAME_13	= $EE65
 26514 A225			.var FP_NAME_13	= adr.FP_NAME_13 .word
 26515 = EE75			adr.FP_NAME_14	= $EE75
 26516 A225			.var FP_NAME_14	= adr.FP_NAME_14 .word
 26517 = EE85			adr.FP_NAME_15	= $EE85
 26518 A225			.var FP_NAME_15	= adr.FP_NAME_15 .word
 26519 = EE95			adr.FP_NAME_16	= $EE95
 26520 A225			.var FP_NAME_16	= adr.FP_NAME_16 .word
 26521 = EEA5			adr.FP_NAME_17	= $EEA5
 26522 A225			.var FP_NAME_17	= adr.FP_NAME_17 .word
 26523 = EEB5			adr.FP_NAME_18	= $EEB5
 26524 A225			.var FP_NAME_18	= adr.FP_NAME_18 .word
 26525 = EEC5			adr.FP_NAME_19	= $EEC5
 26526 A225			.var FP_NAME_19	= adr.FP_NAME_19 .word
 26527 = EED5			adr.FP_NAME_20	= $EED5
 26528 A225			.var FP_NAME_20	= adr.FP_NAME_20 .word
 26529 = EEE5			FP_CURRENTPLAYER	= $EEE5
 26530 = EEE6			FP_CURRENTSITE	= $EEE6
 26531 = EEE7			FP_CURRENTCOMMAND	= $EEE7
 26532 = EEE8			FP_VALIDCMD	= $EEE8
 26533 = EEE9			SHOOT_DIFF	= $EEE9
 26534 = EEEA			SHOOT_START	= $EEEA
 26535 = EEEF			F_CURPOS	= $EEEF
 26536 = 0003			FIGHT_BULLETTIME	= $03
 26537 = 0005			FIGHT_HITTIME	= $05
 26538 = 0005			FIGHT_TEXTTIME	= $05
 26539 = 0005			FIGHT_ROUNDTIME	= $05
 26540 = 0046			FIGHT_DEADTIME	= $46
 26541 = B078			adr.FP_GANG	= [DATAORIGIN+$0C03] .array [2] .word
 26542 A225			.var FP_GANG	= adr.FP_GANG .word
 26543 = B07C			adr.FP_NAME	= [DATAORIGIN+$0C07] .array [32] .word
 26544 A225			.var FP_NAME	= adr.FP_NAME .word
 26545 = BE80			BASEADDRESS	= $BE80
 26546 = BE80			adr.LOC_NAME	= $BE80
 26547 A225			.var LOC_NAME	= adr.LOC_NAME .word
 26548 = BEA8			adr.LOC_SUBLOCATION_NAME_1	= $BEA8
 26549 A225			.var LOC_SUBLOCATION_NAME_1	= adr.LOC_SUBLOCATION_NAME_1 .word
 26550 = BED0			adr.LOC_SUBLOCATION_NAME_2	= $BED0
 26551 A225			.var LOC_SUBLOCATION_NAME_2	= adr.LOC_SUBLOCATION_NAME_2 .word
 26552 = BEF8			adr.LOC_SUBLOCATION_NAME_3	= $BEF8
 26553 A225			.var LOC_SUBLOCATION_NAME_3	= adr.LOC_SUBLOCATION_NAME_3 .word
 26554 = BF20			adr.LOC_SUBLOCATION_NAME_4	= $BF20
 26555 A225			.var LOC_SUBLOCATION_NAME_4	= adr.LOC_SUBLOCATION_NAME_4 .word
 26556 = BF48			adr.LOC_OPTIONS_1	= $BF48
 26557 A225			.var LOC_OPTIONS_1	= adr.LOC_OPTIONS_1 .word
 26558 = BF70			adr.LOC_OPTIONS_2	= $BF70
 26559 A225			.var LOC_OPTIONS_2	= adr.LOC_OPTIONS_2 .word
 26560 = BF98			adr.LOC_OPTIONS_3	= $BF98
 26561 A225			.var LOC_OPTIONS_3	= adr.LOC_OPTIONS_3 .word
 26562 = BFC0			adr.LOC_OPTIONS_4	= $BFC0
 26563 A225			.var LOC_OPTIONS_4	= adr.LOC_OPTIONS_4 .word
 26564 = BFE8			adr.LOC_OPTIONS_5	= $BFE8
 26565 A225			.var LOC_OPTIONS_5	= adr.LOC_OPTIONS_5 .word
 26566 = C010			adr.LOC_OPTIONS_6	= $C010
 26567 A225			.var LOC_OPTIONS_6	= adr.LOC_OPTIONS_6 .word
 26568 = C038			adr.LOC_OPTIONS_7	= $C038
 26569 A225			.var LOC_OPTIONS_7	= adr.LOC_OPTIONS_7 .word
 26570 = C060			adr.LOC_OPTIONS_8	= $C060
 26571 A225			.var LOC_OPTIONS_8	= adr.LOC_OPTIONS_8 .word
 26572 = C088			adr.LOC_OPTIONS_9	= $C088
 26573 A225			.var LOC_OPTIONS_9	= adr.LOC_OPTIONS_9 .word
 26574 = C0B0			adr.LOC_OPTIONS_10	= $C0B0
 26575 A225			.var LOC_OPTIONS_10	= adr.LOC_OPTIONS_10 .word
 26576 = C0D8			adr.LOC_DESCRIPTION_1	= $C0D8
 26577 A225			.var LOC_DESCRIPTION_1	= adr.LOC_DESCRIPTION_1 .word
 26578 = C100			adr.LOC_DESCRIPTION_2	= $C100
 26579 A225			.var LOC_DESCRIPTION_2	= adr.LOC_DESCRIPTION_2 .word
 26580 = C129			LOC_NOPTIONS	= $C129
 26581 = C12A			adr.LOC_MAP_PLACES	= $C12A
 26582 A225			.var LOC_MAP_PLACES	= adr.LOC_MAP_PLACES .word
 26583 = C130			adr.LOC_STRING_1	= $C130
 26584 A225			.var LOC_STRING_1	= adr.LOC_STRING_1 .word
 26585 = C158			adr.LOC_STRING_2	= $C158
 26586 A225			.var LOC_STRING_2	= adr.LOC_STRING_2 .word
 26587 = C180			adr.LOC_STRING_3	= $C180
 26588 A225			.var LOC_STRING_3	= adr.LOC_STRING_3 .word
 26589 = C1A8			adr.LOC_STRING_4	= $C1A8
 26590 A225			.var LOC_STRING_4	= adr.LOC_STRING_4 .word
 26591 = C1D0			adr.LOC_STRING_5	= $C1D0
 26592 A225			.var LOC_STRING_5	= adr.LOC_STRING_5 .word
 26593 = C1F8			adr.LOC_STRING_6	= $C1F8
 26594 A225			.var LOC_STRING_6	= adr.LOC_STRING_6 .word
 26595 = C220			adr.LOC_STRING_7	= $C220
 26596 A225			.var LOC_STRING_7	= adr.LOC_STRING_7 .word
 26597 = C248			adr.LOC_STRING_8	= $C248
 26598 A225			.var LOC_STRING_8	= adr.LOC_STRING_8 .word
 26599 = C270			adr.LOC_STRING_9	= $C270
 26600 A225			.var LOC_STRING_9	= adr.LOC_STRING_9 .word
 26601 = C298			adr.LOC_STRING_10	= $C298
 26602 A225			.var LOC_STRING_10	= adr.LOC_STRING_10 .word
 26603 = C2C0			adr.LOC_STRING_11	= $C2C0
 26604 A225			.var LOC_STRING_11	= adr.LOC_STRING_11 .word
 26605 = C2E8			adr.LOC_STRING_12	= $C2E8
 26606 A225			.var LOC_STRING_12	= adr.LOC_STRING_12 .word
 26607 = C310			adr.LOC_STRING_13	= $C310
 26608 A225			.var LOC_STRING_13	= adr.LOC_STRING_13 .word
 26609 = C338			adr.LOC_STRING_14	= $C338
 26610 A225			.var LOC_STRING_14	= adr.LOC_STRING_14 .word
 26611 = C360			adr.LOC_STRING_15	= $C360
 26612 A225			.var LOC_STRING_15	= adr.LOC_STRING_15 .word
 26613 = C388			adr.LOC_STRING_16	= $C388
 26614 A225			.var LOC_STRING_16	= adr.LOC_STRING_16 .word
 26615 = C3B0			adr.LOC_STRING_17	= $C3B0
 26616 A225			.var LOC_STRING_17	= adr.LOC_STRING_17 .word
 26617 = C3D8			adr.LOC_STRING_18	= $C3D8
 26618 A225			.var LOC_STRING_18	= adr.LOC_STRING_18 .word
 26619 = C400			adr.LOC_STRING_19	= $C400
 26620 A225			.var LOC_STRING_19	= adr.LOC_STRING_19 .word
 26621 = C428			adr.LOC_STRING_20	= $C428
 26622 A225			.var LOC_STRING_20	= adr.LOC_STRING_20 .word
 26623 = C450			adr.LOC_STRING_21	= $C450
 26624 A225			.var LOC_STRING_21	= adr.LOC_STRING_21 .word
 26625 = C478			adr.LOC_STRING_22	= $C478
 26626 A225			.var LOC_STRING_22	= adr.LOC_STRING_22 .word
 26627 = C4A0			adr.LOC_STRING_23	= $C4A0
 26628 A225			.var LOC_STRING_23	= adr.LOC_STRING_23 .word
 26629 = C4C8			adr.LOC_STRING_24	= $C4C8
 26630 A225			.var LOC_STRING_24	= adr.LOC_STRING_24 .word
 26631 = C4F0			adr.LOC_STRING_25	= $C4F0
 26632 A225			.var LOC_STRING_25	= adr.LOC_STRING_25 .word
 26633 = C518			adr.LOC_STRING_26	= $C518
 26634 A225			.var LOC_STRING_26	= adr.LOC_STRING_26 .word
 26635 = C540			adr.LOC_STRING_27	= $C540
 26636 A225			.var LOC_STRING_27	= adr.LOC_STRING_27 .word
 26637 = C568			adr.LOC_STRING_28	= $C568
 26638 A225			.var LOC_STRING_28	= adr.LOC_STRING_28 .word
 26639 = C590			adr.LOC_STRING_29	= $C590
 26640 A225			.var LOC_STRING_29	= adr.LOC_STRING_29 .word
 26641 = C5B8			adr.LOC_STRING_30	= $C5B8
 26642 A225			.var LOC_STRING_30	= adr.LOC_STRING_30 .word
 26643 = C5E0			adr.LOC_STRING_31	= $C5E0
 26644 A225			.var LOC_STRING_31	= adr.LOC_STRING_31 .word
 26645 = C608			adr.LOC_STRING_32	= $C608
 26646 A225			.var LOC_STRING_32	= adr.LOC_STRING_32 .word
 26647 = C630			adr.LOC_STRING_33	= $C630
 26648 A225			.var LOC_STRING_33	= adr.LOC_STRING_33 .word
 26649 = C658			adr.LOC_STRING_34	= $C658
 26650 A225			.var LOC_STRING_34	= adr.LOC_STRING_34 .word
 26651 = C680			adr.LOC_STRING_35	= $C680
 26652 A225			.var LOC_STRING_35	= adr.LOC_STRING_35 .word
 26653 = C6A8			adr.LOC_STRING_36	= $C6A8
 26654 A225			.var LOC_STRING_36	= adr.LOC_STRING_36 .word
 26655 = C6D0			adr.LOC_STRING_37	= $C6D0
 26656 A225			.var LOC_STRING_37	= adr.LOC_STRING_37 .word
 26657 = C6F8			adr.LOC_STRING_38	= $C6F8
 26658 A225			.var LOC_STRING_38	= adr.LOC_STRING_38 .word
 26659 = C720			adr.LOC_STRING_39	= $C720
 26660 A225			.var LOC_STRING_39	= adr.LOC_STRING_39 .word
 26661 = C748			adr.LOC_STRING_40	= $C748
 26662 A225			.var LOC_STRING_40	= adr.LOC_STRING_40 .word
 26663 = C770			adr.LOC_STRING_41	= $C770
 26664 A225			.var LOC_STRING_41	= adr.LOC_STRING_41 .word
 26665 = C798			LOCCOLBK	= $C798
 26666 = C799			LOCCOLPF0	= $C799
 26667 = C79A			LOCCOLPF1	= $C79A
 26668 = C79B			LOCCOLPF2	= $C79B
 26669 = B0BC			adr.LOC_OPTIONS	= [DATAORIGIN+$0C47] .array [10] .word
 26670 A225			.var LOC_OPTIONS	= adr.LOC_OPTIONS .word
 26671 = B0D0			adr.LOC_SUBLOCATION_NAMES	= [DATAORIGIN+$0C5B] .array [4] .word
 26672 A225			.var LOC_SUBLOCATION_NAMES	= adr.LOC_SUBLOCATION_NAMES .word
 26673 = E0D4			adr.PLGANG_1	= $E0D4
 26674 A225			.var PLGANG_1	= adr.PLGANG_1 .word
 26675 = E0E4			adr.PLGANG_2	= $E0E4
 26676 A225			.var PLGANG_2	= adr.PLGANG_2 .word
 26677 = E0F4			adr.PLGANG_3	= $E0F4
 26678 A225			.var PLGANG_3	= adr.PLGANG_3 .word
 26679 = E104			adr.PLGANG_4	= $E104
 26680 A225			.var PLGANG_4	= adr.PLGANG_4 .word
 26681 = B0D8			adr.PLGANG	= [DATAORIGIN+$0C63] .array [4] .word
 26682 A225			.var PLGANG	= adr.PLGANG .word
 26683 = E152			CURRENTMONTH	= $E152
 26684 = E153			CURRENTYEAR	= $E153
 26685 = E154			GAMELENGTH	= $E154
 26686 = E155			GAMEPOINTS	= $E155
 26687 = E158			adr.GANGSTERNAME_1	= $E158
 26688 A225			.var GANGSTERNAME_1	= adr.GANGSTERNAME_1 .word
 26689 = E168			adr.GANGSTERNAME_2	= $E168
 26690 A225			.var GANGSTERNAME_2	= adr.GANGSTERNAME_2 .word
 26691 = E178			adr.GANGSTERNAME_3	= $E178
 26692 A225			.var GANGSTERNAME_3	= adr.GANGSTERNAME_3 .word
 26693 = E188			adr.GANGSTERNAME_4	= $E188
 26694 A225			.var GANGSTERNAME_4	= adr.GANGSTERNAME_4 .word
 26695 = E198			adr.GANGSTERNAME_5	= $E198
 26696 A225			.var GANGSTERNAME_5	= adr.GANGSTERNAME_5 .word
 26697 = E1A8			adr.GANGSTERNAME_6	= $E1A8
 26698 A225			.var GANGSTERNAME_6	= adr.GANGSTERNAME_6 .word
 26699 = E1B8			adr.GANGSTERNAME_7	= $E1B8
 26700 A225			.var GANGSTERNAME_7	= adr.GANGSTERNAME_7 .word
 26701 = E1C8			adr.GANGSTERNAME_8	= $E1C8
 26702 A225			.var GANGSTERNAME_8	= adr.GANGSTERNAME_8 .word
 26703 = E1D8			adr.GANGSTERNAME_9	= $E1D8
 26704 A225			.var GANGSTERNAME_9	= adr.GANGSTERNAME_9 .word
 26705 = E1E8			adr.GANGSTERNAME_10	= $E1E8
 26706 A225			.var GANGSTERNAME_10	= adr.GANGSTERNAME_10 .word
 26707 = E1F8			adr.GANGSTERNAME_11	= $E1F8
 26708 A225			.var GANGSTERNAME_11	= adr.GANGSTERNAME_11 .word
 26709 = E208			adr.GANGSTERNAME_12	= $E208
 26710 A225			.var GANGSTERNAME_12	= adr.GANGSTERNAME_12 .word
 26711 = E218			adr.GANGSTERNAME_13	= $E218
 26712 A225			.var GANGSTERNAME_13	= adr.GANGSTERNAME_13 .word
 26713 = E228			adr.GANGSTERNAME_14	= $E228
 26714 A225			.var GANGSTERNAME_14	= adr.GANGSTERNAME_14 .word
 26715 = E238			adr.GANGSTERNAME_15	= $E238
 26716 A225			.var GANGSTERNAME_15	= adr.GANGSTERNAME_15 .word
 26717 = E248			adr.GANGSTERNAME_16	= $E248
 26718 A225			.var GANGSTERNAME_16	= adr.GANGSTERNAME_16 .word
 26719 = E258			adr.GANGSTERNAME_17	= $E258
 26720 A225			.var GANGSTERNAME_17	= adr.GANGSTERNAME_17 .word
 26721 = E268			adr.GANGSTERNAME_18	= $E268
 26722 A225			.var GANGSTERNAME_18	= adr.GANGSTERNAME_18 .word
 26723 = E278			adr.GANGSTERNAME_19	= $E278
 26724 A225			.var GANGSTERNAME_19	= adr.GANGSTERNAME_19 .word
 26725 = E288			adr.GANGSTERNAME_20	= $E288
 26726 A225			.var GANGSTERNAME_20	= adr.GANGSTERNAME_20 .word
 26727 = E298			adr.GANGSTERNAME_21	= $E298
 26728 A225			.var GANGSTERNAME_21	= adr.GANGSTERNAME_21 .word
 26729 = E2A8			adr.GANGSTERNAME_22	= $E2A8
 26730 A225			.var GANGSTERNAME_22	= adr.GANGSTERNAME_22 .word
 26731 = E2B8			adr.GANGSTERNAME_23	= $E2B8
 26732 A225			.var GANGSTERNAME_23	= adr.GANGSTERNAME_23 .word
 26733 = E2C8			adr.GANGSTERNAME_24	= $E2C8
 26734 A225			.var GANGSTERNAME_24	= adr.GANGSTERNAME_24 .word
 26735 = E2D8			adr.GANGSTERNAME_25	= $E2D8
 26736 A225			.var GANGSTERNAME_25	= adr.GANGSTERNAME_25 .word
 26737 = E2E8			adr.GANGSTERNAME_26	= $E2E8
 26738 A225			.var GANGSTERNAME_26	= adr.GANGSTERNAME_26 .word
 26739 = E2F8			adr.GANGSTERNAME_27	= $E2F8
 26740 A225			.var GANGSTERNAME_27	= adr.GANGSTERNAME_27 .word
 26741 = E308			adr.GANGSTERNAME_28	= $E308
 26742 A225			.var GANGSTERNAME_28	= adr.GANGSTERNAME_28 .word
 26743 = E318			adr.GANGSTERNAME_29	= $E318
 26744 A225			.var GANGSTERNAME_29	= adr.GANGSTERNAME_29 .word
 26745 = E328			adr.GANGSTERNAME_30	= $E328
 26746 A225			.var GANGSTERNAME_30	= adr.GANGSTERNAME_30 .word
 26747 = E338			adr.GANGSTERNAME_31	= $E338
 26748 A225			.var GANGSTERNAME_31	= adr.GANGSTERNAME_31 .word
 26749 = E348			adr.GANGSTERNAME_32	= $E348
 26750 A225			.var GANGSTERNAME_32	= adr.GANGSTERNAME_32 .word
 26751 = E358			adr.GANGSTERSTR	= $E358
 26752 A225			.var GANGSTERSTR	= adr.GANGSTERSTR .word
 26753 = E378			adr.GANGSTERINT	= $E378
 26754 A225			.var GANGSTERINT	= adr.GANGSTERINT .word
 26755 = E398			adr.GANGSTERBRUT	= $E398
 26756 A225			.var GANGSTERBRUT	= adr.GANGSTERBRUT .word
 26757 = E3B8			adr.GANGSTERHEALTH	= $E3B8
 26758 A225			.var GANGSTERHEALTH	= adr.GANGSTERHEALTH .word
 26759 = E3D8			adr.GANGSTERWEAPON	= $E3D8
 26760 A225			.var GANGSTERWEAPON	= adr.GANGSTERWEAPON .word
 26761 = E3F8			adr.GANGSTERSEX	= $E3F8
 26762 A225			.var GANGSTERSEX	= adr.GANGSTERSEX .word
 26763 = E418			CURRENTGANGSTER	= $E418
 26764 = E419			GAMEENDS	= $E419
 26765 = E41A			CURRENTPLAYER	= $E41A
 26766 = E41B			LOCCOL	= $E41B
 26767 = E41C			adr.PLRENT	= $E41C
 26768 A225			.var PLRENT	= adr.PLRENT .word
 26769 = E420			CURRENTMAP	= $E420
 26770 = E421			adr.PLGANGSTERS	= $E421
 26771 A225			.var PLGANGSTERS	= adr.PLGANGSTERS .word
 26772 = E441			adr.PLNGANGSTERS	= $E441
 26773 A225			.var PLNGANGSTERS	= adr.PLNGANGSTERS .word
 26774 = E445			DIDFIGHT	= $E445
 26775 = E600			adr.BUF_GANGSTERTEXT1	= $E600
 26776 A225			.var BUF_GANGSTERTEXT1	= adr.BUF_GANGSTERTEXT1 .word
 26777 = E628			adr.BUF_GANGSTERTEXT2	= $E628
 26778 A225			.var BUF_GANGSTERTEXT2	= adr.BUF_GANGSTERTEXT2 .word
 26779 = E650			adr.BUF_GANGSTERTEXT3	= $E650
 26780 A225			.var BUF_GANGSTERTEXT3	= adr.BUF_GANGSTERTEXT3 .word
 26781 = E678			adr.BUF_GANGSTERTEXT4	= $E678
 26782 A225			.var BUF_GANGSTERTEXT4	= adr.BUF_GANGSTERTEXT4 .word
 26783 = E6A0			adr.BUF_GANGSTERTEXT5	= $E6A0
 26784 A225			.var BUF_GANGSTERTEXT5	= adr.BUF_GANGSTERTEXT5 .word
 26785 = E6C8			adr.BUF_GANGSTERANREDE	= $E6C8
 26786 A225			.var BUF_GANGSTERANREDE	= adr.BUF_GANGSTERANREDE .word
 26787 = E6D8			BUF_GANGSTERSEX	= $E6D8
 26788 = E6D9			BUF_GANGSTERSTR	= $E6D9
 26789 = E6DA			BUF_GANGSTERBRUT	= $E6DA
 26790 = E6DB			BUF_GANGSTERINT	= $E6DB
 26791 = E6DC			BUF_GANGSTERWEAPON	= $E6DC
 26792 = E6DD			adr.BUF_GANGSTERNAME	= $E6DD
 26793 A225			.var BUF_GANGSTERNAME	= adr.BUF_GANGSTERNAME .word
 26794 = E6ED			BUF_GANGSTERPRICE	= $E6ED
 26795 = B0E0			adr.GANGSTERNAMES	= [DATAORIGIN+$0C6B] .array [32] .word
 26796 A225			.var GANGSTERNAMES	= adr.GANGSTERNAMES .word
 26797 = B120			adr.FIGHT_STRING_1	= [DATAORIGIN+$0CAB] .array [41]
 26798 A225			.var FIGHT_STRING_1	= adr.FIGHT_STRING_1 .word
 26799 = B149			adr.FIGHT_STRING_2	= [DATAORIGIN+$0CD4] .array [41]
 26800 A225			.var FIGHT_STRING_2	= adr.FIGHT_STRING_2 .word
 26801 = B172			adr.FIGHT_STRING_3	= [DATAORIGIN+$0CFD] .array [41]
 26802 A225			.var FIGHT_STRING_3	= adr.FIGHT_STRING_3 .word
 26803 = B19B			adr.FIGHT_STRING_4	= [DATAORIGIN+$0D26] .array [41]
 26804 A225			.var FIGHT_STRING_4	= adr.FIGHT_STRING_4 .word
 26805 = B1C4			adr.FIGHT_STRING_5	= [DATAORIGIN+$0D4F] .array [41]
 26806 A225			.var FIGHT_STRING_5	= adr.FIGHT_STRING_5 .word
 26807 = B1ED			adr.FIGHT_STRING_6	= [DATAORIGIN+$0D78] .array [41]
 26808 A225			.var FIGHT_STRING_6	= adr.FIGHT_STRING_6 .word
 26809 = B216			adr.WAITKEY_STRING	= [DATAORIGIN+$0DA1] .array [41]
 26810 A225			.var WAITKEY_STRING	= adr.WAITKEY_STRING .word
 26811 = B23F			adr.MAP_STRING_WEAPON	= [DATAORIGIN+$0DCA] .array [41]
 26812 A225			.var MAP_STRING_WEAPON	= adr.MAP_STRING_WEAPON .word
 26813 = B268			adr.MAP_STRING_GANGSTER	= [DATAORIGIN+$0DF3] .array [41]
 26814 A225			.var MAP_STRING_GANGSTER	= adr.MAP_STRING_GANGSTER .word
 26815 = B291			adr.MAP_STRING_RENT	= [DATAORIGIN+$0E1C] .array [41]
 26816 A225			.var MAP_STRING_RENT	= adr.MAP_STRING_RENT .word
 26817 = B2BA			adr.MAP_STRING_BRIBE	= [DATAORIGIN+$0E45] .array [41]
 26818 A225			.var MAP_STRING_BRIBE	= adr.MAP_STRING_BRIBE .word
 26819 = B2E3			adr.MAP_STRING_CAR	= [DATAORIGIN+$0E6E] .array [41]
 26820 A225			.var MAP_STRING_CAR	= adr.MAP_STRING_CAR .word
 26821 = B30C			adr.MAP_STRING_STEPS	= [DATAORIGIN+$0E97] .array [41]
 26822 A225			.var MAP_STRING_STEPS	= adr.MAP_STRING_STEPS .word
 26823 = B335			adr.MAP_STRING_CARGO	= [DATAORIGIN+$0EC0] .array [41]
 26824 A225			.var MAP_STRING_CARGO	= adr.MAP_STRING_CARGO .word
 26825 = B35E			adr.MAP_STRING_MONEY	= [DATAORIGIN+$0EE9] .array [41]
 26826 A225			.var MAP_STRING_MONEY	= adr.MAP_STRING_MONEY .word
 26827 = B387			adr.MAP_STRING_CREDIT	= [DATAORIGIN+$0F12] .array [41]
 26828 A225			.var MAP_STRING_CREDIT	= adr.MAP_STRING_CREDIT .word
 26829 = B3B0			adr.FIGHT_POLICE_STRING_1	= [DATAORIGIN+$0F3B] .array [41]
 26830 A225			.var FIGHT_POLICE_STRING_1	= adr.FIGHT_POLICE_STRING_1 .word
 26831 = B3D9			adr.FIGHT_POLICE_STRING_2	= [DATAORIGIN+$0F64] .array [41]
 26832 A225			.var FIGHT_POLICE_STRING_2	= adr.FIGHT_POLICE_STRING_2 .word
 26833 = B402			adr.NOT_ENOUGH_MONEY_STRING	= [DATAORIGIN+$0F8D] .array [41]
 26834 A225			.var NOT_ENOUGH_MONEY_STRING	= adr.NOT_ENOUGH_MONEY_STRING .word
 26835 = B42B			adr.YOUR_CHOICE_STRING	= [DATAORIGIN+$0FB6] .array [41]
 26836 A225			.var YOUR_CHOICE_STRING	= adr.YOUR_CHOICE_STRING .word
 26837 = B454			adr.POLICE_STRING_1	= [DATAORIGIN+$0FDF] .array [41]
 26838 A225			.var POLICE_STRING_1	= adr.POLICE_STRING_1 .word
 26839 = 0023			N_KEYCODE	= $23
 26840 = 002B			Y_KEYCODE	= $2B
 26841 = 0038			F_KEYCODE	= $38
 26842 = 0025			M_KEYCODE	= $25
 26843 = 003E			SHORT_GAME_KEYCODE	= $3E
 26844 = 0000			LONG_GAME_KEYCODE	= $00
 26845 = 003E			SHOOTING_RANGE_KEYCODE	= $3E
 26846 = 002D			TRAINING_CAMP_KEYCODE	= $2D
 26847 = B8AC			CONSOLESTATE	= DATAORIGIN+$1437
 26848 = 0001			BANK_	= $01
 26849 = 0002			FORGERY_	= $02
 26850 = 0003			MONEYTRANSPORT_	= $03
 26851 = 0004			LOANSHARK_	= $04
 26852 = 0005			POLICE_	= $05
 26853 = 0006			CARDEALER_	= $06
 26854 = 0007			PUB_	= $07
 26855 = 0008			MAILTRAIN_	= $08
 26856 = 0009			STORE_	= $09
 26857 = 000A			HIDEOUT_	= $0A
 26858 = 000B			GAMBLING_	= $0B
 26859 = 000C			SUBWAY_	= $0C
 26860 = 000D			ARMSDEALER_	= $0D
 26861 = 000E			TITLE_	= $0E
 26862 = 000F			NONE_	= $0F
 26863 = 0010			STREET_	= $10
 26864 = 0011			END_TURN_	= $11
 26865 = 0012			LOSTFIGHT_	= $12
 26866 = 0013			MAIN_	= $13
 26867 = 0014			PUB2_	= $14
 26868 = 0015			UPDATES_	= $15
 26869 = 0016			JOB_	= $16
 26870 = 0017			CENTRALSTATION_	= $17
 26871 = 0018			MAJOR_	= $18
 26872 = 0019			COURT_	= $19
 26873 = 001A			CAUGHT_	= $1A
 26874 = 001B			ROADBLOCK_	= $1B
 26875 = 001C			SETUP_	= $1C
 26876 = B8AE			CURRENTLOCATION	= DATAORIGIN+$1439
 26877 = B8AF			CURRENTSUBLOCATION	= DATAORIGIN+$143A
 26878 = B8B0			adr.CURRENTSUBLOCATIONNAME	= [DATAORIGIN+$143B] .array [41]
 26879 A225			.var CURRENTSUBLOCATIONNAME	= adr.CURRENTSUBLOCATIONNAME .word
 26880 = 0001			MOVESPEED	= $01
 26881 = B9EC			LASTLOCATION	= DATAORIGIN+$1577
 26882 = BA00			adr.SAFECLMFNAME	= [DATAORIGIN+$158B] .array [33]
 26883 A225			.var SAFECLMFNAME	= adr.SAFECLMFNAME .word
 26884 = BA21			adr.SAFECLMSNAME	= [DATAORIGIN+$15AC] .array [33]
 26885 A225			.var SAFECLMSNAME	= adr.SAFECLMSNAME .word
 26886 = BAED			K	= DATAORIGIN+$1678
 26887 = BAEE			CHOICE	= DATAORIGIN+$1679
 26888 = BAEF			OUTCOME	= DATAORIGIN+$167A
 26889 = BAF0			CS	= DATAORIGIN+$167B
 26890 = BAF2			CH	= DATAORIGIN+$167D
 26891 = BAF3			@CASETMP_0017	= DATAORIGIN+$167E
 26892 A225			@exit
 26893
 26894 A225 A2 00		@halt	ldx #$00
 26895 A227 9A				txs
 26896 					.ifdef MAIN.@DEFINES.ROMOFF
 26897 A228 EE 01 D3			inc portb
 26898 					.fi
 26899
 26900 A22B A0 01			ldy #$01
 26901
 26902 A22D 60				rts
 26903
 26904 				; ------------------------------------------------------------
 26905
 26906 A22E 00 00 00 00 00 00 + IOCB@COPY	:16 brk
 26907
 26908 				; ------------------------------------------------------------
 26909
 26910 A23E			.local	@DEFINES
 26911 A23E			ATARI
 26912 A23E			LOCATION_EN
 26913 A23E			ROMOFF
 26914 A23E			NOROMFONT
 26915 A23E			BASICOFF
 26916 				.endl
 26917
 26918 A23E			.local	@RESOURCE
 26919 				.endl
 26920
 26921 = A23E 04 E0		PLSTUFF
 26921 = A240 08 E0		PLMONEYTRANSPORTER
 26921 = A242 0C E0		PLKILLEDMAJOR
 26921 = A244 10 E0		PLMONEY
 26921 = A246 20 E0		PLFAKEMONEY
 26921 = A248 24 E0		PLALCOHOL
 26921 = A24A 28 E0		PLFORGEDID
 26921 = A24C 2C E0		PLCAR
 26921 = A24E 30 E0		PLSTEPS
 26921 = A250 34 E0		PLMAPPOSX
 26921 = A252 38 E0		PLMAPPOSY
 26921 = A254 3C E0		PLCURRENTMAP
 26921 = A256 40 E0		PLOPPORTUNITY
 26921 = A258 44 E0		PLLOAN
 26921 = A25A 4C E0		PLLOANTIME
 26921 = A25C 50 E0		PLLOANSHARK
 26921 = A25E 54 E0		PLRENTMONTHS
 26921 = A260 58 E0		PLRENTCOST
 26921 = A262 5C E0		PLBRIBE
 26921 = A264 60 E0		PLJOB
 26921 = A266 64 E0		PLJOBWAGE
 26921 = A268 6C E0		PLJOBLOCATION
 26921 = A26A 74 E0		PLPRISON
 26921 = A26C 78 E0		PLRANK
 26921 = A26E 7C E0		PLPOINTS
 26921 = A270 80 E0		PLNEWPOINTS
 26921 = A272 84 E0		PLLOANINVEST
 26921 = A274 8C E0		PLFREED
 26921 = A276 00 E7		CARPRICES
 26921 = A278 06 E7		CARCARGO
 26921 = A27A 0C E7		CARRANGE
 26921 = A27C 12 E7		WEAPONPRICES
 26921 = A27E 24 E7		WEAPONREACH
 26921 = A280 2D E7		WEAPONPRECISION
 26921 = A282 36 E7		WEAPONEFFECT
 26921 = A284 3F E7		WEAPONSOUND
 26921 = A286 48 E7		FNTNAME
 26921 = A288 58 E7		WANTED_M_MFNAME
 26921 = A28A 68 E7		WANTED_M_MSNAME
 26921 = A28C 78 E7		WANTED_F_MFNAME
 26921 = A28E 88 E7		WANTED_F_MSNAME
 26921 = A290 98 E7		FIGHTSCRNAME
 26921 = A292 A8 E7		FIGHTFNTNAME
 26921 = A294 B8 E7		GANGSTERFILENAME
 26921 = A296 C8 E7		LOCABANKFNAME
 26921 = A298 D8 E7		LOCAFORGFNAME
 26921 = A29A E8 E7		LOCAMONYFNAME
 26921 = A29C F8 E7		LOCALOANFNAME
 26921 = A29E 08 E8		LOCAPOLIFNAME
 26921 = A2A0 18 E8		LOCACARSFNAME
 26921 = A2A2 28 E8		LOCAPUBBFNAME
 26921 = A2A4 38 E8		LOCAPUBCFNAME
 26921 = A2A6 48 E8		LOCASTORFNAME
 26921 = A2A8 58 E8		LOCAHIDEFNAME
 26921 = A2AA 68 E8		LOCAGAMBFNAME
 26921 = A2AC 78 E8		LOCASUBWFNAME
 26921 = A2AE 88 E8		LOCAARMSFNAME
 26921 = A2B0 98 E8		LOCAMAINFNAME
 26921 = A2B2 A8 E8		LOCAJOBBFNAME
 26921 = A2B4 B8 E8		LOCMAJOFNAME
 26921 = A2B6 C8 E8		LOCACOURFNAME
 26921 = A2B8 D8 E8		LOCACAUGFNAME
 26921 = A2BA E8 E8		LOCAROADFNAME
 26921 = A2BC F8 E8		LOCAUPDTFNAME
 26921 = A2BE 08 E9		LOCASETUFNAME
 26921 = A2C0 18 E9		RANK_1
 26921 = A2C2 28 E9		RANK_2
 26921 = A2C4 38 E9		RANK_3
 26921 = A2C6 48 E9		RANK_4
 26921 = A2C8 58 E9		RANK_5
 26921 = A2CA 68 E9		RANK_6
 26921 = A2CC 78 E9		RANK_7
 26921 = A2CE 88 E9		RANK_8
 26921 = A2D0 98 E9		RANK_9
 26921 = A2D2 A8 E9		RANK_10
 26921 = A2D4 B8 E9		RANK_11
 26921 = A2D6 C8 E9		WEAPONNAME_1
 26921 = A2D8 D8 E9		WEAPONNAME_2
 26921 = A2DA E8 E9		WEAPONNAME_3
 26921 = A2DC F8 E9		WEAPONNAME_4
 26921 = A2DE 08 EA		WEAPONNAME_5
 26921 = A2E0 18 EA		WEAPONNAME_6
 26921 = A2E2 28 EA		WEAPONNAME_7
 26921 = A2E4 38 EA		WEAPONNAME_8
 26921 = A2E6 48 EA		WEAPONNAME_9
 26921 = A2E8 58 EA		CARNAMES_1
 26921 = A2EA 68 EA		CARNAMES_2
 26921 = A2EC 78 EA		CARNAMES_3
 26921 = A2EE 88 EA		CARNAMES_4
 26921 = A2F0 98 EA		CARNAMES_5
 26921 = A2F2 A8 EA		CARNAMES_6
 26921 = A2F4 E0 AF		RANKNAMES
 26921 = A2F6 F6 AF		WEAPONNAMES
 26921 = A2F8 08 B0		CARNAMES
 26921 = A2FA C0 EA		FPPOSSTART
 26921 = A2FC 00 EB		LOCACENTFNAME
 26921 = A2FE 14 B0		E7FNAME
 26921 = A300 35 B0		SAVEFNAME
 26921 = A302 56 B0		FINALFNAME
 26921 = A304 01 EC		FP_AI
 26921 = A306 03 EC		FP_N
 26921 = A308 05 EC		FP_POSW
 26921 = A30A 45 EC		FP_WEAPON
 26921 = A30C 85 EC		FP_ENERGY
 26921 = A30E C5 EC		FP_STRENGTH
 26921 = A310 05 ED		FP_BRUTALITY
 26921 = A312 45 ED		FP_SEX
 26921 = A314 85 ED		FP_GANG_1
 26921 = A316 95 ED		FP_GANG_2
 26921 = A318 A5 ED		FP_NAME_1
 26921 = A31A B5 ED		FP_NAME_2
 26921 = A31C C5 ED		FP_NAME_3
 26921 = A31E D5 ED		FP_NAME_4
 26921 = A320 E5 ED		FP_NAME_5
 26921 = A322 F5 ED		FP_NAME_6
 26921 = A324 05 EE		FP_NAME_7
 26921 = A326 15 EE		FP_NAME_8
 26921 = A328 25 EE		FP_NAME_9
 26921 = A32A 35 EE		FP_NAME_10
 26921 = A32C 45 EE		FP_NAME_11
 26921 = A32E 55 EE		FP_NAME_12
 26921 = A330 65 EE		FP_NAME_13
 26921 = A332 75 EE		FP_NAME_14
 26921 = A334 85 EE		FP_NAME_15
 26921 = A336 95 EE		FP_NAME_16
 26921 = A338 A5 EE		FP_NAME_17
 26921 = A33A B5 EE		FP_NAME_18
 26921 = A33C C5 EE		FP_NAME_19
 26921 = A33E D5 EE		FP_NAME_20
 26921 = A340 78 B0		FP_GANG
 26921 = A342 7C B0		FP_NAME
 26921 = A344 80 BE		LOC_NAME
 26921 = A346 A8 BE		LOC_SUBLOCATION_NAME_1
 26921 = A348 D0 BE		LOC_SUBLOCATION_NAME_2
 26921 = A34A F8 BE		LOC_SUBLOCATION_NAME_3
 26921 = A34C 20 BF		LOC_SUBLOCATION_NAME_4
 26921 = A34E 48 BF		LOC_OPTIONS_1
 26921 = A350 70 BF		LOC_OPTIONS_2
 26921 = A352 98 BF		LOC_OPTIONS_3
 26921 = A354 C0 BF		LOC_OPTIONS_4
 26921 = A356 E8 BF		LOC_OPTIONS_5
 26921 = A358 10 C0		LOC_OPTIONS_6
 26921 = A35A 38 C0		LOC_OPTIONS_7
 26921 = A35C 60 C0		LOC_OPTIONS_8
 26921 = A35E 88 C0		LOC_OPTIONS_9
 26921 = A360 B0 C0		LOC_OPTIONS_10
 26921 = A362 D8 C0		LOC_DESCRIPTION_1
 26921 = A364 00 C1		LOC_DESCRIPTION_2
 26921 = A366 2A C1		LOC_MAP_PLACES
 26921 = A368 30 C1		LOC_STRING_1
 26921 = A36A 58 C1		LOC_STRING_2
 26921 = A36C 80 C1		LOC_STRING_3
 26921 = A36E A8 C1		LOC_STRING_4
 26921 = A370 D0 C1		LOC_STRING_5
 26921 = A372 F8 C1		LOC_STRING_6
 26921 = A374 20 C2		LOC_STRING_7
 26921 = A376 48 C2		LOC_STRING_8
 26921 = A378 70 C2		LOC_STRING_9
 26921 = A37A 98 C2		LOC_STRING_10
 26921 = A37C C0 C2		LOC_STRING_11
 26921 = A37E E8 C2		LOC_STRING_12
 26921 = A380 10 C3		LOC_STRING_13
 26921 = A382 38 C3		LOC_STRING_14
 26921 = A384 60 C3		LOC_STRING_15
 26921 = A386 88 C3		LOC_STRING_16
 26921 = A388 B0 C3		LOC_STRING_17
 26921 = A38A D8 C3		LOC_STRING_18
 26921 = A38C 00 C4		LOC_STRING_19
 26921 = A38E 28 C4		LOC_STRING_20
 26921 = A390 50 C4		LOC_STRING_21
 26921 = A392 78 C4		LOC_STRING_22
 26921 = A394 A0 C4		LOC_STRING_23
 26921 = A396 C8 C4		LOC_STRING_24
 26921 = A398 F0 C4		LOC_STRING_25
 26921 = A39A 18 C5		LOC_STRING_26
 26921 = A39C 40 C5		LOC_STRING_27
 26921 = A39E 68 C5		LOC_STRING_28
 26921 = A3A0 90 C5		LOC_STRING_29
 26921 = A3A2 B8 C5		LOC_STRING_30
 26921 = A3A4 E0 C5		LOC_STRING_31
 26921 = A3A6 08 C6		LOC_STRING_32
 26921 = A3A8 30 C6		LOC_STRING_33
 26921 = A3AA 58 C6		LOC_STRING_34
 26921 = A3AC 80 C6		LOC_STRING_35
 26921 = A3AE A8 C6		LOC_STRING_36
 26921 = A3B0 D0 C6		LOC_STRING_37
 26921 = A3B2 F8 C6		LOC_STRING_38
 26921 = A3B4 20 C7		LOC_STRING_39
 26921 = A3B6 48 C7		LOC_STRING_40
 26921 = A3B8 70 C7		LOC_STRING_41
 26921 = A3BA BC B0		LOC_OPTIONS
 26921 = A3BC D0 B0		LOC_SUBLOCATION_NAMES
 26921 = A3BE D4 E0		PLGANG_1
 26921 = A3C0 E4 E0		PLGANG_2
 26921 = A3C2 F4 E0		PLGANG_3
 26921 = A3C4 04 E1		PLGANG_4
 26921 = A3C6 D8 B0		PLGANG
 26921 = A3C8 58 E1		GANGSTERNAME_1
 26921 = A3CA 68 E1		GANGSTERNAME_2
 26921 = A3CC 78 E1		GANGSTERNAME_3
 26921 = A3CE 88 E1		GANGSTERNAME_4
 26921 = A3D0 98 E1		GANGSTERNAME_5
 26921 = A3D2 A8 E1		GANGSTERNAME_6
 26921 = A3D4 B8 E1		GANGSTERNAME_7
 26921 = A3D6 C8 E1		GANGSTERNAME_8
 26921 = A3D8 D8 E1		GANGSTERNAME_9
 26921 = A3DA E8 E1		GANGSTERNAME_10
 26921 = A3DC F8 E1		GANGSTERNAME_11
 26921 = A3DE 08 E2		GANGSTERNAME_12
 26921 = A3E0 18 E2		GANGSTERNAME_13
 26921 = A3E2 28 E2		GANGSTERNAME_14
 26921 = A3E4 38 E2		GANGSTERNAME_15
 26921 = A3E6 48 E2		GANGSTERNAME_16
 26921 = A3E8 58 E2		GANGSTERNAME_17
 26921 = A3EA 68 E2		GANGSTERNAME_18
 26921 = A3EC 78 E2		GANGSTERNAME_19
 26921 = A3EE 88 E2		GANGSTERNAME_20
 26921 = A3F0 98 E2		GANGSTERNAME_21
 26921 = A3F2 A8 E2		GANGSTERNAME_22
 26921 = A3F4 B8 E2		GANGSTERNAME_23
 26921 = A3F6 C8 E2		GANGSTERNAME_24
 26921 = A3F8 D8 E2		GANGSTERNAME_25
 26921 = A3FA E8 E2		GANGSTERNAME_26
 26921 = A3FC F8 E2		GANGSTERNAME_27
 26921 = A3FE 08 E3		GANGSTERNAME_28
 26921 = A400 18 E3		GANGSTERNAME_29
 26921 = A402 28 E3		GANGSTERNAME_30
 26921 = A404 38 E3		GANGSTERNAME_31
 26921 = A406 48 E3		GANGSTERNAME_32
 26921 = A408 58 E3		GANGSTERSTR
 26921 = A40A 78 E3		GANGSTERINT
 26921 = A40C 98 E3		GANGSTERBRUT
 26921 = A40E B8 E3		GANGSTERHEALTH
 26921 = A410 D8 E3		GANGSTERWEAPON
 26921 = A412 F8 E3		GANGSTERSEX
 26921 = A414 1C E4		PLRENT
 26921 = A416 21 E4		PLGANGSTERS
 26921 = A418 41 E4		PLNGANGSTERS
 26921 = A41A 00 E6		BUF_GANGSTERTEXT1
 26921 = A41C 28 E6		BUF_GANGSTERTEXT2
 26921 = A41E 50 E6		BUF_GANGSTERTEXT3
 26921 = A420 78 E6		BUF_GANGSTERTEXT4
 26921 = A422 A0 E6		BUF_GANGSTERTEXT5
 26921 = A424 C8 E6		BUF_GANGSTERANREDE
 26921 = A426 DD E6		BUF_GANGSTERNAME
 26921 = A428 E0 B0		GANGSTERNAMES
 26921 = A42A 20 B1		FIGHT_STRING_1
 26921 = A42C 49 B1		FIGHT_STRING_2
 26921 = A42E 72 B1		FIGHT_STRING_3
 26921 = A430 9B B1		FIGHT_STRING_4
 26921 = A432 C4 B1		FIGHT_STRING_5
 26921 = A434 ED B1		FIGHT_STRING_6
 26921 = A436 16 B2		WAITKEY_STRING
 26921 = A438 3F B2		MAP_STRING_WEAPON
 26921 = A43A 68 B2		MAP_STRING_GANGSTER
 26921 = A43C 91 B2		MAP_STRING_RENT
 26921 = A43E BA B2		MAP_STRING_BRIBE
 26921 = A440 E3 B2		MAP_STRING_CAR
 26921 = A442 0C B3		MAP_STRING_STEPS
 26921 = A444 35 B3		MAP_STRING_CARGO
 26921 = A446 5E B3		MAP_STRING_MONEY
 26921 = A448 87 B3		MAP_STRING_CREDIT
 26921 = A44A B0 B3		FIGHT_POLICE_STRING_1
 26921 = A44C D9 B3		FIGHT_POLICE_STRING_2
 26921 = A44E 02 B4		NOT_ENOUGH_MONEY_STRING
 26921 = A450 2B B4		YOUR_CHOICE_STRING
 26921 = A452 54 B4		POLICE_STRING_1
 26921 = A454 B0 B8		CURRENTSUBLOCATIONNAME
 26921 = A456 00 BA		SAFECLMFNAME
 26921 = A458 21 BA		SAFECLMSNAME
 26921 				.endl							; MAIN
 26922
 26923 				; ------------------------------------------------------------
 26924 				; ------------------------------------------------------------
 26925
 26926 				.macro	UNITINITIALIZATION
 26927 				
 26928 					.ifdef MAIN.SYSTEM.@UnitInit
 26929 					jsr MAIN.SYSTEM.@UnitInit
 26930 					.fi
 26931 				
 26932 					.ifdef MAIN.ATARI.@UnitInit
 26933 					jsr MAIN.ATARI.@UnitInit
 26934 					.fi
 26935 				
 26936 					.ifdef MAIN.JOYSTICK.@UnitInit
 26937 					jsr MAIN.JOYSTICK.@UnitInit
 26938 					.fi
 26939 				
 26940 					.ifdef MAIN.MATH.@UnitInit
 26941 					jsr MAIN.MATH.@UnitInit
 26942 					.fi
 26943 				
 26944 					.ifdef MAIN.PMG.@UnitInit
 26945 					jsr MAIN.PMG.@UnitInit
 26946 					.fi
 26947 				
 26948 					.ifdef MAIN.XBIOS.@UnitInit
 26949 					jsr MAIN.XBIOS.@UnitInit
 26950 					.fi
 26951 				
 26952 					.ifdef MAIN.XBAPLIB.@UnitInit
 26953 					jsr MAIN.XBAPLIB.@UnitInit
 26954 					.fi
 26955 				
 26956 					.ifdef MAIN.CRT.@UnitInit
 26957 					jsr MAIN.CRT.@UnitInit
 26958 					.fi
 26959 				
 26960 					.ifdef MAIN.CIO.@UnitInit
 26961 					jsr MAIN.CIO.@UnitInit
 26962 					.fi
 26963 				
 26964 					.ifdef MAIN.APLIB.@UnitInit
 26965 					jsr MAIN.APLIB.@UnitInit
 26966 					.fi
 26967 				
 26968 					.ifdef MAIN.B_UTILS.@UnitInit
 26969 					jsr MAIN.B_UTILS.@UnitInit
 26970 					.fi
 26971 				
 26972 					.ifdef MAIN.MISC.@UnitInit
 26973 					jsr MAIN.MISC.@UnitInit
 26974 					.fi
 26975 				
 26976 					.ifdef MAIN.RMT.@UnitInit
 26977 					jsr MAIN.RMT.@UnitInit
 26978 					.fi
 26979 				
 26980 					.ifdef MAIN.B_PMG.@UnitInit
 26981 					jsr MAIN.B_PMG.@UnitInit
 26982 					.fi
 26983 				
 26984 					.ifdef MAIN.DOS.@UnitInit
 26985 					jsr MAIN.DOS.@UnitInit
 26986 					.fi
 26987 				
 26988 					.ifdef MAIN.STRUTILS.@UnitInit
 26989 					jsr MAIN.STRUTILS.@UnitInit
 26990 					.fi
 26991 				
 26992 					.ifdef MAIN.SYSUTILS.@UnitInit
 26993 					jsr MAIN.SYSUTILS.@UnitInit
 26994 					.fi
 26995 				
 26996 					.ifdef MAIN.B_SYSTEM.@UnitInit
 26997 					jsr MAIN.B_SYSTEM.@UnitInit
 26998 					.fi
 26999 				
 27000 					.ifdef MAIN.B_CRT.@UnitInit
 27001 					jsr MAIN.B_CRT.@UnitInit
 27002 					.fi
 27003 				.endm
 27004
 27005 				; ------------------------------------------------------------
 27006
 27007 					ift .SIZEOF(MAIN.SYSTEM) > 0
 27008 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
 27008 				SYSTEM: $1555..$168E
 27009 					eif
 27010
 27011 					ift .SIZEOF(MAIN.ATARI) > 0
 27012 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
 27013 					eif
 27014
 27015 					ift .SIZEOF(MAIN.JOYSTICK) > 0
 27016 					.print 'JOYSTICK: ',MAIN.JOYSTICK,'..',MAIN.JOYSTICK+.SIZEOF(MAIN.JOYSTICK)-1
 27016 				JOYSTICK: $168F..$1696
 27017 					eif
 27018
 27019 					ift .SIZEOF(MAIN.MATH) > 0
 27020 					.print 'MATH: ',MAIN.MATH,'..',MAIN.MATH+.SIZEOF(MAIN.MATH)-1
 27021 					eif
 27022
 27023 					ift .SIZEOF(MAIN.PMG) > 0
 27024 					.print 'PMG: ',MAIN.PMG,'..',MAIN.PMG+.SIZEOF(MAIN.PMG)-1
 27024 				PMG: $1697..$169A
 27025 					eif
 27026
 27027 					ift .SIZEOF(MAIN.XBIOS) > 0
 27028 					.print 'XBIOS: ',MAIN.XBIOS,'..',MAIN.XBIOS+.SIZEOF(MAIN.XBIOS)-1
 27028 				XBIOS: $169B..$1764
 27029 					eif
 27030
 27031 					ift .SIZEOF(MAIN.XBAPLIB) > 0
 27032 					.print 'XBAPLIB: ',MAIN.XBAPLIB,'..',MAIN.XBAPLIB+.SIZEOF(MAIN.XBAPLIB)-1
 27032 				XBAPLIB: $1765..$1891
 27033 					eif
 27034
 27035 					ift .SIZEOF(MAIN.CRT) > 0
 27036 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
 27036 				CRT: $1892..$18F5
 27037 					eif
 27038
 27039 					ift .SIZEOF(MAIN.CIO) > 0
 27040 					.print 'CIO: ',MAIN.CIO,'..',MAIN.CIO+.SIZEOF(MAIN.CIO)-1
 27041 					eif
 27042
 27043 					ift .SIZEOF(MAIN.APLIB) > 0
 27044 					.print 'APLIB: ',MAIN.APLIB,'..',MAIN.APLIB+.SIZEOF(MAIN.APLIB)-1
 27045 					eif
 27046
 27047 					ift .SIZEOF(MAIN.B_UTILS) > 0
 27048 					.print 'B_UTILS: ',MAIN.B_UTILS,'..',MAIN.B_UTILS+.SIZEOF(MAIN.B_UTILS)-1
 27048 				B_UTILS: $18F6..$18F7
 27049 					eif
 27050
 27051 					ift .SIZEOF(MAIN.MISC) > 0
 27052 					.print 'MISC: ',MAIN.MISC,'..',MAIN.MISC+.SIZEOF(MAIN.MISC)-1
 27052 				MISC: $18F8..$1921
 27053 					eif
 27054
 27055 					ift .SIZEOF(MAIN.RMT) > 0
 27056 					.print 'RMT: ',MAIN.RMT,'..',MAIN.RMT+.SIZEOF(MAIN.RMT)-1
 27056 				RMT: $1922..$1934
 27057 					eif
 27058
 27059 					ift .SIZEOF(MAIN.B_PMG) > 0
 27060 					.print 'B_PMG: ',MAIN.B_PMG,'..',MAIN.B_PMG+.SIZEOF(MAIN.B_PMG)-1
 27060 				B_PMG: $1935..$1942
 27061 					eif
 27062
 27063 					ift .SIZEOF(MAIN.DOS) > 0
 27064 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
 27065 					eif
 27066
 27067 					ift .SIZEOF(MAIN.STRUTILS) > 0
 27068 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
 27069 					eif
 27070
 27071 					ift .SIZEOF(MAIN.SYSUTILS) > 0
 27072 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
 27072 				SYSUTILS: $1943..$19D4
 27073 					eif
 27074
 27075 					ift .SIZEOF(MAIN.B_SYSTEM) > 0
 27076 					.print 'B_SYSTEM: ',MAIN.B_SYSTEM,'..',MAIN.B_SYSTEM+.SIZEOF(MAIN.B_SYSTEM)-1
 27076 				B_SYSTEM: $19D5..$1A7A
 27077 					eif
 27078
 27079 					ift .SIZEOF(MAIN.B_CRT) > 0
 27080 					.print 'B_CRT: ',MAIN.B_CRT,'..',MAIN.B_CRT+.SIZEOF(MAIN.B_CRT)-1
 27080 				B_CRT: $1A7B..$2002
 27081 					eif
 27082
 27083 				.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
 27083 				CODE: $0C00..$A23D
 27084
 27085 				; ------------------------------------------------------------
 27086
 27087 = A45A				?adr = *
 27088 					ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
 27089 = A475				?adr = ?old_adr
 27090 					eif
 27091
 27092 					org ?adr
 27093 = A475				?old_adr = *
 27094
 27095 A475			DATAORIGIN
 27096 A475-BA2C> 28 00 18 00 + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27097 A48D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27098 A4A5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27099 A4BD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27100 A4D5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27101 A4ED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27102 A505 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27103 A51D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27104 A535 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27105 A54D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27106 A565 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27107 A57D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27108 A595 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $02 $08 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27109 A5AD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  <[CODEORIGIN+$0003] >[CODEORIGIN+$0003] $00 $00 $00 $00 $00 $00
 27110 A5C5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27111 A5DD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27112 A5F5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27113 A60D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27114 A625 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27115 A63D 00 00 1F 1C 1F 1E + .by  $00 $00 $1F $1C $1F $1E $1F $1E  $1F $1F $1E $1F $1E $1F $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27116 A655 00 0E 00 00 00 00 + .by  $00 $0E $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27117 A66D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27118 A685 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27119 A69D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27120 A6B5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27121 A6CD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27122 A6E5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27123 A6FD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27124 A715 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27125 A72D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27126 A745 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27127 A75D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27128 A775 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27129 A78D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27130 A7A5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27131 A7BD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27132 A7D5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27133 A7ED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27134 A805 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27135 A81D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27136 A835 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27137 A84D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27138 A865 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27139 A87D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27140 A895 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27141 A8AD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27142 A8C5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27143 A8DD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27144 A8F5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27145 A90D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27146 A925 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27147 A93D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27148 A955 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27149 A96D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27150 A985 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27151 A99D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27152 A9B5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27153 A9CD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27154 A9E5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27155 A9FD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27156 AA15 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27157 AA2D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27158 AA45 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27159 AA5D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27160 AA75 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27161 AA8D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27162 AAA5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27163 AABD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27164 AAD5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27165 AAED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27166 AB05 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27167 AB1D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27168 AB35 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27169 AB4D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27170 AB65 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27171 AB7D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27172 AB95 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27173 ABAD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27174 ABC5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27175 ABDD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27176 ABF5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27177 AC0D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27178 AC25 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27179 AC3D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27180 AC55 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27181 AC6D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27182 AC85 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27183 AC9D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27184 ACB5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27185 ACCD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27186 ACE5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27187 ACFD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27188 AD15 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27189 AD2D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27190 AD45 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27191 AD5D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27192 AD75 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27193 AD8D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27194 ADA5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27195 ADBD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27196 ADD5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27197 ADED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27198 AE05 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27199 AE1D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27200 AE35 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27201 AE4D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27202 AE65 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27203 AE7D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27204 AE95 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27205 AEAD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27206 AEC5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27207 AEDD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27208 AEF5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27209 AF0D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27210 AF25 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27211 AF3D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27212 AF55 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27213 AF6D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27214 AF85 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27215 AF9D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27216 AFB5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27217 AFCD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $18 $E9 $28 $E9 $38
 27218 AFE5 E9 48 E9 58 E9 68 + .by  $E9 $48 $E9 $58 $E9 $68 $E9 $78  $E9 $88 $E9 $98 $E9 $A8 $E9 $B8  $E9 $C8 $E9 $D8 $E9 $E8 $E9 $F8
 27219 AFFD E9 08 EA 18 EA 28 + .by  $E9 $08 $EA $18 $EA $28 $EA $38  $EA $48 $EA $58 $EA $68 $EA $78  $EA $88 $EA $98 $EA $A8 $EA $0B
 27220 B015 45 37 30 30 50 41 + .by  $45 $37 $30 $30 $50 $41 $47 $45  $41 $50 $4C $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27221 B02D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $0B $53 $41 $56 $45 $47 $41 $4D  $45 $44 $41 $54 $00 $00 $00 $00
 27222 B045 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $0B $46 $49 $4E $41 $4C $4D
 27223 B05D 41 50 41 50 4C 00 + .by  $41 $50 $41 $50 $4C $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27224 B075 00 00 00 85 ED 95 + .by  $00 $00 $00 $85 $ED $95 $ED $A5  $ED $B5 $ED $C5 $ED $D5 $ED $E5  $ED $F5 $ED $05 $EE $15 $EE $25
 27225 B08D EE 35 EE 35 EE 35 + .by  $EE $35 $EE $35 $EE $35 $EE $35  $EE $35 $EE $35 $EE $35 $EE $45  $EE $55 $EE $65 $EE $75 $EE $85
 27226 B0A5 EE 95 EE A5 EE B5 + .by  $EE $95 $EE $A5 $EE $B5 $EE $C5  $EE $D5 $EE $D5 $EE $D5 $EE $D5  $EE $D5 $EE $D5 $EE $D5 $EE $48
 27227 B0BD BF 70 BF 98 BF C0 + .by  $BF $70 $BF $98 $BF $C0 $BF $E8  $BF $10 $C0 $38 $C0 $60 $C0 $88  $C0 $B0 $C0 $A8 $BE $D0 $BE $F8
 27228 B0D5 BE 20 BF D4 E0 E4 + .by  $BE $20 $BF $D4 $E0 $E4 $E0 $F4  $E0 $04 $E1 $58 $E1 $68 $E1 $78  $E1 $88 $E1 $98 $E1 $A8 $E1 $B8
 27229 B0ED E1 C8 E1 D8 E1 E8 + .by  $E1 $C8 $E1 $D8 $E1 $E8 $E1 $F8  $E1 $08 $E2 $18 $E2 $28 $E2 $38  $E2 $48 $E2 $58 $E2 $68 $E2 $78
 27230 B105 E2 88 E2 98 E2 A8 + .by  $E2 $88 $E2 $98 $E2 $A8 $E2 $B8  $E2 $C8 $E2 $D8 $E2 $E8 $E2 $F8  $E2 $08 $E3 $18 $E3 $28 $E3 $38
 27231 B11D E3 48 E3 08 39 6F + .by  $E3 $48 $E3 $08 $39 $6F $75 $00  $68 $69 $74 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27232 B135 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $02 $00 $01 $00
 27233 B14D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27234 B165 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $0F $35 $6E  $66 $6F $72 $74 $75 $6E $61 $74
 27235 B17D 65 6C 79 0C 00 00 + .by  $65 $6C $79 $0C $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27236 B195 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $0D $00  $69 $73 $00 $6E $6F $77 $00 $64  $65 $61 $64 $0E $00 $00 $00 $00
 27237 B1AD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $0B
 27238 B1C5 39 6F 75 00 6D 69 + .by  $39 $6F $75 $00 $6D $69 $73 $73  $65 $64 $01 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27239 B1DD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $0A $37 $69 $6E $6E $65 $72 $00
 27240 B1F5 69 73 00 00 00 00 + .by  $69 $73 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27241 B20D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $0C $30 $72 $65 $73 $73 $00  $61 $00 $6B $65 $79 $01 $00 $00
 27242 B225 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27243 B23D 00 00 07 37 65 61 + .by  $00 $00 $07 $37 $65 $61 $70 $6F  $6E $1A $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27244 B255 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $09 $27 $61 $6E $67
 27245 B26D 73 74 65 72 1A 00 + .by  $73 $74 $65 $72 $1A $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27246 B285 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $05 $32 $65 $6E  $74 $1A $00 $00 $00 $00 $00 $00
 27247 B29D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27248 B2B5 00 00 00 00 00 06 + .by  $00 $00 $00 $00 $00 $06 $22 $72  $69 $62 $65 $1A $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27249 B2CD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $04 $23
 27250 B2E5 61 72 1A 00 00 00 + .by  $61 $72 $1A $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27251 B2FD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $06  $33 $74 $65 $70 $73 $1A $00 $00
 27252 B315 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27253 B32D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $06 $23 $61 $72 $67 $6F $1A $00  $00 $00 $00 $00 $00 $00 $00 $00
 27254 B345 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27255 B35D 00 06 2D 6F 6E 65 + .by  $00 $06 $2D $6F $6E $65 $79 $1A  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27256 B375 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $07 $23 $72 $65 $64 $69
 27257 B38D 74 1A 00 00 00 00 + .by  $74 $1A $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27258 B3A5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $0A $34 $68 $65 $00  $70 $6F $6C $69 $63 $65 $00 $00
 27259 B3BD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27260 B3D5 00 00 00 00 07 2F + .by  $00 $00 $00 $00 $07 $2F $66 $66  $69 $63 $65 $72 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27261 B3ED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $1D $39 $6F
 27262 B405 75 00 64 6F 00 6E + .by  $75 $00 $64 $6F $00 $6E $6F $74  $00 $68 $61 $76 $65 $00 $65 $6E  $6F $75 $67 $68 $00 $6D $6F $6E
 27263 B41D 65 79 01 00 00 00 + .by  $65 $79 $01 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $0D $39  $6F $75 $72 $00 $63 $68 $6F $69
 27264 B435 63 65 1F 00 00 00 + .by  $63 $65 $1F $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27265 B44D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $1A  $29 $6E $00 $66 $72 $6F $6E $74  $00 $6F $66 $00 $74 $68 $65 $00
 27266 B465 62 75 69 6C 64 69 + .by  $62 $75 $69 $6C $64 $69 $6E $67  $00 $01 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27267 B47D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27268 B495 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27269 B4AD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27270 B4C5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27271 B4DD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27272 B4F5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27273 B50D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27274 B525 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27275 B53D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27276 B555 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27277 B56D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27278 B585 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27279 B59D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27280 B5B5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27281 B5CD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27282 B5E5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27283 B5FD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27284 B615 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27285 B62D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27286 B645 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27287 B65D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27288 B675 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27289 B68D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27290 B6A5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27291 B6BD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27292 B6D5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27293 B6ED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27294 B705 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27295 B71D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27296 B735 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27297 B74D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27298 B765 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27299 B77D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27300 B795 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27301 B7AD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27302 B7C5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27303 B7DD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27304 B7F5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27305 B80D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27306 B825 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27307 B83D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27308 B855 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27309 B86D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27310 B885 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27311 B89D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27312 B8B5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27313 B8CD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27314 B8E5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27315 B8FD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27316 B915 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27317 B92D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27318 B945 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27319 B95D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27320 B975 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27321 B98D 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27322 B9A5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27323 B9BD 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27324 B9D5 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27325 B9ED 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $0B $53 $41 $46 $45
 27326 BA05 43 4C 4D 46 41 50 + .by  $43 $4C $4D $46 $41 $50 $4C $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 27327 BA1D 00 00 00 00 0B 53 + .by  $00 $00 $00 $00 $0B $53 $41 $46  $45 $43 $4C $4D $53 $41 $50 $4C
 27328
 27329 = 15B8			VARINITSIZE	= *-DATAORIGIN
 27330 = 1683			VARDATASIZE	= 5763
 27331
 27332 = BAF8			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
 27333
 27334 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
 27334 				DATA: $A475..$BAF8
 27335
 27336 02E0-02E1> D1 14			run START
 27337
 27338 				; ------------------------------------------------------------
 27339
 27340 				.macro	STATICDATA
 27341 				.by  $00 $00 $40 $41 $42 $43 $44 $45  $46 $47 $48 $49 $4A $4B $4C $4D  $4E $4F $50 $51 $52 $53 $54 $55
 27342 				.by  $56 $57 $58 $59 $5A $61 $62 $63  $64 $65 $66 $67 $68 $69 $6A $6B  $6C $6D $6E $6F $70 $71 $72 $73
 27343 				.by  $74 $75 $76 $77 $78 $79 $7A $30  $31 $32 $33 $34 $35 $36 $37 $38  $39 $2B $2F $00 $04 $54 $52 $55
 27344 				.by  $45 $00 $05 $46 $41 $4C $53 $45  $00 $0B $45 $37 $30 $30 $50 $41  $47 $45 $41 $50 $4C $00 $0B $53
 27345 				.by  $41 $56 $45 $47 $41 $4D $45 $44  $41 $54 $00 $0B $46 $49 $4E $41  $4C $4D $41 $50 $41 $50 $4C $00
 27346 				.by  $08 $39 $6F $75 $00 $68 $69 $74  $00 $00 $02 $00 $01 $00 $0F $35  $6E $66 $6F $72 $74 $75 $6E $61
 27347 				.by  $74 $65 $6C $79 $0C $00 $00 $0D  $00 $69 $73 $00 $6E $6F $77 $00  $64 $65 $61 $64 $0E $00 $0B $39
 27348 				.by  $6F $75 $00 $6D $69 $73 $73 $65  $64 $01 $00 $0A $37 $69 $6E $6E  $65 $72 $00 $69 $73 $00 $00 $0C
 27349 				.by  $30 $72 $65 $73 $73 $00 $61 $00  $6B $65 $79 $01 $00 $07 $37 $65  $61 $70 $6F $6E $1A $00 $09 $27
 27350 				.by  $61 $6E $67 $73 $74 $65 $72 $1A  $00 $05 $32 $65 $6E $74 $1A $00  $06 $22 $72 $69 $62 $65 $1A $00
 27351 				.by  $04 $23 $61 $72 $1A $00 $06 $33  $74 $65 $70 $73 $1A $00 $06 $23  $61 $72 $67 $6F $1A $00 $06 $2D
 27352 				.by  $6F $6E $65 $79 $1A $00 $07 $23  $72 $65 $64 $69 $74 $1A $00 $0A  $34 $68 $65 $00 $70 $6F $6C $69
 27353 				.by  $63 $65 $00 $07 $2F $66 $66 $69  $63 $65 $72 $00 $1D $39 $6F $75  $00 $64 $6F $00 $6E $6F $74 $00
 27354 				.by  $68 $61 $76 $65 $00 $65 $6E $6F  $75 $67 $68 $00 $6D $6F $6E $65  $79 $01 $00 $0D $39 $6F $75 $72
 27355 				.by  $00 $63 $68 $6F $69 $63 $65 $1F  $00 $00 $1A $29 $6E $00 $66 $72  $6F $6E $74 $00 $6F $66 $00 $74
 27356 				.by  $68 $65 $00 $62 $75 $69 $6C $64  $69 $6E $67 $00 $01 $00 $02 $00  $00 $00 $06 $00 $00 $00 $00 $00
 27357 				.by  $00 $00 $19 $35 $6E $61 $62 $6C  $65 $00 $74 $6F $00 $6C $6F $61  $64 $00 $27 $21 $2E $27 $33 $34
 27358 				.by  $25 $32 $33 $01 $00 $02 $04 $01  $00 $03 $00 $0D $00 $00 $02 $25  $1A $00 $03 $00 $22 $1A $00 $03
 27359 				.by  $00 $29 $1A $00 $03 $00 $33 $1A  $00 $09 $33 $61 $76 $69 $6E $67  $0E $0E $0E $00 $0A $2C $6F $61
 27360 				.by  $64 $69 $6E $67 $0E $0E $0E $00  $12 $29 $6E $76 $61 $6C $69 $64  $00 $73 $61 $76 $65 $00 $67 $61
 27361 				.by  $6D $65 $01 $00 $02 $37 $1A $00  $0E $25 $32 $32 $2F $32 $1A $10  $00 $65 $6E $65 $6D $79 $0E $00
 27362 				.by  $02 $0C $00 $00 $02 $04 $00 $00  $02 $09 $00 $00 $0B $53 $41 $46  $45 $43 $4C $4D $46 $41 $50 $4C
 27363 				.by  $00 $0B $53 $41 $46 $45 $43 $4C  $4D $53 $41 $50 $4C $00 $02 $04  $0E $00 $02 $09 $1F $00 $04 $04
 27364 				.by  $09 $1F $00 $00 $03 $0E $0E $0E  $00 $03 $08 $10 $0D $00 $02 $01  $01 $00 $03 $09 $00 $1F $00 $02
 27365 				.by  $00 $08 $00 $03 $00 $00 $00 $00  $03 $00 $2D $09 $00 $03 $09 $1F  $00 $00 $09 $2E $2F $00 $38 $22
 27366 				.by  $29 $2F $33 $01 $00 $6C $6A $3B  $FF $FF $6B $2B $2A $6F $FF $70  $75 $9B $69 $2D $3D $76 $FF $63
 27367 				.by  $FF $FF $62 $78 $7A $34 $FF $33  $36 $1B $35 $32 $31 $2C $20 $2E  $6E $FF $6D $2F $81 $72 $FF $65
 27368 				.by  $79 $7F $74 $77 $71 $39 $FF $30  $37 $7E $38 $3E $FF $66 $68 $64  $FF $82 $67 $73 $61 $4C $4A $3A
 27369 				.by  $FF $FF $4B $5C $5E $4F $FF $50  $55 $FF $49 $5F $7C $56 $FF $43  $FF $FF $42 $58 $5A $24 $FF $23
 27370 				.by  $26 $FF $25 $22 $21 $5B $3B $5D  $4E $FF $4D $3F $FF $52 $FF $45  $59 $FF $54 $57 $51 $28 $FF $29
 27371 				.by  $27 $FF $40 $FF $FF $46 $48 $44  $FF $FF $47 $53 $41 $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 27372 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 27373 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 27374 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 27375 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 27376 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF
 27377 				.endm
 27378
 27379 					end
